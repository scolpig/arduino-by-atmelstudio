
arduino_uno.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  00000bb8  00000c4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bb8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000017  0080011a  0080011a  00000c66  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c66  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000cc4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00000d04  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012d0  00000000  00000000  00000e14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ce3  00000000  00000000  000020e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bc9  00000000  00000000  00002dc7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000250  00000000  00000000  00003990  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000539  00000000  00000000  00003be0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000944  00000000  00000000  00004119  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00004a5d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 40 00 	jmp	0x80	; 0x80 <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 28 01 	jmp	0x250	; 0x250 <__vector_14>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	45 46       	sbci	r20, 0x65	; 101
  6a:	47 65       	ori	r20, 0x57	; 87
  6c:	66 67       	ori	r22, 0x76	; 118
	...

0000006f <__c.2314>:
  6f:	20 2b 2d 2e 30 31 32 33 34 35 36 37 38 39 68 00      +-.0123456789h.
	...

00000080 <__ctors_end>:
  80:	11 24       	eor	r1, r1
  82:	1f be       	out	0x3f, r1	; 63
  84:	cf ef       	ldi	r28, 0xFF	; 255
  86:	d8 e0       	ldi	r29, 0x08	; 8
  88:	de bf       	out	0x3e, r29	; 62
  8a:	cd bf       	out	0x3d, r28	; 61

0000008c <__do_copy_data>:
  8c:	11 e0       	ldi	r17, 0x01	; 1
  8e:	a0 e0       	ldi	r26, 0x00	; 0
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	e8 eb       	ldi	r30, 0xB8	; 184
  94:	fb e0       	ldi	r31, 0x0B	; 11
  96:	02 c0       	rjmp	.+4      	; 0x9c <__do_copy_data+0x10>
  98:	05 90       	lpm	r0, Z+
  9a:	0d 92       	st	X+, r0
  9c:	aa 31       	cpi	r26, 0x1A	; 26
  9e:	b1 07       	cpc	r27, r17
  a0:	d9 f7       	brne	.-10     	; 0x98 <__do_copy_data+0xc>

000000a2 <__do_clear_bss>:
  a2:	21 e0       	ldi	r18, 0x01	; 1
  a4:	aa e1       	ldi	r26, 0x1A	; 26
  a6:	b1 e0       	ldi	r27, 0x01	; 1
  a8:	01 c0       	rjmp	.+2      	; 0xac <.do_clear_bss_start>

000000aa <.do_clear_bss_loop>:
  aa:	1d 92       	st	X+, r1

000000ac <.do_clear_bss_start>:
  ac:	a1 33       	cpi	r26, 0x31	; 49
  ae:	b2 07       	cpc	r27, r18
  b0:	e1 f7       	brne	.-8      	; 0xaa <.do_clear_bss_loop>
  b2:	0e 94 25 01 	call	0x24a	; 0x24a <main>
  b6:	0c 94 da 05 	jmp	0xbb4	; 0xbb4 <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <FND_update_time>:
	FND[1] = FND4digit_font[number/10%10];
	FND[2] = FND4digit_font[number/100%10];
	FND[3] = FND4digit_font[number/1000%10];
	return;
}
void FND_update_time(int msec, char sec){
  be:	0f 93       	push	r16
  c0:	1f 93       	push	r17
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
  c6:	8c 01       	movw	r16, r24
  c8:	26 2f       	mov	r18, r22
	FND[0] = FND4digit_font[msec/10%10];
  ca:	ca e1       	ldi	r28, 0x1A	; 26
  cc:	d1 e0       	ldi	r29, 0x01	; 1
  ce:	ea e0       	ldi	r30, 0x0A	; 10
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	bf 01       	movw	r22, r30
  d4:	0e 94 25 03 	call	0x64a	; 0x64a <__divmodhi4>
  d8:	cb 01       	movw	r24, r22
  da:	bf 01       	movw	r22, r30
  dc:	0e 94 25 03 	call	0x64a	; 0x64a <__divmodhi4>
  e0:	dc 01       	movw	r26, r24
  e2:	a6 5f       	subi	r26, 0xF6	; 246
  e4:	be 4f       	sbci	r27, 0xFE	; 254
  e6:	8c 91       	ld	r24, X
  e8:	88 83       	st	Y, r24
	FND[1] = FND4digit_font[msec/100%10];
  ea:	c8 01       	movw	r24, r16
  ec:	64 e6       	ldi	r22, 0x64	; 100
  ee:	70 e0       	ldi	r23, 0x00	; 0
  f0:	0e 94 25 03 	call	0x64a	; 0x64a <__divmodhi4>
  f4:	cb 01       	movw	r24, r22
  f6:	bf 01       	movw	r22, r30
  f8:	0e 94 25 03 	call	0x64a	; 0x64a <__divmodhi4>
  fc:	fc 01       	movw	r30, r24
  fe:	e6 5f       	subi	r30, 0xF6	; 246
 100:	fe 4f       	sbci	r31, 0xFE	; 254
 102:	80 81       	ld	r24, Z
 104:	89 83       	std	Y+1, r24	; 0x01
	FND[2] = FND4digit_font[sec%10] & ~(1 << FND_p);
 106:	8d ec       	ldi	r24, 0xCD	; 205
 108:	28 9f       	mul	r18, r24
 10a:	e1 2d       	mov	r30, r1
 10c:	11 24       	eor	r1, r1
 10e:	e6 95       	lsr	r30
 110:	e6 95       	lsr	r30
 112:	e6 95       	lsr	r30
 114:	3e 2f       	mov	r19, r30
 116:	33 0f       	add	r19, r19
 118:	93 2f       	mov	r25, r19
 11a:	99 0f       	add	r25, r25
 11c:	99 0f       	add	r25, r25
 11e:	93 0f       	add	r25, r19
 120:	29 1b       	sub	r18, r25
 122:	a2 2f       	mov	r26, r18
 124:	b0 e0       	ldi	r27, 0x00	; 0
 126:	a6 5f       	subi	r26, 0xF6	; 246
 128:	be 4f       	sbci	r27, 0xFE	; 254
 12a:	9c 91       	ld	r25, X
 12c:	9b 7f       	andi	r25, 0xFB	; 251
 12e:	9a 83       	std	Y+2, r25	; 0x02
	FND[3] = FND4digit_font[sec/10%10];
 130:	e8 9f       	mul	r30, r24
 132:	81 2d       	mov	r24, r1
 134:	11 24       	eor	r1, r1
 136:	86 95       	lsr	r24
 138:	86 95       	lsr	r24
 13a:	86 95       	lsr	r24
 13c:	88 0f       	add	r24, r24
 13e:	98 2f       	mov	r25, r24
 140:	99 0f       	add	r25, r25
 142:	99 0f       	add	r25, r25
 144:	89 0f       	add	r24, r25
 146:	e8 1b       	sub	r30, r24
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	e6 5f       	subi	r30, 0xF6	; 246
 14c:	fe 4f       	sbci	r31, 0xFE	; 254
 14e:	80 81       	ld	r24, Z
 150:	8b 83       	std	Y+3, r24	; 0x03
	return;
}
 152:	df 91       	pop	r29
 154:	cf 91       	pop	r28
 156:	1f 91       	pop	r17
 158:	0f 91       	pop	r16
 15a:	08 95       	ret

0000015c <Keypad_init>:
			}
		}
	}
}
void Keypad_init(void){
	Keypad_PORT_DDR |= 0b11110000;
 15c:	8a b1       	in	r24, 0x0a	; 10
 15e:	80 6f       	ori	r24, 0xF0	; 240
 160:	8a b9       	out	0x0a, r24	; 10
	Keypad_PORT |= 0b11110000;
 162:	8b b1       	in	r24, 0x0b	; 11
 164:	80 6f       	ori	r24, 0xF0	; 240
 166:	8b b9       	out	0x0b, r24	; 11
	Keypad_PIN_DDR &= 0b11110000;
 168:	84 b1       	in	r24, 0x04	; 4
 16a:	80 7f       	andi	r24, 0xF0	; 240
 16c:	84 b9       	out	0x04, r24	; 4
	Keypad_PIN_PORT |= 0b00001111;
 16e:	85 b1       	in	r24, 0x05	; 5
 170:	8f 60       	ori	r24, 0x0F	; 15
 172:	85 b9       	out	0x05, r24	; 5
 174:	08 95       	ret

00000176 <Keyscan_sub>:
}
char Keyscan_sub(void){
	if(!(Keypad_PIN & 0b00000001))return 1;
 176:	18 9b       	sbis	0x03, 0	; 3
 178:	08 c0       	rjmp	.+16     	; 0x18a <Keyscan_sub+0x14>
	else if(!(Keypad_PIN & 0b00000010))return 2;
 17a:	19 9b       	sbis	0x03, 1	; 3
 17c:	08 c0       	rjmp	.+16     	; 0x18e <Keyscan_sub+0x18>
	else if(!(Keypad_PIN & 0b00000100))return 3;
 17e:	1a 9b       	sbis	0x03, 2	; 3
 180:	08 c0       	rjmp	.+16     	; 0x192 <Keyscan_sub+0x1c>
	else if(!(Keypad_PIN & 0b00001000))return 4;
 182:	1b 9b       	sbis	0x03, 3	; 3
 184:	08 c0       	rjmp	.+16     	; 0x196 <Keyscan_sub+0x20>
	else return 0;
 186:	80 e0       	ldi	r24, 0x00	; 0
 188:	08 95       	ret
	Keypad_PORT |= 0b11110000;
	Keypad_PIN_DDR &= 0b11110000;
	Keypad_PIN_PORT |= 0b00001111;
}
char Keyscan_sub(void){
	if(!(Keypad_PIN & 0b00000001))return 1;
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	08 95       	ret
	else if(!(Keypad_PIN & 0b00000010))return 2;
 18e:	82 e0       	ldi	r24, 0x02	; 2
 190:	08 95       	ret
	else if(!(Keypad_PIN & 0b00000100))return 3;
 192:	83 e0       	ldi	r24, 0x03	; 3
 194:	08 95       	ret
	else if(!(Keypad_PIN & 0b00001000))return 4;
 196:	84 e0       	ldi	r24, 0x04	; 4
	else return 0;
}
 198:	08 95       	ret

0000019a <Keyscan>:
char Keyscan(void){
 19a:	0f 93       	push	r16
 19c:	1f 93       	push	r17
 19e:	cf 93       	push	r28
 1a0:	df 93       	push	r29
	char data;
	for(int i=0;i<4;i++){
 1a2:	c0 e0       	ldi	r28, 0x00	; 0
 1a4:	d0 e0       	ldi	r29, 0x00	; 0
		Keypad_PORT |= 0b11110000;
		Keypad_PORT &= ~(0b10000000>>i);
 1a6:	00 e8       	ldi	r16, 0x80	; 128
 1a8:	10 e0       	ldi	r17, 0x00	; 0
	else return 0;
}
char Keyscan(void){
	char data;
	for(int i=0;i<4;i++){
		Keypad_PORT |= 0b11110000;
 1aa:	8b b1       	in	r24, 0x0b	; 11
 1ac:	80 6f       	ori	r24, 0xF0	; 240
 1ae:	8b b9       	out	0x0b, r24	; 11
		Keypad_PORT &= ~(0b10000000>>i);
 1b0:	9b b1       	in	r25, 0x0b	; 11
 1b2:	98 01       	movw	r18, r16
 1b4:	0c 2e       	mov	r0, r28
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <Keyscan+0x22>
 1b8:	35 95       	asr	r19
 1ba:	27 95       	ror	r18
 1bc:	0a 94       	dec	r0
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <Keyscan+0x1e>
 1c0:	82 2f       	mov	r24, r18
 1c2:	80 95       	com	r24
 1c4:	89 23       	and	r24, r25
 1c6:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c8:	85 e0       	ldi	r24, 0x05	; 5
 1ca:	8a 95       	dec	r24
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <Keyscan+0x30>
 1ce:	00 00       	nop
		_delay_us(1);
		if(Keyscan_sub())return 'A' + Keyscan_sub() + i*4;
 1d0:	0e 94 bb 00 	call	0x176	; 0x176 <Keyscan_sub>
 1d4:	88 23       	and	r24, r24
 1d6:	39 f0       	breq	.+14     	; 0x1e6 <Keyscan+0x4c>
 1d8:	0e 94 bb 00 	call	0x176	; 0x176 <Keyscan_sub>
 1dc:	8f 5b       	subi	r24, 0xBF	; 191
 1de:	cc 0f       	add	r28, r28
 1e0:	cc 0f       	add	r28, r28
 1e2:	8c 0f       	add	r24, r28
 1e4:	05 c0       	rjmp	.+10     	; 0x1f0 <Keyscan+0x56>
	else if(!(Keypad_PIN & 0b00001000))return 4;
	else return 0;
}
char Keyscan(void){
	char data;
	for(int i=0;i<4;i++){
 1e6:	21 96       	adiw	r28, 0x01	; 1
 1e8:	c4 30       	cpi	r28, 0x04	; 4
 1ea:	d1 05       	cpc	r29, r1
 1ec:	f1 f6       	brne	.-68     	; 0x1aa <Keyscan+0x10>
		Keypad_PORT |= 0b11110000;
		Keypad_PORT &= ~(0b10000000>>i);
		_delay_us(1);
		if(Keyscan_sub())return 'A' + Keyscan_sub() + i*4;
	}
	return 'A';
 1ee:	81 e4       	ldi	r24, 0x41	; 65
}
 1f0:	df 91       	pop	r29
 1f2:	cf 91       	pop	r28
 1f4:	1f 91       	pop	r17
 1f6:	0f 91       	pop	r16
 1f8:	08 95       	ret

000001fa <Keypad_main>:
#include "Keypad.h"

int Keypad_main(void){
	int number=0;
	char long_key_flag = 0;
	Keypad_init();
 1fa:	0e 94 ae 00 	call	0x15c	; 0x15c <Keypad_init>
	UART0_init(9600);
 1fe:	60 e8       	ldi	r22, 0x80	; 128
 200:	75 e2       	ldi	r23, 0x25	; 37
 202:	80 e0       	ldi	r24, 0x00	; 0
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <UART0_init>
#include "Uart.h"
#include "Keypad.h"

int Keypad_main(void){
	int number=0;
	char long_key_flag = 0;
 20a:	c0 e0       	ldi	r28, 0x00	; 0
	while(1){
		if(long_key_flag){
			if(Keyscan() != 'A'){
				TX0_char(Keyscan());
				if(Keyscan() == 'B')TX0_string("Hello");
				long_key_flag = 0;
 20c:	11 e0       	ldi	r17, 0x01	; 1
 20e:	d0 e0       	ldi	r29, 0x00	; 0
 210:	01 c0       	rjmp	.+2      	; 0x214 <Keypad_main+0x1a>
 212:	cd 2f       	mov	r28, r29
	int number=0;
	char long_key_flag = 0;
	Keypad_init();
	UART0_init(9600);
	while(1){
		if(long_key_flag){
 214:	cc 23       	and	r28, r28
 216:	91 f0       	breq	.+36     	; 0x23c <Keypad_main+0x42>
			if(Keyscan() != 'A'){
 218:	0e 94 cd 00 	call	0x19a	; 0x19a <Keyscan>
 21c:	81 34       	cpi	r24, 0x41	; 65
 21e:	d1 f3       	breq	.-12     	; 0x214 <Keypad_main+0x1a>
				TX0_char(Keyscan());
 220:	0e 94 cd 00 	call	0x19a	; 0x19a <Keyscan>
 224:	0e 94 bd 01 	call	0x37a	; 0x37a <TX0_char>
				if(Keyscan() == 'B')TX0_string("Hello");
 228:	0e 94 cd 00 	call	0x19a	; 0x19a <Keyscan>
 22c:	82 34       	cpi	r24, 0x42	; 66
 22e:	89 f7       	brne	.-30     	; 0x212 <Keypad_main+0x18>
 230:	84 e1       	ldi	r24, 0x14	; 20
 232:	91 e0       	ldi	r25, 0x01	; 1
 234:	0e 94 c5 01 	call	0x38a	; 0x38a <TX0_string>
				long_key_flag = 0;
 238:	cd 2f       	mov	r28, r29
 23a:	ec cf       	rjmp	.-40     	; 0x214 <Keypad_main+0x1a>
			}
		}
		else {
			if(Keyscan() == 'A'){
 23c:	0e 94 cd 00 	call	0x19a	; 0x19a <Keyscan>
	while(1){
		if(long_key_flag){
			if(Keyscan() != 'A'){
				TX0_char(Keyscan());
				if(Keyscan() == 'B')TX0_string("Hello");
				long_key_flag = 0;
 240:	c1 2f       	mov	r28, r17
 242:	81 34       	cpi	r24, 0x41	; 65
 244:	39 f3       	breq	.-50     	; 0x214 <Keypad_main+0x1a>
 246:	cd 2f       	mov	r28, r29
 248:	e5 cf       	rjmp	.-54     	; 0x214 <Keypad_main+0x1a>

0000024a <main>:

extern int Keypad_main(void);

int main(void)
{
    Keypad_main();
 24a:	0e 94 fd 00 	call	0x1fa	; 0x1fa <Keypad_main>
 24e:	ff cf       	rjmp	.-2      	; 0x24e <main+0x4>

00000250 <__vector_14>:

volatile char start_flag, lap_flag, clear_flag, time_flag;
volatile int msec;
volatile char i, sec, min;

ISR(TIMER0_COMPA_vect){
 250:	1f 92       	push	r1
 252:	0f 92       	push	r0
 254:	0f b6       	in	r0, 0x3f	; 63
 256:	0f 92       	push	r0
 258:	11 24       	eor	r1, r1
 25a:	2f 93       	push	r18
 25c:	3f 93       	push	r19
 25e:	4f 93       	push	r20
 260:	5f 93       	push	r21
 262:	6f 93       	push	r22
 264:	7f 93       	push	r23
 266:	8f 93       	push	r24
 268:	9f 93       	push	r25
 26a:	af 93       	push	r26
 26c:	bf 93       	push	r27
 26e:	ef 93       	push	r30
 270:	ff 93       	push	r31
	
	if(start_flag)msec++;
 272:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <start_flag>
 276:	88 23       	and	r24, r24
 278:	49 f0       	breq	.+18     	; 0x28c <__vector_14+0x3c>
 27a:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <msec>
 27e:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <msec+0x1>
 282:	01 96       	adiw	r24, 0x01	; 1
 284:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <msec+0x1>
 288:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <msec>
	if(msec >= 1000){
 28c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <msec>
 290:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <msec+0x1>
 294:	88 3e       	cpi	r24, 0xE8	; 232
 296:	93 40       	sbci	r25, 0x03	; 3
 298:	d4 f0       	brlt	.+52     	; 0x2ce <__vector_14+0x7e>
		msec = 0;
 29a:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <msec+0x1>
 29e:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <msec>
		sec++;
 2a2:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <sec>
 2a6:	8f 5f       	subi	r24, 0xFF	; 255
 2a8:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <sec>
		if(sec >= 60){
 2ac:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <sec>
 2b0:	8c 33       	cpi	r24, 0x3C	; 60
 2b2:	68 f0       	brcs	.+26     	; 0x2ce <__vector_14+0x7e>
			sec = 0;
 2b4:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <sec>
			min++;
 2b8:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <min>
 2bc:	8f 5f       	subi	r24, 0xFF	; 255
 2be:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <min>
			if(min >= 60)min = 0;
 2c2:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <min>
 2c6:	8c 33       	cpi	r24, 0x3C	; 60
 2c8:	10 f0       	brcs	.+4      	; 0x2ce <__vector_14+0x7e>
 2ca:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <min>
		}
		//FND_clock(sec, min);
	}
	if(!(msec%10)){
 2ce:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <msec>
 2d2:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <msec+0x1>
 2d6:	6a e0       	ldi	r22, 0x0A	; 10
 2d8:	70 e0       	ldi	r23, 0x00	; 0
 2da:	0e 94 25 03 	call	0x64a	; 0x64a <__divmodhi4>
 2de:	89 2b       	or	r24, r25
 2e0:	39 f4       	brne	.+14     	; 0x2f0 <__vector_14+0xa0>
		if(lap_flag)time_flag = 1;
 2e2:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <lap_flag>
 2e6:	88 23       	and	r24, r24
 2e8:	19 f0       	breq	.+6      	; 0x2f0 <__vector_14+0xa0>
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <time_flag>
	}
	if(clear_flag){
 2f0:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <clear_flag>
 2f4:	88 23       	and	r24, r24
 2f6:	91 f0       	breq	.+36     	; 0x31c <__vector_14+0xcc>
		clear_flag = 0;
 2f8:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <clear_flag>
		//time_flag = 1;
		FND_update_time(msec, sec);
 2fc:	60 91 23 01 	lds	r22, 0x0123	; 0x800123 <sec>
 300:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <msec>
 304:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <msec+0x1>
 308:	0e 94 5f 00 	call	0xbe	; 0xbe <FND_update_time>
		msec = 0;
 30c:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <msec+0x1>
 310:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <msec>
		sec = 0;
 314:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <sec>
		min = 0;
 318:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <min>
	}
	i++;
 31c:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <i>
 320:	8f 5f       	subi	r24, 0xFF	; 255
 322:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <i>
	if(i>=4)i=0;
 326:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <i>
 32a:	84 30       	cpi	r24, 0x04	; 4
 32c:	10 f0       	brcs	.+4      	; 0x332 <__vector_14+0xe2>
 32e:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <i>
	FND_COM_PORT &= 0b11110000;
 332:	85 b1       	in	r24, 0x05	; 5
 334:	80 7f       	andi	r24, 0xF0	; 240
 336:	85 b9       	out	0x05, r24	; 5
	FND_COM_PORT |= FND4digit_digit[i];
 338:	e0 91 21 01 	lds	r30, 0x0121	; 0x800121 <i>
 33c:	95 b1       	in	r25, 0x05	; 5
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	ea 5f       	subi	r30, 0xFA	; 250
 342:	fe 4f       	sbci	r31, 0xFE	; 254
 344:	80 81       	ld	r24, Z
 346:	89 2b       	or	r24, r25
 348:	85 b9       	out	0x05, r24	; 5
	FND_DATA_PORT = FND[i];
 34a:	e0 91 21 01 	lds	r30, 0x0121	; 0x800121 <i>
 34e:	f0 e0       	ldi	r31, 0x00	; 0
 350:	e6 5e       	subi	r30, 0xE6	; 230
 352:	fe 4f       	sbci	r31, 0xFE	; 254
 354:	80 81       	ld	r24, Z
 356:	8b b9       	out	0x0b, r24	; 11
	//if(!(msec%500))PORTB ^= 1<<PORTB5;
}
 358:	ff 91       	pop	r31
 35a:	ef 91       	pop	r30
 35c:	bf 91       	pop	r27
 35e:	af 91       	pop	r26
 360:	9f 91       	pop	r25
 362:	8f 91       	pop	r24
 364:	7f 91       	pop	r23
 366:	6f 91       	pop	r22
 368:	5f 91       	pop	r21
 36a:	4f 91       	pop	r20
 36c:	3f 91       	pop	r19
 36e:	2f 91       	pop	r18
 370:	0f 90       	pop	r0
 372:	0f be       	out	0x3f, r0	; 63
 374:	0f 90       	pop	r0
 376:	1f 90       	pop	r1
 378:	18 95       	reti

0000037a <TX0_char>:
	TX0_char('0' + data/1000%10);
	TX0_char('0' + data/100%10);
	TX0_char('0' + data/10%10);
	TX0_char('0' + data%10);
	return;
}
 37a:	e0 ec       	ldi	r30, 0xC0	; 192
 37c:	f0 e0       	ldi	r31, 0x00	; 0
 37e:	90 81       	ld	r25, Z
 380:	95 ff       	sbrs	r25, 5
 382:	fd cf       	rjmp	.-6      	; 0x37e <TX0_char+0x4>
 384:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 388:	08 95       	ret

0000038a <TX0_string>:
 38a:	cf 93       	push	r28
 38c:	df 93       	push	r29
 38e:	ec 01       	movw	r28, r24
 390:	88 81       	ld	r24, Y
 392:	88 23       	and	r24, r24
 394:	31 f0       	breq	.+12     	; 0x3a2 <TX0_string+0x18>
 396:	21 96       	adiw	r28, 0x01	; 1
 398:	0e 94 bd 01 	call	0x37a	; 0x37a <TX0_char>
 39c:	89 91       	ld	r24, Y+
 39e:	81 11       	cpse	r24, r1
 3a0:	fb cf       	rjmp	.-10     	; 0x398 <TX0_string+0xe>
 3a2:	df 91       	pop	r29
 3a4:	cf 91       	pop	r28
 3a6:	08 95       	ret

000003a8 <UART0_init>:
void UART0_init(unsigned long baud){
 3a8:	cf 92       	push	r12
 3aa:	df 92       	push	r13
 3ac:	ef 92       	push	r14
 3ae:	ff 92       	push	r15
 3b0:	6b 01       	movw	r12, r22
 3b2:	7c 01       	movw	r14, r24
	FILE* fpStdio = fdevopen(TX0_char, NULL);
 3b4:	60 e0       	ldi	r22, 0x00	; 0
 3b6:	70 e0       	ldi	r23, 0x00	; 0
 3b8:	8d eb       	ldi	r24, 0xBD	; 189
 3ba:	91 e0       	ldi	r25, 0x01	; 1
 3bc:	0e 94 b1 03 	call	0x762	; 0x762 <fdevopen>
	char i;
	UCSR0B |= 1 << RXCIE0 | 1 << RXEN0 | 1 << TXEN0; //송신, 수신, 수신 인터럽트 활성화
 3c0:	e1 ec       	ldi	r30, 0xC1	; 193
 3c2:	f0 e0       	ldi	r31, 0x00	; 0
 3c4:	80 81       	ld	r24, Z
 3c6:	88 69       	ori	r24, 0x98	; 152
 3c8:	80 83       	st	Z, r24
	UCSR0C |= 1 << UCSZ00 | 1 << UCSZ01;			 //8비트 통신
 3ca:	e2 ec       	ldi	r30, 0xC2	; 194
 3cc:	f0 e0       	ldi	r31, 0x00	; 0
 3ce:	80 81       	ld	r24, Z
 3d0:	86 60       	ori	r24, 0x06	; 6
 3d2:	80 83       	st	Z, r24
	
	UBRR0H = (F_CPU/16/baud-1) >> 8;
 3d4:	60 e4       	ldi	r22, 0x40	; 64
 3d6:	72 e4       	ldi	r23, 0x42	; 66
 3d8:	8f e0       	ldi	r24, 0x0F	; 15
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	a7 01       	movw	r20, r14
 3de:	96 01       	movw	r18, r12
 3e0:	0e 94 39 03 	call	0x672	; 0x672 <__udivmodsi4>
 3e4:	da 01       	movw	r26, r20
 3e6:	c9 01       	movw	r24, r18
 3e8:	01 97       	sbiw	r24, 0x01	; 1
 3ea:	a1 09       	sbc	r26, r1
 3ec:	b1 09       	sbc	r27, r1
 3ee:	89 2f       	mov	r24, r25
 3f0:	9a 2f       	mov	r25, r26
 3f2:	ab 2f       	mov	r26, r27
 3f4:	bb 27       	eor	r27, r27
 3f6:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (F_CPU/16/baud-1) & 0xFF;
 3fa:	21 50       	subi	r18, 0x01	; 1
 3fc:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	i = UDR0;
 400:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 404:	8f e9       	ldi	r24, 0x9F	; 159
 406:	9f e0       	ldi	r25, 0x0F	; 15
 408:	01 97       	sbiw	r24, 0x01	; 1
 40a:	f1 f7       	brne	.-4      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 40c:	00 c0       	rjmp	.+0      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 40e:	00 00       	nop
	_delay_ms(1);
	return;
 410:	ff 90       	pop	r15
 412:	ef 90       	pop	r14
 414:	df 90       	pop	r13
 416:	cf 90       	pop	r12
 418:	08 95       	ret

0000041a <vfprintf>:
 41a:	ab e0       	ldi	r26, 0x0B	; 11
 41c:	b0 e0       	ldi	r27, 0x00	; 0
 41e:	e3 e1       	ldi	r30, 0x13	; 19
 420:	f2 e0       	ldi	r31, 0x02	; 2
 422:	0c 94 5f 03 	jmp	0x6be	; 0x6be <__prologue_saves__+0x8>
 426:	6c 01       	movw	r12, r24
 428:	7b 01       	movw	r14, r22
 42a:	3a 01       	movw	r6, r20
 42c:	fc 01       	movw	r30, r24
 42e:	17 82       	std	Z+7, r1	; 0x07
 430:	16 82       	std	Z+6, r1	; 0x06
 432:	83 81       	ldd	r24, Z+3	; 0x03
 434:	81 ff       	sbrs	r24, 1
 436:	03 c1       	rjmp	.+518    	; 0x63e <vfprintf+0x224>
 438:	ce 01       	movw	r24, r28
 43a:	01 96       	adiw	r24, 0x01	; 1
 43c:	4c 01       	movw	r8, r24
 43e:	f6 01       	movw	r30, r12
 440:	b3 80       	ldd	r11, Z+3	; 0x03
 442:	f7 01       	movw	r30, r14
 444:	b3 fc       	sbrc	r11, 3
 446:	05 91       	lpm	r16, Z+
 448:	b3 fe       	sbrs	r11, 3
 44a:	01 91       	ld	r16, Z+
 44c:	7f 01       	movw	r14, r30
 44e:	00 23       	and	r16, r16
 450:	09 f4       	brne	.+2      	; 0x454 <vfprintf+0x3a>
 452:	f1 c0       	rjmp	.+482    	; 0x636 <vfprintf+0x21c>
 454:	05 32       	cpi	r16, 0x25	; 37
 456:	49 f4       	brne	.+18     	; 0x46a <vfprintf+0x50>
 458:	b3 fc       	sbrc	r11, 3
 45a:	05 91       	lpm	r16, Z+
 45c:	b3 fe       	sbrs	r11, 3
 45e:	01 91       	ld	r16, Z+
 460:	7f 01       	movw	r14, r30
 462:	05 32       	cpi	r16, 0x25	; 37
 464:	11 f0       	breq	.+4      	; 0x46a <vfprintf+0x50>
 466:	10 e0       	ldi	r17, 0x00	; 0
 468:	19 c0       	rjmp	.+50     	; 0x49c <vfprintf+0x82>
 46a:	b6 01       	movw	r22, r12
 46c:	80 2f       	mov	r24, r16
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 474:	53 01       	movw	r10, r6
 476:	35 01       	movw	r6, r10
 478:	e2 cf       	rjmp	.-60     	; 0x43e <vfprintf+0x24>
 47a:	00 23       	and	r16, r16
 47c:	09 f4       	brne	.+2      	; 0x480 <vfprintf+0x66>
 47e:	db c0       	rjmp	.+438    	; 0x636 <vfprintf+0x21c>
 480:	60 2f       	mov	r22, r16
 482:	70 e0       	ldi	r23, 0x00	; 0
 484:	8f e6       	ldi	r24, 0x6F	; 111
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	0e 94 a6 03 	call	0x74c	; 0x74c <strchr_P>
 48c:	89 2b       	or	r24, r25
 48e:	49 f0       	breq	.+18     	; 0x4a2 <vfprintf+0x88>
 490:	f7 01       	movw	r30, r14
 492:	b3 fc       	sbrc	r11, 3
 494:	05 91       	lpm	r16, Z+
 496:	b3 fe       	sbrs	r11, 3
 498:	01 91       	ld	r16, Z+
 49a:	7f 01       	movw	r14, r30
 49c:	17 ff       	sbrs	r17, 7
 49e:	ed cf       	rjmp	.-38     	; 0x47a <vfprintf+0x60>
 4a0:	04 c0       	rjmp	.+8      	; 0x4aa <vfprintf+0x90>
 4a2:	03 32       	cpi	r16, 0x23	; 35
 4a4:	39 f0       	breq	.+14     	; 0x4b4 <vfprintf+0x9a>
 4a6:	0c 36       	cpi	r16, 0x6C	; 108
 4a8:	19 f0       	breq	.+6      	; 0x4b0 <vfprintf+0x96>
 4aa:	01 11       	cpse	r16, r1
 4ac:	05 c0       	rjmp	.+10     	; 0x4b8 <vfprintf+0x9e>
 4ae:	c3 c0       	rjmp	.+390    	; 0x636 <vfprintf+0x21c>
 4b0:	10 68       	ori	r17, 0x80	; 128
 4b2:	ee cf       	rjmp	.-36     	; 0x490 <vfprintf+0x76>
 4b4:	10 e1       	ldi	r17, 0x10	; 16
 4b6:	ec cf       	rjmp	.-40     	; 0x490 <vfprintf+0x76>
 4b8:	60 2f       	mov	r22, r16
 4ba:	70 e0       	ldi	r23, 0x00	; 0
 4bc:	88 e6       	ldi	r24, 0x68	; 104
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	0e 94 a6 03 	call	0x74c	; 0x74c <strchr_P>
 4c4:	89 2b       	or	r24, r25
 4c6:	41 f0       	breq	.+16     	; 0x4d8 <vfprintf+0xbe>
 4c8:	53 01       	movw	r10, r6
 4ca:	f4 e0       	ldi	r31, 0x04	; 4
 4cc:	af 0e       	add	r10, r31
 4ce:	b1 1c       	adc	r11, r1
 4d0:	b6 01       	movw	r22, r12
 4d2:	8f e3       	ldi	r24, 0x3F	; 63
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	10 c0       	rjmp	.+32     	; 0x4f8 <vfprintf+0xde>
 4d8:	03 36       	cpi	r16, 0x63	; 99
 4da:	31 f0       	breq	.+12     	; 0x4e8 <vfprintf+0xce>
 4dc:	03 37       	cpi	r16, 0x73	; 115
 4de:	79 f0       	breq	.+30     	; 0x4fe <vfprintf+0xe4>
 4e0:	03 35       	cpi	r16, 0x53	; 83
 4e2:	11 f5       	brne	.+68     	; 0x528 <vfprintf+0x10e>
 4e4:	11 60       	ori	r17, 0x01	; 1
 4e6:	0b c0       	rjmp	.+22     	; 0x4fe <vfprintf+0xe4>
 4e8:	53 01       	movw	r10, r6
 4ea:	82 e0       	ldi	r24, 0x02	; 2
 4ec:	a8 0e       	add	r10, r24
 4ee:	b1 1c       	adc	r11, r1
 4f0:	b6 01       	movw	r22, r12
 4f2:	f3 01       	movw	r30, r6
 4f4:	80 81       	ld	r24, Z
 4f6:	91 81       	ldd	r25, Z+1	; 0x01
 4f8:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 4fc:	bc cf       	rjmp	.-136    	; 0x476 <vfprintf+0x5c>
 4fe:	53 01       	movw	r10, r6
 500:	f2 e0       	ldi	r31, 0x02	; 2
 502:	af 0e       	add	r10, r31
 504:	b1 1c       	adc	r11, r1
 506:	f3 01       	movw	r30, r6
 508:	60 80       	ld	r6, Z
 50a:	71 80       	ldd	r7, Z+1	; 0x01
 50c:	f3 01       	movw	r30, r6
 50e:	10 fd       	sbrc	r17, 0
 510:	85 91       	lpm	r24, Z+
 512:	10 ff       	sbrs	r17, 0
 514:	81 91       	ld	r24, Z+
 516:	3f 01       	movw	r6, r30
 518:	88 23       	and	r24, r24
 51a:	09 f4       	brne	.+2      	; 0x51e <vfprintf+0x104>
 51c:	ac cf       	rjmp	.-168    	; 0x476 <vfprintf+0x5c>
 51e:	b6 01       	movw	r22, r12
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 526:	f2 cf       	rjmp	.-28     	; 0x50c <vfprintf+0xf2>
 528:	04 36       	cpi	r16, 0x64	; 100
 52a:	11 f0       	breq	.+4      	; 0x530 <vfprintf+0x116>
 52c:	09 36       	cpi	r16, 0x69	; 105
 52e:	21 f5       	brne	.+72     	; 0x578 <vfprintf+0x15e>
 530:	53 01       	movw	r10, r6
 532:	17 ff       	sbrs	r17, 7
 534:	09 c0       	rjmp	.+18     	; 0x548 <vfprintf+0x12e>
 536:	f4 e0       	ldi	r31, 0x04	; 4
 538:	af 0e       	add	r10, r31
 53a:	b1 1c       	adc	r11, r1
 53c:	f3 01       	movw	r30, r6
 53e:	60 81       	ld	r22, Z
 540:	71 81       	ldd	r23, Z+1	; 0x01
 542:	82 81       	ldd	r24, Z+2	; 0x02
 544:	93 81       	ldd	r25, Z+3	; 0x03
 546:	0a c0       	rjmp	.+20     	; 0x55c <vfprintf+0x142>
 548:	f2 e0       	ldi	r31, 0x02	; 2
 54a:	af 0e       	add	r10, r31
 54c:	b1 1c       	adc	r11, r1
 54e:	f3 01       	movw	r30, r6
 550:	60 81       	ld	r22, Z
 552:	71 81       	ldd	r23, Z+1	; 0x01
 554:	07 2e       	mov	r0, r23
 556:	00 0c       	add	r0, r0
 558:	88 0b       	sbc	r24, r24
 55a:	99 0b       	sbc	r25, r25
 55c:	1f 7e       	andi	r17, 0xEF	; 239
 55e:	97 ff       	sbrs	r25, 7
 560:	08 c0       	rjmp	.+16     	; 0x572 <vfprintf+0x158>
 562:	90 95       	com	r25
 564:	80 95       	com	r24
 566:	70 95       	com	r23
 568:	61 95       	neg	r22
 56a:	7f 4f       	sbci	r23, 0xFF	; 255
 56c:	8f 4f       	sbci	r24, 0xFF	; 255
 56e:	9f 4f       	sbci	r25, 0xFF	; 255
 570:	10 64       	ori	r17, 0x40	; 64
 572:	2a e0       	ldi	r18, 0x0A	; 10
 574:	30 e0       	ldi	r19, 0x00	; 0
 576:	30 c0       	rjmp	.+96     	; 0x5d8 <vfprintf+0x1be>
 578:	00 37       	cpi	r16, 0x70	; 112
 57a:	91 f0       	breq	.+36     	; 0x5a0 <vfprintf+0x186>
 57c:	40 f4       	brcc	.+16     	; 0x58e <vfprintf+0x174>
 57e:	08 35       	cpi	r16, 0x58	; 88
 580:	a1 f0       	breq	.+40     	; 0x5aa <vfprintf+0x190>
 582:	0f 36       	cpi	r16, 0x6F	; 111
 584:	09 f0       	breq	.+2      	; 0x588 <vfprintf+0x16e>
 586:	57 c0       	rjmp	.+174    	; 0x636 <vfprintf+0x21c>
 588:	28 e0       	ldi	r18, 0x08	; 8
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	11 c0       	rjmp	.+34     	; 0x5b0 <vfprintf+0x196>
 58e:	05 37       	cpi	r16, 0x75	; 117
 590:	19 f0       	breq	.+6      	; 0x598 <vfprintf+0x17e>
 592:	08 37       	cpi	r16, 0x78	; 120
 594:	31 f0       	breq	.+12     	; 0x5a2 <vfprintf+0x188>
 596:	4f c0       	rjmp	.+158    	; 0x636 <vfprintf+0x21c>
 598:	1f 7e       	andi	r17, 0xEF	; 239
 59a:	2a e0       	ldi	r18, 0x0A	; 10
 59c:	30 e0       	ldi	r19, 0x00	; 0
 59e:	08 c0       	rjmp	.+16     	; 0x5b0 <vfprintf+0x196>
 5a0:	10 61       	ori	r17, 0x10	; 16
 5a2:	14 62       	ori	r17, 0x24	; 36
 5a4:	20 e1       	ldi	r18, 0x10	; 16
 5a6:	30 e0       	ldi	r19, 0x00	; 0
 5a8:	03 c0       	rjmp	.+6      	; 0x5b0 <vfprintf+0x196>
 5aa:	14 60       	ori	r17, 0x04	; 4
 5ac:	20 e1       	ldi	r18, 0x10	; 16
 5ae:	32 e0       	ldi	r19, 0x02	; 2
 5b0:	53 01       	movw	r10, r6
 5b2:	17 ff       	sbrs	r17, 7
 5b4:	09 c0       	rjmp	.+18     	; 0x5c8 <vfprintf+0x1ae>
 5b6:	f4 e0       	ldi	r31, 0x04	; 4
 5b8:	af 0e       	add	r10, r31
 5ba:	b1 1c       	adc	r11, r1
 5bc:	f3 01       	movw	r30, r6
 5be:	60 81       	ld	r22, Z
 5c0:	71 81       	ldd	r23, Z+1	; 0x01
 5c2:	82 81       	ldd	r24, Z+2	; 0x02
 5c4:	93 81       	ldd	r25, Z+3	; 0x03
 5c6:	08 c0       	rjmp	.+16     	; 0x5d8 <vfprintf+0x1be>
 5c8:	f2 e0       	ldi	r31, 0x02	; 2
 5ca:	af 0e       	add	r10, r31
 5cc:	b1 1c       	adc	r11, r1
 5ce:	f3 01       	movw	r30, r6
 5d0:	60 81       	ld	r22, Z
 5d2:	71 81       	ldd	r23, Z+1	; 0x01
 5d4:	80 e0       	ldi	r24, 0x00	; 0
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	a4 01       	movw	r20, r8
 5da:	0e 94 38 04 	call	0x870	; 0x870 <__ultoa_invert>
 5de:	08 2f       	mov	r16, r24
 5e0:	08 19       	sub	r16, r8
 5e2:	16 ff       	sbrs	r17, 6
 5e4:	05 c0       	rjmp	.+10     	; 0x5f0 <vfprintf+0x1d6>
 5e6:	b6 01       	movw	r22, r12
 5e8:	8d e2       	ldi	r24, 0x2D	; 45
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 5f0:	14 ff       	sbrs	r17, 4
 5f2:	15 c0       	rjmp	.+42     	; 0x61e <vfprintf+0x204>
 5f4:	fe 01       	movw	r30, r28
 5f6:	e0 0f       	add	r30, r16
 5f8:	f1 1d       	adc	r31, r1
 5fa:	80 81       	ld	r24, Z
 5fc:	80 33       	cpi	r24, 0x30	; 48
 5fe:	79 f0       	breq	.+30     	; 0x61e <vfprintf+0x204>
 600:	b6 01       	movw	r22, r12
 602:	80 e3       	ldi	r24, 0x30	; 48
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 60a:	12 ff       	sbrs	r17, 2
 60c:	08 c0       	rjmp	.+16     	; 0x61e <vfprintf+0x204>
 60e:	10 72       	andi	r17, 0x20	; 32
 610:	81 2f       	mov	r24, r17
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	b6 01       	movw	r22, r12
 616:	88 5a       	subi	r24, 0xA8	; 168
 618:	9f 4f       	sbci	r25, 0xFF	; 255
 61a:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 61e:	01 50       	subi	r16, 0x01	; 1
 620:	f4 01       	movw	r30, r8
 622:	e0 0f       	add	r30, r16
 624:	f1 1d       	adc	r31, r1
 626:	80 81       	ld	r24, Z
 628:	b6 01       	movw	r22, r12
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <fputc>
 630:	01 11       	cpse	r16, r1
 632:	f5 cf       	rjmp	.-22     	; 0x61e <vfprintf+0x204>
 634:	20 cf       	rjmp	.-448    	; 0x476 <vfprintf+0x5c>
 636:	f6 01       	movw	r30, r12
 638:	86 81       	ldd	r24, Z+6	; 0x06
 63a:	97 81       	ldd	r25, Z+7	; 0x07
 63c:	02 c0       	rjmp	.+4      	; 0x642 <vfprintf+0x228>
 63e:	8f ef       	ldi	r24, 0xFF	; 255
 640:	9f ef       	ldi	r25, 0xFF	; 255
 642:	2b 96       	adiw	r28, 0x0b	; 11
 644:	ee e0       	ldi	r30, 0x0E	; 14
 646:	0c 94 7b 03 	jmp	0x6f6	; 0x6f6 <__epilogue_restores__+0x8>

0000064a <__divmodhi4>:
 64a:	97 fb       	bst	r25, 7
 64c:	07 2e       	mov	r0, r23
 64e:	16 f4       	brtc	.+4      	; 0x654 <__divmodhi4+0xa>
 650:	00 94       	com	r0
 652:	07 d0       	rcall	.+14     	; 0x662 <__divmodhi4_neg1>
 654:	77 fd       	sbrc	r23, 7
 656:	09 d0       	rcall	.+18     	; 0x66a <__divmodhi4_neg2>
 658:	0e 94 92 03 	call	0x724	; 0x724 <__udivmodhi4>
 65c:	07 fc       	sbrc	r0, 7
 65e:	05 d0       	rcall	.+10     	; 0x66a <__divmodhi4_neg2>
 660:	3e f4       	brtc	.+14     	; 0x670 <__divmodhi4_exit>

00000662 <__divmodhi4_neg1>:
 662:	90 95       	com	r25
 664:	81 95       	neg	r24
 666:	9f 4f       	sbci	r25, 0xFF	; 255
 668:	08 95       	ret

0000066a <__divmodhi4_neg2>:
 66a:	70 95       	com	r23
 66c:	61 95       	neg	r22
 66e:	7f 4f       	sbci	r23, 0xFF	; 255

00000670 <__divmodhi4_exit>:
 670:	08 95       	ret

00000672 <__udivmodsi4>:
 672:	a1 e2       	ldi	r26, 0x21	; 33
 674:	1a 2e       	mov	r1, r26
 676:	aa 1b       	sub	r26, r26
 678:	bb 1b       	sub	r27, r27
 67a:	fd 01       	movw	r30, r26
 67c:	0d c0       	rjmp	.+26     	; 0x698 <__udivmodsi4_ep>

0000067e <__udivmodsi4_loop>:
 67e:	aa 1f       	adc	r26, r26
 680:	bb 1f       	adc	r27, r27
 682:	ee 1f       	adc	r30, r30
 684:	ff 1f       	adc	r31, r31
 686:	a2 17       	cp	r26, r18
 688:	b3 07       	cpc	r27, r19
 68a:	e4 07       	cpc	r30, r20
 68c:	f5 07       	cpc	r31, r21
 68e:	20 f0       	brcs	.+8      	; 0x698 <__udivmodsi4_ep>
 690:	a2 1b       	sub	r26, r18
 692:	b3 0b       	sbc	r27, r19
 694:	e4 0b       	sbc	r30, r20
 696:	f5 0b       	sbc	r31, r21

00000698 <__udivmodsi4_ep>:
 698:	66 1f       	adc	r22, r22
 69a:	77 1f       	adc	r23, r23
 69c:	88 1f       	adc	r24, r24
 69e:	99 1f       	adc	r25, r25
 6a0:	1a 94       	dec	r1
 6a2:	69 f7       	brne	.-38     	; 0x67e <__udivmodsi4_loop>
 6a4:	60 95       	com	r22
 6a6:	70 95       	com	r23
 6a8:	80 95       	com	r24
 6aa:	90 95       	com	r25
 6ac:	9b 01       	movw	r18, r22
 6ae:	ac 01       	movw	r20, r24
 6b0:	bd 01       	movw	r22, r26
 6b2:	cf 01       	movw	r24, r30
 6b4:	08 95       	ret

000006b6 <__prologue_saves__>:
 6b6:	2f 92       	push	r2
 6b8:	3f 92       	push	r3
 6ba:	4f 92       	push	r4
 6bc:	5f 92       	push	r5
 6be:	6f 92       	push	r6
 6c0:	7f 92       	push	r7
 6c2:	8f 92       	push	r8
 6c4:	9f 92       	push	r9
 6c6:	af 92       	push	r10
 6c8:	bf 92       	push	r11
 6ca:	cf 92       	push	r12
 6cc:	df 92       	push	r13
 6ce:	ef 92       	push	r14
 6d0:	ff 92       	push	r15
 6d2:	0f 93       	push	r16
 6d4:	1f 93       	push	r17
 6d6:	cf 93       	push	r28
 6d8:	df 93       	push	r29
 6da:	cd b7       	in	r28, 0x3d	; 61
 6dc:	de b7       	in	r29, 0x3e	; 62
 6de:	ca 1b       	sub	r28, r26
 6e0:	db 0b       	sbc	r29, r27
 6e2:	0f b6       	in	r0, 0x3f	; 63
 6e4:	f8 94       	cli
 6e6:	de bf       	out	0x3e, r29	; 62
 6e8:	0f be       	out	0x3f, r0	; 63
 6ea:	cd bf       	out	0x3d, r28	; 61
 6ec:	09 94       	ijmp

000006ee <__epilogue_restores__>:
 6ee:	2a 88       	ldd	r2, Y+18	; 0x12
 6f0:	39 88       	ldd	r3, Y+17	; 0x11
 6f2:	48 88       	ldd	r4, Y+16	; 0x10
 6f4:	5f 84       	ldd	r5, Y+15	; 0x0f
 6f6:	6e 84       	ldd	r6, Y+14	; 0x0e
 6f8:	7d 84       	ldd	r7, Y+13	; 0x0d
 6fa:	8c 84       	ldd	r8, Y+12	; 0x0c
 6fc:	9b 84       	ldd	r9, Y+11	; 0x0b
 6fe:	aa 84       	ldd	r10, Y+10	; 0x0a
 700:	b9 84       	ldd	r11, Y+9	; 0x09
 702:	c8 84       	ldd	r12, Y+8	; 0x08
 704:	df 80       	ldd	r13, Y+7	; 0x07
 706:	ee 80       	ldd	r14, Y+6	; 0x06
 708:	fd 80       	ldd	r15, Y+5	; 0x05
 70a:	0c 81       	ldd	r16, Y+4	; 0x04
 70c:	1b 81       	ldd	r17, Y+3	; 0x03
 70e:	aa 81       	ldd	r26, Y+2	; 0x02
 710:	b9 81       	ldd	r27, Y+1	; 0x01
 712:	ce 0f       	add	r28, r30
 714:	d1 1d       	adc	r29, r1
 716:	0f b6       	in	r0, 0x3f	; 63
 718:	f8 94       	cli
 71a:	de bf       	out	0x3e, r29	; 62
 71c:	0f be       	out	0x3f, r0	; 63
 71e:	cd bf       	out	0x3d, r28	; 61
 720:	ed 01       	movw	r28, r26
 722:	08 95       	ret

00000724 <__udivmodhi4>:
 724:	aa 1b       	sub	r26, r26
 726:	bb 1b       	sub	r27, r27
 728:	51 e1       	ldi	r21, 0x11	; 17
 72a:	07 c0       	rjmp	.+14     	; 0x73a <__udivmodhi4_ep>

0000072c <__udivmodhi4_loop>:
 72c:	aa 1f       	adc	r26, r26
 72e:	bb 1f       	adc	r27, r27
 730:	a6 17       	cp	r26, r22
 732:	b7 07       	cpc	r27, r23
 734:	10 f0       	brcs	.+4      	; 0x73a <__udivmodhi4_ep>
 736:	a6 1b       	sub	r26, r22
 738:	b7 0b       	sbc	r27, r23

0000073a <__udivmodhi4_ep>:
 73a:	88 1f       	adc	r24, r24
 73c:	99 1f       	adc	r25, r25
 73e:	5a 95       	dec	r21
 740:	a9 f7       	brne	.-22     	; 0x72c <__udivmodhi4_loop>
 742:	80 95       	com	r24
 744:	90 95       	com	r25
 746:	bc 01       	movw	r22, r24
 748:	cd 01       	movw	r24, r26
 74a:	08 95       	ret

0000074c <strchr_P>:
 74c:	fc 01       	movw	r30, r24
 74e:	05 90       	lpm	r0, Z+
 750:	06 16       	cp	r0, r22
 752:	21 f0       	breq	.+8      	; 0x75c <strchr_P+0x10>
 754:	00 20       	and	r0, r0
 756:	d9 f7       	brne	.-10     	; 0x74e <strchr_P+0x2>
 758:	c0 01       	movw	r24, r0
 75a:	08 95       	ret
 75c:	31 97       	sbiw	r30, 0x01	; 1
 75e:	cf 01       	movw	r24, r30
 760:	08 95       	ret

00000762 <fdevopen>:
 762:	0f 93       	push	r16
 764:	1f 93       	push	r17
 766:	cf 93       	push	r28
 768:	df 93       	push	r29
 76a:	00 97       	sbiw	r24, 0x00	; 0
 76c:	31 f4       	brne	.+12     	; 0x77a <fdevopen+0x18>
 76e:	61 15       	cp	r22, r1
 770:	71 05       	cpc	r23, r1
 772:	19 f4       	brne	.+6      	; 0x77a <fdevopen+0x18>
 774:	80 e0       	ldi	r24, 0x00	; 0
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	3a c0       	rjmp	.+116    	; 0x7ee <fdevopen+0x8c>
 77a:	8b 01       	movw	r16, r22
 77c:	ec 01       	movw	r28, r24
 77e:	6e e0       	ldi	r22, 0x0E	; 14
 780:	70 e0       	ldi	r23, 0x00	; 0
 782:	81 e0       	ldi	r24, 0x01	; 1
 784:	90 e0       	ldi	r25, 0x00	; 0
 786:	0e 94 96 04 	call	0x92c	; 0x92c <calloc>
 78a:	fc 01       	movw	r30, r24
 78c:	89 2b       	or	r24, r25
 78e:	91 f3       	breq	.-28     	; 0x774 <fdevopen+0x12>
 790:	80 e8       	ldi	r24, 0x80	; 128
 792:	83 83       	std	Z+3, r24	; 0x03
 794:	01 15       	cp	r16, r1
 796:	11 05       	cpc	r17, r1
 798:	71 f0       	breq	.+28     	; 0x7b6 <fdevopen+0x54>
 79a:	13 87       	std	Z+11, r17	; 0x0b
 79c:	02 87       	std	Z+10, r16	; 0x0a
 79e:	81 e8       	ldi	r24, 0x81	; 129
 7a0:	83 83       	std	Z+3, r24	; 0x03
 7a2:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <__iob>
 7a6:	90 91 28 01 	lds	r25, 0x0128	; 0x800128 <__iob+0x1>
 7aa:	89 2b       	or	r24, r25
 7ac:	21 f4       	brne	.+8      	; 0x7b6 <fdevopen+0x54>
 7ae:	f0 93 28 01 	sts	0x0128, r31	; 0x800128 <__iob+0x1>
 7b2:	e0 93 27 01 	sts	0x0127, r30	; 0x800127 <__iob>
 7b6:	20 97       	sbiw	r28, 0x00	; 0
 7b8:	c9 f0       	breq	.+50     	; 0x7ec <fdevopen+0x8a>
 7ba:	d1 87       	std	Z+9, r29	; 0x09
 7bc:	c0 87       	std	Z+8, r28	; 0x08
 7be:	83 81       	ldd	r24, Z+3	; 0x03
 7c0:	82 60       	ori	r24, 0x02	; 2
 7c2:	83 83       	std	Z+3, r24	; 0x03
 7c4:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <__iob+0x2>
 7c8:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <__iob+0x3>
 7cc:	89 2b       	or	r24, r25
 7ce:	71 f4       	brne	.+28     	; 0x7ec <fdevopen+0x8a>
 7d0:	f0 93 2a 01 	sts	0x012A, r31	; 0x80012a <__iob+0x3>
 7d4:	e0 93 29 01 	sts	0x0129, r30	; 0x800129 <__iob+0x2>
 7d8:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <__iob+0x4>
 7dc:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <__iob+0x5>
 7e0:	89 2b       	or	r24, r25
 7e2:	21 f4       	brne	.+8      	; 0x7ec <fdevopen+0x8a>
 7e4:	f0 93 2c 01 	sts	0x012C, r31	; 0x80012c <__iob+0x5>
 7e8:	e0 93 2b 01 	sts	0x012B, r30	; 0x80012b <__iob+0x4>
 7ec:	cf 01       	movw	r24, r30
 7ee:	df 91       	pop	r29
 7f0:	cf 91       	pop	r28
 7f2:	1f 91       	pop	r17
 7f4:	0f 91       	pop	r16
 7f6:	08 95       	ret

000007f8 <fputc>:
 7f8:	0f 93       	push	r16
 7fa:	1f 93       	push	r17
 7fc:	cf 93       	push	r28
 7fe:	df 93       	push	r29
 800:	fb 01       	movw	r30, r22
 802:	23 81       	ldd	r18, Z+3	; 0x03
 804:	21 fd       	sbrc	r18, 1
 806:	03 c0       	rjmp	.+6      	; 0x80e <fputc+0x16>
 808:	8f ef       	ldi	r24, 0xFF	; 255
 80a:	9f ef       	ldi	r25, 0xFF	; 255
 80c:	2c c0       	rjmp	.+88     	; 0x866 <fputc+0x6e>
 80e:	22 ff       	sbrs	r18, 2
 810:	16 c0       	rjmp	.+44     	; 0x83e <fputc+0x46>
 812:	46 81       	ldd	r20, Z+6	; 0x06
 814:	57 81       	ldd	r21, Z+7	; 0x07
 816:	24 81       	ldd	r18, Z+4	; 0x04
 818:	35 81       	ldd	r19, Z+5	; 0x05
 81a:	42 17       	cp	r20, r18
 81c:	53 07       	cpc	r21, r19
 81e:	44 f4       	brge	.+16     	; 0x830 <fputc+0x38>
 820:	a0 81       	ld	r26, Z
 822:	b1 81       	ldd	r27, Z+1	; 0x01
 824:	9d 01       	movw	r18, r26
 826:	2f 5f       	subi	r18, 0xFF	; 255
 828:	3f 4f       	sbci	r19, 0xFF	; 255
 82a:	31 83       	std	Z+1, r19	; 0x01
 82c:	20 83       	st	Z, r18
 82e:	8c 93       	st	X, r24
 830:	26 81       	ldd	r18, Z+6	; 0x06
 832:	37 81       	ldd	r19, Z+7	; 0x07
 834:	2f 5f       	subi	r18, 0xFF	; 255
 836:	3f 4f       	sbci	r19, 0xFF	; 255
 838:	37 83       	std	Z+7, r19	; 0x07
 83a:	26 83       	std	Z+6, r18	; 0x06
 83c:	14 c0       	rjmp	.+40     	; 0x866 <fputc+0x6e>
 83e:	8b 01       	movw	r16, r22
 840:	ec 01       	movw	r28, r24
 842:	fb 01       	movw	r30, r22
 844:	00 84       	ldd	r0, Z+8	; 0x08
 846:	f1 85       	ldd	r31, Z+9	; 0x09
 848:	e0 2d       	mov	r30, r0
 84a:	09 95       	icall
 84c:	89 2b       	or	r24, r25
 84e:	e1 f6       	brne	.-72     	; 0x808 <fputc+0x10>
 850:	d8 01       	movw	r26, r16
 852:	16 96       	adiw	r26, 0x06	; 6
 854:	8d 91       	ld	r24, X+
 856:	9c 91       	ld	r25, X
 858:	17 97       	sbiw	r26, 0x07	; 7
 85a:	01 96       	adiw	r24, 0x01	; 1
 85c:	17 96       	adiw	r26, 0x07	; 7
 85e:	9c 93       	st	X, r25
 860:	8e 93       	st	-X, r24
 862:	16 97       	sbiw	r26, 0x06	; 6
 864:	ce 01       	movw	r24, r28
 866:	df 91       	pop	r29
 868:	cf 91       	pop	r28
 86a:	1f 91       	pop	r17
 86c:	0f 91       	pop	r16
 86e:	08 95       	ret

00000870 <__ultoa_invert>:
 870:	fa 01       	movw	r30, r20
 872:	aa 27       	eor	r26, r26
 874:	28 30       	cpi	r18, 0x08	; 8
 876:	51 f1       	breq	.+84     	; 0x8cc <__ultoa_invert+0x5c>
 878:	20 31       	cpi	r18, 0x10	; 16
 87a:	81 f1       	breq	.+96     	; 0x8dc <__ultoa_invert+0x6c>
 87c:	e8 94       	clt
 87e:	6f 93       	push	r22
 880:	6e 7f       	andi	r22, 0xFE	; 254
 882:	6e 5f       	subi	r22, 0xFE	; 254
 884:	7f 4f       	sbci	r23, 0xFF	; 255
 886:	8f 4f       	sbci	r24, 0xFF	; 255
 888:	9f 4f       	sbci	r25, 0xFF	; 255
 88a:	af 4f       	sbci	r26, 0xFF	; 255
 88c:	b1 e0       	ldi	r27, 0x01	; 1
 88e:	3e d0       	rcall	.+124    	; 0x90c <__stack+0xd>
 890:	b4 e0       	ldi	r27, 0x04	; 4
 892:	3c d0       	rcall	.+120    	; 0x90c <__stack+0xd>
 894:	67 0f       	add	r22, r23
 896:	78 1f       	adc	r23, r24
 898:	89 1f       	adc	r24, r25
 89a:	9a 1f       	adc	r25, r26
 89c:	a1 1d       	adc	r26, r1
 89e:	68 0f       	add	r22, r24
 8a0:	79 1f       	adc	r23, r25
 8a2:	8a 1f       	adc	r24, r26
 8a4:	91 1d       	adc	r25, r1
 8a6:	a1 1d       	adc	r26, r1
 8a8:	6a 0f       	add	r22, r26
 8aa:	71 1d       	adc	r23, r1
 8ac:	81 1d       	adc	r24, r1
 8ae:	91 1d       	adc	r25, r1
 8b0:	a1 1d       	adc	r26, r1
 8b2:	20 d0       	rcall	.+64     	; 0x8f4 <__ultoa_invert+0x84>
 8b4:	09 f4       	brne	.+2      	; 0x8b8 <__ultoa_invert+0x48>
 8b6:	68 94       	set
 8b8:	3f 91       	pop	r19
 8ba:	2a e0       	ldi	r18, 0x0A	; 10
 8bc:	26 9f       	mul	r18, r22
 8be:	11 24       	eor	r1, r1
 8c0:	30 19       	sub	r19, r0
 8c2:	30 5d       	subi	r19, 0xD0	; 208
 8c4:	31 93       	st	Z+, r19
 8c6:	de f6       	brtc	.-74     	; 0x87e <__ultoa_invert+0xe>
 8c8:	cf 01       	movw	r24, r30
 8ca:	08 95       	ret
 8cc:	46 2f       	mov	r20, r22
 8ce:	47 70       	andi	r20, 0x07	; 7
 8d0:	40 5d       	subi	r20, 0xD0	; 208
 8d2:	41 93       	st	Z+, r20
 8d4:	b3 e0       	ldi	r27, 0x03	; 3
 8d6:	0f d0       	rcall	.+30     	; 0x8f6 <__ultoa_invert+0x86>
 8d8:	c9 f7       	brne	.-14     	; 0x8cc <__ultoa_invert+0x5c>
 8da:	f6 cf       	rjmp	.-20     	; 0x8c8 <__ultoa_invert+0x58>
 8dc:	46 2f       	mov	r20, r22
 8de:	4f 70       	andi	r20, 0x0F	; 15
 8e0:	40 5d       	subi	r20, 0xD0	; 208
 8e2:	4a 33       	cpi	r20, 0x3A	; 58
 8e4:	18 f0       	brcs	.+6      	; 0x8ec <__ultoa_invert+0x7c>
 8e6:	49 5d       	subi	r20, 0xD9	; 217
 8e8:	31 fd       	sbrc	r19, 1
 8ea:	40 52       	subi	r20, 0x20	; 32
 8ec:	41 93       	st	Z+, r20
 8ee:	02 d0       	rcall	.+4      	; 0x8f4 <__ultoa_invert+0x84>
 8f0:	a9 f7       	brne	.-22     	; 0x8dc <__ultoa_invert+0x6c>
 8f2:	ea cf       	rjmp	.-44     	; 0x8c8 <__ultoa_invert+0x58>
 8f4:	b4 e0       	ldi	r27, 0x04	; 4
 8f6:	a6 95       	lsr	r26
 8f8:	97 95       	ror	r25
 8fa:	87 95       	ror	r24
 8fc:	77 95       	ror	r23
 8fe:	67 95       	ror	r22
 900:	ba 95       	dec	r27
 902:	c9 f7       	brne	.-14     	; 0x8f6 <__ultoa_invert+0x86>
 904:	00 97       	sbiw	r24, 0x00	; 0
 906:	61 05       	cpc	r22, r1
 908:	71 05       	cpc	r23, r1
 90a:	08 95       	ret
 90c:	9b 01       	movw	r18, r22
 90e:	ac 01       	movw	r20, r24
 910:	0a 2e       	mov	r0, r26
 912:	06 94       	lsr	r0
 914:	57 95       	ror	r21
 916:	47 95       	ror	r20
 918:	37 95       	ror	r19
 91a:	27 95       	ror	r18
 91c:	ba 95       	dec	r27
 91e:	c9 f7       	brne	.-14     	; 0x912 <__stack+0x13>
 920:	62 0f       	add	r22, r18
 922:	73 1f       	adc	r23, r19
 924:	84 1f       	adc	r24, r20
 926:	95 1f       	adc	r25, r21
 928:	a0 1d       	adc	r26, r0
 92a:	08 95       	ret

0000092c <calloc>:
 92c:	0f 93       	push	r16
 92e:	1f 93       	push	r17
 930:	cf 93       	push	r28
 932:	df 93       	push	r29
 934:	86 9f       	mul	r24, r22
 936:	80 01       	movw	r16, r0
 938:	87 9f       	mul	r24, r23
 93a:	10 0d       	add	r17, r0
 93c:	96 9f       	mul	r25, r22
 93e:	10 0d       	add	r17, r0
 940:	11 24       	eor	r1, r1
 942:	c8 01       	movw	r24, r16
 944:	0e 94 b2 04 	call	0x964	; 0x964 <malloc>
 948:	ec 01       	movw	r28, r24
 94a:	00 97       	sbiw	r24, 0x00	; 0
 94c:	29 f0       	breq	.+10     	; 0x958 <calloc+0x2c>
 94e:	a8 01       	movw	r20, r16
 950:	60 e0       	ldi	r22, 0x00	; 0
 952:	70 e0       	ldi	r23, 0x00	; 0
 954:	0e 94 d3 05 	call	0xba6	; 0xba6 <memset>
 958:	ce 01       	movw	r24, r28
 95a:	df 91       	pop	r29
 95c:	cf 91       	pop	r28
 95e:	1f 91       	pop	r17
 960:	0f 91       	pop	r16
 962:	08 95       	ret

00000964 <malloc>:
 964:	0f 93       	push	r16
 966:	1f 93       	push	r17
 968:	cf 93       	push	r28
 96a:	df 93       	push	r29
 96c:	82 30       	cpi	r24, 0x02	; 2
 96e:	91 05       	cpc	r25, r1
 970:	10 f4       	brcc	.+4      	; 0x976 <malloc+0x12>
 972:	82 e0       	ldi	r24, 0x02	; 2
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	e0 91 2f 01 	lds	r30, 0x012F	; 0x80012f <__flp>
 97a:	f0 91 30 01 	lds	r31, 0x0130	; 0x800130 <__flp+0x1>
 97e:	20 e0       	ldi	r18, 0x00	; 0
 980:	30 e0       	ldi	r19, 0x00	; 0
 982:	a0 e0       	ldi	r26, 0x00	; 0
 984:	b0 e0       	ldi	r27, 0x00	; 0
 986:	30 97       	sbiw	r30, 0x00	; 0
 988:	19 f1       	breq	.+70     	; 0x9d0 <malloc+0x6c>
 98a:	40 81       	ld	r20, Z
 98c:	51 81       	ldd	r21, Z+1	; 0x01
 98e:	02 81       	ldd	r16, Z+2	; 0x02
 990:	13 81       	ldd	r17, Z+3	; 0x03
 992:	48 17       	cp	r20, r24
 994:	59 07       	cpc	r21, r25
 996:	c8 f0       	brcs	.+50     	; 0x9ca <malloc+0x66>
 998:	84 17       	cp	r24, r20
 99a:	95 07       	cpc	r25, r21
 99c:	69 f4       	brne	.+26     	; 0x9b8 <malloc+0x54>
 99e:	10 97       	sbiw	r26, 0x00	; 0
 9a0:	31 f0       	breq	.+12     	; 0x9ae <malloc+0x4a>
 9a2:	12 96       	adiw	r26, 0x02	; 2
 9a4:	0c 93       	st	X, r16
 9a6:	12 97       	sbiw	r26, 0x02	; 2
 9a8:	13 96       	adiw	r26, 0x03	; 3
 9aa:	1c 93       	st	X, r17
 9ac:	27 c0       	rjmp	.+78     	; 0x9fc <malloc+0x98>
 9ae:	00 93 2f 01 	sts	0x012F, r16	; 0x80012f <__flp>
 9b2:	10 93 30 01 	sts	0x0130, r17	; 0x800130 <__flp+0x1>
 9b6:	22 c0       	rjmp	.+68     	; 0x9fc <malloc+0x98>
 9b8:	21 15       	cp	r18, r1
 9ba:	31 05       	cpc	r19, r1
 9bc:	19 f0       	breq	.+6      	; 0x9c4 <malloc+0x60>
 9be:	42 17       	cp	r20, r18
 9c0:	53 07       	cpc	r21, r19
 9c2:	18 f4       	brcc	.+6      	; 0x9ca <malloc+0x66>
 9c4:	9a 01       	movw	r18, r20
 9c6:	bd 01       	movw	r22, r26
 9c8:	ef 01       	movw	r28, r30
 9ca:	df 01       	movw	r26, r30
 9cc:	f8 01       	movw	r30, r16
 9ce:	db cf       	rjmp	.-74     	; 0x986 <malloc+0x22>
 9d0:	21 15       	cp	r18, r1
 9d2:	31 05       	cpc	r19, r1
 9d4:	f9 f0       	breq	.+62     	; 0xa14 <malloc+0xb0>
 9d6:	28 1b       	sub	r18, r24
 9d8:	39 0b       	sbc	r19, r25
 9da:	24 30       	cpi	r18, 0x04	; 4
 9dc:	31 05       	cpc	r19, r1
 9de:	80 f4       	brcc	.+32     	; 0xa00 <malloc+0x9c>
 9e0:	8a 81       	ldd	r24, Y+2	; 0x02
 9e2:	9b 81       	ldd	r25, Y+3	; 0x03
 9e4:	61 15       	cp	r22, r1
 9e6:	71 05       	cpc	r23, r1
 9e8:	21 f0       	breq	.+8      	; 0x9f2 <malloc+0x8e>
 9ea:	fb 01       	movw	r30, r22
 9ec:	93 83       	std	Z+3, r25	; 0x03
 9ee:	82 83       	std	Z+2, r24	; 0x02
 9f0:	04 c0       	rjmp	.+8      	; 0x9fa <malloc+0x96>
 9f2:	90 93 30 01 	sts	0x0130, r25	; 0x800130 <__flp+0x1>
 9f6:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <__flp>
 9fa:	fe 01       	movw	r30, r28
 9fc:	32 96       	adiw	r30, 0x02	; 2
 9fe:	44 c0       	rjmp	.+136    	; 0xa88 <malloc+0x124>
 a00:	fe 01       	movw	r30, r28
 a02:	e2 0f       	add	r30, r18
 a04:	f3 1f       	adc	r31, r19
 a06:	81 93       	st	Z+, r24
 a08:	91 93       	st	Z+, r25
 a0a:	22 50       	subi	r18, 0x02	; 2
 a0c:	31 09       	sbc	r19, r1
 a0e:	39 83       	std	Y+1, r19	; 0x01
 a10:	28 83       	st	Y, r18
 a12:	3a c0       	rjmp	.+116    	; 0xa88 <malloc+0x124>
 a14:	20 91 2d 01 	lds	r18, 0x012D	; 0x80012d <__brkval>
 a18:	30 91 2e 01 	lds	r19, 0x012E	; 0x80012e <__brkval+0x1>
 a1c:	23 2b       	or	r18, r19
 a1e:	41 f4       	brne	.+16     	; 0xa30 <malloc+0xcc>
 a20:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 a24:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 a28:	30 93 2e 01 	sts	0x012E, r19	; 0x80012e <__brkval+0x1>
 a2c:	20 93 2d 01 	sts	0x012D, r18	; 0x80012d <__brkval>
 a30:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 a34:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 a38:	21 15       	cp	r18, r1
 a3a:	31 05       	cpc	r19, r1
 a3c:	41 f4       	brne	.+16     	; 0xa4e <malloc+0xea>
 a3e:	2d b7       	in	r18, 0x3d	; 61
 a40:	3e b7       	in	r19, 0x3e	; 62
 a42:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 a46:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 a4a:	24 1b       	sub	r18, r20
 a4c:	35 0b       	sbc	r19, r21
 a4e:	e0 91 2d 01 	lds	r30, 0x012D	; 0x80012d <__brkval>
 a52:	f0 91 2e 01 	lds	r31, 0x012E	; 0x80012e <__brkval+0x1>
 a56:	e2 17       	cp	r30, r18
 a58:	f3 07       	cpc	r31, r19
 a5a:	a0 f4       	brcc	.+40     	; 0xa84 <malloc+0x120>
 a5c:	2e 1b       	sub	r18, r30
 a5e:	3f 0b       	sbc	r19, r31
 a60:	28 17       	cp	r18, r24
 a62:	39 07       	cpc	r19, r25
 a64:	78 f0       	brcs	.+30     	; 0xa84 <malloc+0x120>
 a66:	ac 01       	movw	r20, r24
 a68:	4e 5f       	subi	r20, 0xFE	; 254
 a6a:	5f 4f       	sbci	r21, 0xFF	; 255
 a6c:	24 17       	cp	r18, r20
 a6e:	35 07       	cpc	r19, r21
 a70:	48 f0       	brcs	.+18     	; 0xa84 <malloc+0x120>
 a72:	4e 0f       	add	r20, r30
 a74:	5f 1f       	adc	r21, r31
 a76:	50 93 2e 01 	sts	0x012E, r21	; 0x80012e <__brkval+0x1>
 a7a:	40 93 2d 01 	sts	0x012D, r20	; 0x80012d <__brkval>
 a7e:	81 93       	st	Z+, r24
 a80:	91 93       	st	Z+, r25
 a82:	02 c0       	rjmp	.+4      	; 0xa88 <malloc+0x124>
 a84:	e0 e0       	ldi	r30, 0x00	; 0
 a86:	f0 e0       	ldi	r31, 0x00	; 0
 a88:	cf 01       	movw	r24, r30
 a8a:	df 91       	pop	r29
 a8c:	cf 91       	pop	r28
 a8e:	1f 91       	pop	r17
 a90:	0f 91       	pop	r16
 a92:	08 95       	ret

00000a94 <free>:
 a94:	cf 93       	push	r28
 a96:	df 93       	push	r29
 a98:	00 97       	sbiw	r24, 0x00	; 0
 a9a:	09 f4       	brne	.+2      	; 0xa9e <free+0xa>
 a9c:	81 c0       	rjmp	.+258    	; 0xba0 <free+0x10c>
 a9e:	fc 01       	movw	r30, r24
 aa0:	32 97       	sbiw	r30, 0x02	; 2
 aa2:	13 82       	std	Z+3, r1	; 0x03
 aa4:	12 82       	std	Z+2, r1	; 0x02
 aa6:	a0 91 2f 01 	lds	r26, 0x012F	; 0x80012f <__flp>
 aaa:	b0 91 30 01 	lds	r27, 0x0130	; 0x800130 <__flp+0x1>
 aae:	10 97       	sbiw	r26, 0x00	; 0
 ab0:	81 f4       	brne	.+32     	; 0xad2 <free+0x3e>
 ab2:	20 81       	ld	r18, Z
 ab4:	31 81       	ldd	r19, Z+1	; 0x01
 ab6:	82 0f       	add	r24, r18
 ab8:	93 1f       	adc	r25, r19
 aba:	20 91 2d 01 	lds	r18, 0x012D	; 0x80012d <__brkval>
 abe:	30 91 2e 01 	lds	r19, 0x012E	; 0x80012e <__brkval+0x1>
 ac2:	28 17       	cp	r18, r24
 ac4:	39 07       	cpc	r19, r25
 ac6:	51 f5       	brne	.+84     	; 0xb1c <free+0x88>
 ac8:	f0 93 2e 01 	sts	0x012E, r31	; 0x80012e <__brkval+0x1>
 acc:	e0 93 2d 01 	sts	0x012D, r30	; 0x80012d <__brkval>
 ad0:	67 c0       	rjmp	.+206    	; 0xba0 <free+0x10c>
 ad2:	ed 01       	movw	r28, r26
 ad4:	20 e0       	ldi	r18, 0x00	; 0
 ad6:	30 e0       	ldi	r19, 0x00	; 0
 ad8:	ce 17       	cp	r28, r30
 ada:	df 07       	cpc	r29, r31
 adc:	40 f4       	brcc	.+16     	; 0xaee <free+0x5a>
 ade:	4a 81       	ldd	r20, Y+2	; 0x02
 ae0:	5b 81       	ldd	r21, Y+3	; 0x03
 ae2:	9e 01       	movw	r18, r28
 ae4:	41 15       	cp	r20, r1
 ae6:	51 05       	cpc	r21, r1
 ae8:	f1 f0       	breq	.+60     	; 0xb26 <free+0x92>
 aea:	ea 01       	movw	r28, r20
 aec:	f5 cf       	rjmp	.-22     	; 0xad8 <free+0x44>
 aee:	d3 83       	std	Z+3, r29	; 0x03
 af0:	c2 83       	std	Z+2, r28	; 0x02
 af2:	40 81       	ld	r20, Z
 af4:	51 81       	ldd	r21, Z+1	; 0x01
 af6:	84 0f       	add	r24, r20
 af8:	95 1f       	adc	r25, r21
 afa:	c8 17       	cp	r28, r24
 afc:	d9 07       	cpc	r29, r25
 afe:	59 f4       	brne	.+22     	; 0xb16 <free+0x82>
 b00:	88 81       	ld	r24, Y
 b02:	99 81       	ldd	r25, Y+1	; 0x01
 b04:	84 0f       	add	r24, r20
 b06:	95 1f       	adc	r25, r21
 b08:	02 96       	adiw	r24, 0x02	; 2
 b0a:	91 83       	std	Z+1, r25	; 0x01
 b0c:	80 83       	st	Z, r24
 b0e:	8a 81       	ldd	r24, Y+2	; 0x02
 b10:	9b 81       	ldd	r25, Y+3	; 0x03
 b12:	93 83       	std	Z+3, r25	; 0x03
 b14:	82 83       	std	Z+2, r24	; 0x02
 b16:	21 15       	cp	r18, r1
 b18:	31 05       	cpc	r19, r1
 b1a:	29 f4       	brne	.+10     	; 0xb26 <free+0x92>
 b1c:	f0 93 30 01 	sts	0x0130, r31	; 0x800130 <__flp+0x1>
 b20:	e0 93 2f 01 	sts	0x012F, r30	; 0x80012f <__flp>
 b24:	3d c0       	rjmp	.+122    	; 0xba0 <free+0x10c>
 b26:	e9 01       	movw	r28, r18
 b28:	fb 83       	std	Y+3, r31	; 0x03
 b2a:	ea 83       	std	Y+2, r30	; 0x02
 b2c:	49 91       	ld	r20, Y+
 b2e:	59 91       	ld	r21, Y+
 b30:	c4 0f       	add	r28, r20
 b32:	d5 1f       	adc	r29, r21
 b34:	ec 17       	cp	r30, r28
 b36:	fd 07       	cpc	r31, r29
 b38:	61 f4       	brne	.+24     	; 0xb52 <free+0xbe>
 b3a:	80 81       	ld	r24, Z
 b3c:	91 81       	ldd	r25, Z+1	; 0x01
 b3e:	84 0f       	add	r24, r20
 b40:	95 1f       	adc	r25, r21
 b42:	02 96       	adiw	r24, 0x02	; 2
 b44:	e9 01       	movw	r28, r18
 b46:	99 83       	std	Y+1, r25	; 0x01
 b48:	88 83       	st	Y, r24
 b4a:	82 81       	ldd	r24, Z+2	; 0x02
 b4c:	93 81       	ldd	r25, Z+3	; 0x03
 b4e:	9b 83       	std	Y+3, r25	; 0x03
 b50:	8a 83       	std	Y+2, r24	; 0x02
 b52:	e0 e0       	ldi	r30, 0x00	; 0
 b54:	f0 e0       	ldi	r31, 0x00	; 0
 b56:	12 96       	adiw	r26, 0x02	; 2
 b58:	8d 91       	ld	r24, X+
 b5a:	9c 91       	ld	r25, X
 b5c:	13 97       	sbiw	r26, 0x03	; 3
 b5e:	00 97       	sbiw	r24, 0x00	; 0
 b60:	19 f0       	breq	.+6      	; 0xb68 <free+0xd4>
 b62:	fd 01       	movw	r30, r26
 b64:	dc 01       	movw	r26, r24
 b66:	f7 cf       	rjmp	.-18     	; 0xb56 <free+0xc2>
 b68:	8d 91       	ld	r24, X+
 b6a:	9c 91       	ld	r25, X
 b6c:	11 97       	sbiw	r26, 0x01	; 1
 b6e:	9d 01       	movw	r18, r26
 b70:	2e 5f       	subi	r18, 0xFE	; 254
 b72:	3f 4f       	sbci	r19, 0xFF	; 255
 b74:	82 0f       	add	r24, r18
 b76:	93 1f       	adc	r25, r19
 b78:	20 91 2d 01 	lds	r18, 0x012D	; 0x80012d <__brkval>
 b7c:	30 91 2e 01 	lds	r19, 0x012E	; 0x80012e <__brkval+0x1>
 b80:	28 17       	cp	r18, r24
 b82:	39 07       	cpc	r19, r25
 b84:	69 f4       	brne	.+26     	; 0xba0 <free+0x10c>
 b86:	30 97       	sbiw	r30, 0x00	; 0
 b88:	29 f4       	brne	.+10     	; 0xb94 <free+0x100>
 b8a:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <__flp+0x1>
 b8e:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <__flp>
 b92:	02 c0       	rjmp	.+4      	; 0xb98 <free+0x104>
 b94:	13 82       	std	Z+3, r1	; 0x03
 b96:	12 82       	std	Z+2, r1	; 0x02
 b98:	b0 93 2e 01 	sts	0x012E, r27	; 0x80012e <__brkval+0x1>
 b9c:	a0 93 2d 01 	sts	0x012D, r26	; 0x80012d <__brkval>
 ba0:	df 91       	pop	r29
 ba2:	cf 91       	pop	r28
 ba4:	08 95       	ret

00000ba6 <memset>:
 ba6:	dc 01       	movw	r26, r24
 ba8:	01 c0       	rjmp	.+2      	; 0xbac <memset+0x6>
 baa:	6d 93       	st	X+, r22
 bac:	41 50       	subi	r20, 0x01	; 1
 bae:	50 40       	sbci	r21, 0x00	; 0
 bb0:	e0 f7       	brcc	.-8      	; 0xbaa <memset+0x4>
 bb2:	08 95       	ret

00000bb4 <_exit>:
 bb4:	f8 94       	cli

00000bb6 <__stop_program>:
 bb6:	ff cf       	rjmp	.-2      	; 0xbb6 <__stop_program>
