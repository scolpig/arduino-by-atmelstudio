
arduino_uno.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  0000098a  00000a1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000098a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800110  00800110  00000a2e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a2e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  00000acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001744  00000000  00000000  00000c54  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d99  00000000  00000000  00002398  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e2e  00000000  00000000  00003131  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003ac  00000000  00000000  00003f60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000070d  00000000  00000000  0000430c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f7b  00000000  00000000  00004a19  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  00005994  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 40 00 	jmp	0x80	; 0x80 <__ctors_end>
   4:	0c 94 59 01 	jmp	0x2b2	; 0x2b2 <__vector_1>
   8:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__vector_2>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 77 01 	jmp	0x2ee	; 0x2ee <__vector_14>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	45 46       	sbci	r20, 0x65	; 101
  6a:	47 65       	ori	r20, 0x57	; 87
  6c:	66 67       	ori	r22, 0x76	; 118
	...

0000006f <__c.2314>:
  6f:	20 2b 2d 2e 30 31 32 33 34 35 36 37 38 39 68 00      +-.0123456789h.
	...

00000080 <__ctors_end>:
  80:	11 24       	eor	r1, r1
  82:	1f be       	out	0x3f, r1	; 63
  84:	cf ef       	ldi	r28, 0xFF	; 255
  86:	d8 e0       	ldi	r29, 0x08	; 8
  88:	de bf       	out	0x3e, r29	; 62
  8a:	cd bf       	out	0x3d, r28	; 61

0000008c <__do_copy_data>:
  8c:	11 e0       	ldi	r17, 0x01	; 1
  8e:	a0 e0       	ldi	r26, 0x00	; 0
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	ea e8       	ldi	r30, 0x8A	; 138
  94:	f9 e0       	ldi	r31, 0x09	; 9
  96:	02 c0       	rjmp	.+4      	; 0x9c <__do_copy_data+0x10>
  98:	05 90       	lpm	r0, Z+
  9a:	0d 92       	st	X+, r0
  9c:	a0 31       	cpi	r26, 0x10	; 16
  9e:	b1 07       	cpc	r27, r17
  a0:	d9 f7       	brne	.-10     	; 0x98 <__do_copy_data+0xc>

000000a2 <__do_clear_bss>:
  a2:	21 e0       	ldi	r18, 0x01	; 1
  a4:	a0 e1       	ldi	r26, 0x10	; 16
  a6:	b1 e0       	ldi	r27, 0x01	; 1
  a8:	01 c0       	rjmp	.+2      	; 0xac <.do_clear_bss_start>

000000aa <.do_clear_bss_loop>:
  aa:	1d 92       	st	X+, r1

000000ac <.do_clear_bss_start>:
  ac:	a1 32       	cpi	r26, 0x21	; 33
  ae:	b2 07       	cpc	r27, r18
  b0:	e1 f7       	brne	.-8      	; 0xaa <.do_clear_bss_loop>
  b2:	0e 94 73 01 	call	0x2e6	; 0x2e6 <main>
  b6:	0c 94 c3 04 	jmp	0x986	; 0x986 <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <DHT11_rx_byte>:
		DHT11_rx_byte();
		DHT11_data_output();
		_delay_ms(1500);
		
		printf("RH : %d.%d       ", RH_integral, RH_decimal);
		printf("Temperature : %d.%d \n", Tmpr_integral, Tmpr_decimal);
  be:	48 e0       	ldi	r20, 0x08	; 8
  c0:	50 e0       	ldi	r21, 0x00	; 0
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	0a c0       	rjmp	.+20     	; 0xda <DHT11_rx_byte+0x1c>
  c6:	95 e0       	ldi	r25, 0x05	; 5
  c8:	9a 95       	dec	r25
  ca:	f1 f7       	brne	.-4      	; 0xc8 <DHT11_rx_byte+0xa>
  cc:	00 00       	nop
  ce:	2f 5f       	subi	r18, 0xFF	; 255
  d0:	3f 4f       	sbci	r19, 0xFF	; 255
  d2:	28 3c       	cpi	r18, 0xC8	; 200
  d4:	31 05       	cpc	r19, r1
  d6:	19 f4       	brne	.+6      	; 0xde <DHT11_rx_byte+0x20>
  d8:	25 c0       	rjmp	.+74     	; 0x124 <DHT11_rx_byte+0x66>
  da:	20 e0       	ldi	r18, 0x00	; 0
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	1c 9b       	sbis	0x03, 4	; 3
  e0:	f2 cf       	rjmp	.-28     	; 0xc6 <DHT11_rx_byte+0x8>
  e2:	28 3c       	cpi	r18, 0xC8	; 200
  e4:	31 05       	cpc	r19, r1
  e6:	04 f5       	brge	.+64     	; 0x128 <DHT11_rx_byte+0x6a>
  e8:	90 ea       	ldi	r25, 0xA0	; 160
  ea:	9a 95       	dec	r25
  ec:	f1 f7       	brne	.-4      	; 0xea <DHT11_rx_byte+0x2c>
  ee:	88 0f       	add	r24, r24
  f0:	1c 9b       	sbis	0x03, 4	; 3
  f2:	0d c0       	rjmp	.+26     	; 0x10e <DHT11_rx_byte+0x50>
  f4:	81 60       	ori	r24, 0x01	; 1
  f6:	0b c0       	rjmp	.+22     	; 0x10e <DHT11_rx_byte+0x50>
  f8:	95 e0       	ldi	r25, 0x05	; 5
  fa:	9a 95       	dec	r25
  fc:	f1 f7       	brne	.-4      	; 0xfa <DHT11_rx_byte+0x3c>
  fe:	00 00       	nop
 100:	2f 5f       	subi	r18, 0xFF	; 255
 102:	3f 4f       	sbci	r19, 0xFF	; 255
 104:	20 3d       	cpi	r18, 0xD0	; 208
 106:	97 e0       	ldi	r25, 0x07	; 7
 108:	39 07       	cpc	r19, r25
 10a:	19 f4       	brne	.+6      	; 0x112 <DHT11_rx_byte+0x54>
 10c:	0d c0       	rjmp	.+26     	; 0x128 <DHT11_rx_byte+0x6a>
 10e:	20 e0       	ldi	r18, 0x00	; 0
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	1c 99       	sbic	0x03, 4	; 3
 114:	f1 cf       	rjmp	.-30     	; 0xf8 <DHT11_rx_byte+0x3a>
 116:	28 3c       	cpi	r18, 0xC8	; 200
 118:	31 05       	cpc	r19, r1
 11a:	34 f4       	brge	.+12     	; 0x128 <DHT11_rx_byte+0x6a>
 11c:	41 50       	subi	r20, 0x01	; 1
 11e:	51 09       	sbc	r21, r1
 120:	e1 f6       	brne	.-72     	; 0xda <DHT11_rx_byte+0x1c>
 122:	08 95       	ret
 124:	8f ef       	ldi	r24, 0xFF	; 255
 126:	08 95       	ret
 128:	8f ef       	ldi	r24, 0xFF	; 255
 12a:	08 95       	ret

0000012c <DHT11_data_output>:
 12c:	24 9a       	sbi	0x04, 4	; 4
 12e:	2c 9a       	sbi	0x05, 4	; 5
 130:	08 95       	ret

00000132 <DHT11_data_input>:
 132:	24 98       	cbi	0x04, 4	; 4
 134:	08 95       	ret

00000136 <DHT11_init>:
 136:	24 9a       	sbi	0x04, 4	; 4
 138:	2c 9a       	sbi	0x05, 4	; 5
 13a:	2f ef       	ldi	r18, 0xFF	; 255
 13c:	8d e3       	ldi	r24, 0x3D	; 61
 13e:	99 e4       	ldi	r25, 0x49	; 73
 140:	21 50       	subi	r18, 0x01	; 1
 142:	80 40       	sbci	r24, 0x00	; 0
 144:	90 40       	sbci	r25, 0x00	; 0
 146:	e1 f7       	brne	.-8      	; 0x140 <DHT11_init+0xa>
 148:	00 c0       	rjmp	.+0      	; 0x14a <DHT11_init+0x14>
 14a:	00 00       	nop
 14c:	08 95       	ret

0000014e <dumi_read>:
 14e:	88 ec       	ldi	r24, 0xC8	; 200
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	06 c0       	rjmp	.+12     	; 0x160 <dumi_read+0x12>
 154:	25 e0       	ldi	r18, 0x05	; 5
 156:	2a 95       	dec	r18
 158:	f1 f7       	brne	.-4      	; 0x156 <dumi_read+0x8>
 15a:	00 00       	nop
 15c:	01 97       	sbiw	r24, 0x01	; 1
 15e:	51 f0       	breq	.+20     	; 0x174 <dumi_read+0x26>
 160:	1c 99       	sbic	0x03, 4	; 3
 162:	f8 cf       	rjmp	.-16     	; 0x154 <dumi_read+0x6>
 164:	07 c0       	rjmp	.+14     	; 0x174 <dumi_read+0x26>
 166:	25 e0       	ldi	r18, 0x05	; 5
 168:	2a 95       	dec	r18
 16a:	f1 f7       	brne	.-4      	; 0x168 <dumi_read+0x1a>
 16c:	00 00       	nop
 16e:	01 97       	sbiw	r24, 0x01	; 1
 170:	19 f4       	brne	.+6      	; 0x178 <dumi_read+0x2a>
 172:	0c c0       	rjmp	.+24     	; 0x18c <dumi_read+0x3e>
 174:	88 ec       	ldi	r24, 0xC8	; 200
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	1c 9b       	sbis	0x03, 4	; 3
 17a:	f5 cf       	rjmp	.-22     	; 0x166 <dumi_read+0x18>
 17c:	07 c0       	rjmp	.+14     	; 0x18c <dumi_read+0x3e>
 17e:	25 e0       	ldi	r18, 0x05	; 5
 180:	2a 95       	dec	r18
 182:	f1 f7       	brne	.-4      	; 0x180 <dumi_read+0x32>
 184:	00 00       	nop
 186:	01 97       	sbiw	r24, 0x01	; 1
 188:	19 f4       	brne	.+6      	; 0x190 <dumi_read+0x42>
 18a:	08 95       	ret
 18c:	88 ec       	ldi	r24, 0xC8	; 200
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	1c 99       	sbic	0x03, 4	; 3
 192:	f5 cf       	rjmp	.-22     	; 0x17e <dumi_read+0x30>
 194:	08 95       	ret

00000196 <DHT11_trigger>:
 196:	2c 98       	cbi	0x05, 4	; 5
 198:	2f ef       	ldi	r18, 0xFF	; 255
 19a:	89 ef       	ldi	r24, 0xF9	; 249
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	21 50       	subi	r18, 0x01	; 1
 1a0:	80 40       	sbci	r24, 0x00	; 0
 1a2:	90 40       	sbci	r25, 0x00	; 0
 1a4:	e1 f7       	brne	.-8      	; 0x19e <DHT11_trigger+0x8>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <DHT11_trigger+0x12>
 1a8:	00 00       	nop
 1aa:	2c 9a       	sbi	0x05, 4	; 5
 1ac:	2a e1       	ldi	r18, 0x1A	; 26
 1ae:	2a 95       	dec	r18
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <DHT11_trigger+0x18>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <DHT11_trigger+0x1e>
 1b4:	08 95       	ret

000001b6 <getTemperature>:
	}
	return 0;
}
char getTemperature(void){
 1b6:	cf 93       	push	r28
	char RH_integral = 0 ,RH_decimal = 0, Tmpr_integral= 0, Tmpr_decimal = 0;
	DHT11_trigger();
 1b8:	0e 94 cb 00 	call	0x196	; 0x196 <DHT11_trigger>
	DHT11_data_input();
 1bc:	0e 94 99 00 	call	0x132	; 0x132 <DHT11_data_input>
	dumi_read();
 1c0:	0e 94 a7 00 	call	0x14e	; 0x14e <dumi_read>
	RH_integral = DHT11_rx_byte();
 1c4:	0e 94 5f 00 	call	0xbe	; 0xbe <DHT11_rx_byte>
	RH_decimal = DHT11_rx_byte();
 1c8:	0e 94 5f 00 	call	0xbe	; 0xbe <DHT11_rx_byte>
	Tmpr_integral = DHT11_rx_byte();
 1cc:	0e 94 5f 00 	call	0xbe	; 0xbe <DHT11_rx_byte>
 1d0:	c8 2f       	mov	r28, r24
	Tmpr_decimal = DHT11_rx_byte();
 1d2:	0e 94 5f 00 	call	0xbe	; 0xbe <DHT11_rx_byte>
	DHT11_rx_byte();
 1d6:	0e 94 5f 00 	call	0xbe	; 0xbe <DHT11_rx_byte>
	DHT11_data_output();
 1da:	0e 94 96 00 	call	0x12c	; 0x12c <DHT11_data_output>
	//_delay_ms(1500);			//호출 후 1.5초 후에 재호출 가능
	return Tmpr_integral;
}
 1de:	8c 2f       	mov	r24, r28
 1e0:	cf 91       	pop	r28
 1e2:	08 95       	ret

000001e4 <FND_update_value>:
	//char sec=0, min=0;
	//int msec=0;
	//char long_key_flag=1, start_flag=0, lap_flag=0;
	
	FND4digit_init_shiftR();
	Timer0_init();
 1e4:	cf 93       	push	r28
 1e6:	df 93       	push	r29
 1e8:	ec 01       	movw	r28, r24
 1ea:	e0 e1       	ldi	r30, 0x10	; 16
 1ec:	f1 e0       	ldi	r31, 0x01	; 1
 1ee:	2a e0       	ldi	r18, 0x0A	; 10
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	b9 01       	movw	r22, r18
 1f4:	0e 94 bf 03 	call	0x77e	; 0x77e <__divmodhi4>
 1f8:	dc 01       	movw	r26, r24
 1fa:	ac 5f       	subi	r26, 0xFC	; 252
 1fc:	be 4f       	sbci	r27, 0xFE	; 254
 1fe:	8c 91       	ld	r24, X
 200:	80 83       	st	Z, r24
 202:	cb 01       	movw	r24, r22
 204:	b9 01       	movw	r22, r18
 206:	0e 94 bf 03 	call	0x77e	; 0x77e <__divmodhi4>
 20a:	dc 01       	movw	r26, r24
 20c:	ac 5f       	subi	r26, 0xFC	; 252
 20e:	be 4f       	sbci	r27, 0xFE	; 254
 210:	8c 91       	ld	r24, X
 212:	81 83       	std	Z+1, r24	; 0x01
 214:	ce 01       	movw	r24, r28
 216:	64 e6       	ldi	r22, 0x64	; 100
 218:	70 e0       	ldi	r23, 0x00	; 0
 21a:	0e 94 bf 03 	call	0x77e	; 0x77e <__divmodhi4>
 21e:	cb 01       	movw	r24, r22
 220:	b9 01       	movw	r22, r18
 222:	0e 94 bf 03 	call	0x77e	; 0x77e <__divmodhi4>
 226:	dc 01       	movw	r26, r24
 228:	ac 5f       	subi	r26, 0xFC	; 252
 22a:	be 4f       	sbci	r27, 0xFE	; 254
 22c:	8c 91       	ld	r24, X
 22e:	82 83       	std	Z+2, r24	; 0x02
 230:	ce 01       	movw	r24, r28
 232:	68 ee       	ldi	r22, 0xE8	; 232
 234:	73 e0       	ldi	r23, 0x03	; 3
 236:	0e 94 bf 03 	call	0x77e	; 0x77e <__divmodhi4>
 23a:	cb 01       	movw	r24, r22
 23c:	b9 01       	movw	r22, r18
 23e:	0e 94 bf 03 	call	0x77e	; 0x77e <__divmodhi4>
 242:	dc 01       	movw	r26, r24
 244:	ac 5f       	subi	r26, 0xFC	; 252
 246:	be 4f       	sbci	r27, 0xFE	; 254
 248:	8c 91       	ld	r24, X
 24a:	83 83       	std	Z+3, r24	; 0x03
 24c:	df 91       	pop	r29
 24e:	cf 91       	pop	r28
 250:	08 95       	ret

00000252 <FND4digit_init_shiftR>:
 252:	8a b1       	in	r24, 0x0a	; 10
 254:	80 6f       	ori	r24, 0xF0	; 240
 256:	8a b9       	out	0x0a, r24	; 10
 258:	8b b1       	in	r24, 0x0b	; 11
 25a:	8f 70       	andi	r24, 0x0F	; 15
 25c:	8b b9       	out	0x0b, r24	; 11
 25e:	87 b1       	in	r24, 0x07	; 7
 260:	88 63       	ori	r24, 0x38	; 56
 262:	87 b9       	out	0x07, r24	; 7
 264:	44 9a       	sbi	0x08, 4	; 8
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <FND_update_value>
 26e:	08 95       	ret

00000270 <FND_shift_out>:
	FND_DATA_PORT |= 1 << RClk;
	FND_update_value(0);
	return;
}
void FND_shift_out(char data){
	FND_DATA_PORT &= ~(1 << RClk);
 270:	44 98       	cbi	0x08, 4	; 8
	for(int i=0;i<8;i++){
 272:	40 e0       	ldi	r20, 0x00	; 0
 274:	50 e0       	ldi	r21, 0x00	; 0
		FND_DATA_PORT &= ~(1 << SRClk);
		FND_DATA_PORT &= ~(1 << SER);
		FND_DATA_PORT |= ((data>>i) & 1) << SER;
 276:	68 2f       	mov	r22, r24
 278:	70 e0       	ldi	r23, 0x00	; 0
	return;
}
void FND_shift_out(char data){
	FND_DATA_PORT &= ~(1 << RClk);
	for(int i=0;i<8;i++){
		FND_DATA_PORT &= ~(1 << SRClk);
 27a:	45 98       	cbi	0x08, 5	; 8
		FND_DATA_PORT &= ~(1 << SER);
 27c:	43 98       	cbi	0x08, 3	; 8
		FND_DATA_PORT |= ((data>>i) & 1) << SER;
 27e:	98 b1       	in	r25, 0x08	; 8
 280:	9b 01       	movw	r18, r22
 282:	04 2e       	mov	r0, r20
 284:	02 c0       	rjmp	.+4      	; 0x28a <FND_shift_out+0x1a>
 286:	35 95       	asr	r19
 288:	27 95       	ror	r18
 28a:	0a 94       	dec	r0
 28c:	e2 f7       	brpl	.-8      	; 0x286 <FND_shift_out+0x16>
 28e:	21 70       	andi	r18, 0x01	; 1
 290:	33 27       	eor	r19, r19
 292:	22 0f       	add	r18, r18
 294:	33 1f       	adc	r19, r19
 296:	22 0f       	add	r18, r18
 298:	33 1f       	adc	r19, r19
 29a:	22 0f       	add	r18, r18
 29c:	33 1f       	adc	r19, r19
 29e:	29 2b       	or	r18, r25
 2a0:	28 b9       	out	0x08, r18	; 8
		FND_DATA_PORT |= 1 << SRClk;
 2a2:	45 9a       	sbi	0x08, 5	; 8
	FND_update_value(0);
	return;
}
void FND_shift_out(char data){
	FND_DATA_PORT &= ~(1 << RClk);
	for(int i=0;i<8;i++){
 2a4:	4f 5f       	subi	r20, 0xFF	; 255
 2a6:	5f 4f       	sbci	r21, 0xFF	; 255
 2a8:	48 30       	cpi	r20, 0x08	; 8
 2aa:	51 05       	cpc	r21, r1
 2ac:	31 f7       	brne	.-52     	; 0x27a <FND_shift_out+0xa>
		FND_DATA_PORT &= ~(1 << SRClk);
		FND_DATA_PORT &= ~(1 << SER);
		FND_DATA_PORT |= ((data>>i) & 1) << SER;
		FND_DATA_PORT |= 1 << SRClk;
	}
	FND_DATA_PORT |= 1 << RClk;
 2ae:	44 9a       	sbi	0x08, 4	; 8
 2b0:	08 95       	ret

000002b2 <__vector_1>:
#include "HC_SR04.h"
#include "External_INT.h"

char echo_time;

ISR(INT0_vect){
 2b2:	1f 92       	push	r1
 2b4:	0f 92       	push	r0
 2b6:	0f b6       	in	r0, 0x3f	; 63
 2b8:	0f 92       	push	r0
 2ba:	11 24       	eor	r1, r1
	TCNT0 = 0;
 2bc:	16 bc       	out	0x26, r1	; 38
}
 2be:	0f 90       	pop	r0
 2c0:	0f be       	out	0x3f, r0	; 63
 2c2:	0f 90       	pop	r0
 2c4:	1f 90       	pop	r1
 2c6:	18 95       	reti

000002c8 <__vector_2>:
ISR(INT1_vect){
 2c8:	1f 92       	push	r1
 2ca:	0f 92       	push	r0
 2cc:	0f b6       	in	r0, 0x3f	; 63
 2ce:	0f 92       	push	r0
 2d0:	11 24       	eor	r1, r1
 2d2:	8f 93       	push	r24
	echo_time = TCNT0;
 2d4:	86 b5       	in	r24, 0x26	; 38
 2d6:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <echo_time>
}
 2da:	8f 91       	pop	r24
 2dc:	0f 90       	pop	r0
 2de:	0f be       	out	0x3f, r0	; 63
 2e0:	0f 90       	pop	r0
 2e2:	1f 90       	pop	r1
 2e4:	18 95       	reti

000002e6 <main>:
extern int Timer_main(void);

int main(void)
{
    
	Timer_main();
 2e6:	0e 94 1e 02 	call	0x43c	; 0x43c <Timer_main>
	sei();
 2ea:	78 94       	sei
 2ec:	ff cf       	rjmp	.-2      	; 0x2ec <main+0x6>

000002ee <__vector_14>:
	TCCR1A |= 1 << COM1A1 | 1 << COM1A0 | 1 << COM1B1 | 1 << COM1B0 | 1 << WGM11;
	TCCR1B |= 1 << WGM12 | 1 << WGM13 | 1 << CS10;
	
	OCR1A = 0;
	OCR1B = 0;
	ICR1 = 255;
 2ee:	1f 92       	push	r1
 2f0:	0f 92       	push	r0
 2f2:	0f b6       	in	r0, 0x3f	; 63
 2f4:	0f 92       	push	r0
 2f6:	11 24       	eor	r1, r1
 2f8:	2f 93       	push	r18
 2fa:	3f 93       	push	r19
 2fc:	4f 93       	push	r20
 2fe:	5f 93       	push	r21
 300:	6f 93       	push	r22
 302:	7f 93       	push	r23
 304:	8f 93       	push	r24
 306:	9f 93       	push	r25
 308:	af 93       	push	r26
 30a:	bf 93       	push	r27
 30c:	ef 93       	push	r30
 30e:	ff 93       	push	r31
 310:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <start_flag>
 314:	88 23       	and	r24, r24
 316:	49 f0       	breq	.+18     	; 0x32a <__vector_14+0x3c>
 318:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <msec>
 31c:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <msec+0x1>
 320:	01 96       	adiw	r24, 0x01	; 1
 322:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <msec+0x1>
 326:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <msec>
 32a:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <msec>
 32e:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <msec+0x1>
 332:	88 3e       	cpi	r24, 0xE8	; 232
 334:	93 40       	sbci	r25, 0x03	; 3
 336:	d4 f0       	brlt	.+52     	; 0x36c <__vector_14+0x7e>
 338:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <msec+0x1>
 33c:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <msec>
 340:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <sec>
 344:	8f 5f       	subi	r24, 0xFF	; 255
 346:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <sec>
 34a:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <sec>
 34e:	8c 33       	cpi	r24, 0x3C	; 60
 350:	68 f0       	brcs	.+26     	; 0x36c <__vector_14+0x7e>
 352:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <sec>
 356:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <min>
 35a:	8f 5f       	subi	r24, 0xFF	; 255
 35c:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <min>
 360:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <min>
 364:	8c 33       	cpi	r24, 0x3C	; 60
 366:	10 f0       	brcs	.+4      	; 0x36c <__vector_14+0x7e>
 368:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <min>
 36c:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <i>
 370:	8f 5f       	subi	r24, 0xFF	; 255
 372:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <i>
 376:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <i>
 37a:	84 30       	cpi	r24, 0x04	; 4
 37c:	10 f0       	brcs	.+4      	; 0x382 <__vector_14+0x94>
 37e:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <i>
 382:	8b b1       	in	r24, 0x0b	; 11
 384:	8f 70       	andi	r24, 0x0F	; 15
 386:	8b b9       	out	0x0b, r24	; 11
 388:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <i>
 38c:	f0 e0       	ldi	r31, 0x00	; 0
 38e:	e0 5f       	subi	r30, 0xF0	; 240
 390:	fe 4f       	sbci	r31, 0xFE	; 254
 392:	80 81       	ld	r24, Z
 394:	0e 94 38 01 	call	0x270	; 0x270 <FND_shift_out>
 398:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <i>
 39c:	9b b1       	in	r25, 0x0b	; 11
 39e:	f0 e0       	ldi	r31, 0x00	; 0
 3a0:	e0 50       	subi	r30, 0x00	; 0
 3a2:	ff 4f       	sbci	r31, 0xFF	; 255
 3a4:	80 81       	ld	r24, Z
 3a6:	89 2b       	or	r24, r25
 3a8:	8b b9       	out	0x0b, r24	; 11
 3aa:	ff 91       	pop	r31
 3ac:	ef 91       	pop	r30
 3ae:	bf 91       	pop	r27
 3b0:	af 91       	pop	r26
 3b2:	9f 91       	pop	r25
 3b4:	8f 91       	pop	r24
 3b6:	7f 91       	pop	r23
 3b8:	6f 91       	pop	r22
 3ba:	5f 91       	pop	r21
 3bc:	4f 91       	pop	r20
 3be:	3f 91       	pop	r19
 3c0:	2f 91       	pop	r18
 3c2:	0f 90       	pop	r0
 3c4:	0f be       	out	0x3f, r0	; 63
 3c6:	0f 90       	pop	r0
 3c8:	1f 90       	pop	r1
 3ca:	18 95       	reti

000003cc <Timer0_init>:
 3cc:	84 b5       	in	r24, 0x24	; 36
 3ce:	82 60       	ori	r24, 0x02	; 2
 3d0:	84 bd       	out	0x24, r24	; 36
 3d2:	85 b5       	in	r24, 0x25	; 37
 3d4:	83 60       	ori	r24, 0x03	; 3
 3d6:	85 bd       	out	0x25, r24	; 37
 3d8:	89 ef       	ldi	r24, 0xF9	; 249
 3da:	87 bd       	out	0x27, r24	; 39
 3dc:	ee e6       	ldi	r30, 0x6E	; 110
 3de:	f0 e0       	ldi	r31, 0x00	; 0
 3e0:	80 81       	ld	r24, Z
 3e2:	82 60       	ori	r24, 0x02	; 2
 3e4:	80 83       	st	Z, r24
 3e6:	08 95       	ret

000003e8 <Timer2_init_fast_PWM_outA>:
}
void Timer2_init_fast_PWM_outA(void){
	DDRB |= 1 << PORTB3;
 3e8:	23 9a       	sbi	0x04, 3	; 4
	TCCR2A |= 1 << COM2A1 | 1 << COM2A0 | 1 << WGM21 | 1 << WGM20;
 3ea:	e0 eb       	ldi	r30, 0xB0	; 176
 3ec:	f0 e0       	ldi	r31, 0x00	; 0
 3ee:	80 81       	ld	r24, Z
 3f0:	83 6c       	ori	r24, 0xC3	; 195
 3f2:	80 83       	st	Z, r24
	TCCR2B |= 1 << CS20;
 3f4:	e1 eb       	ldi	r30, 0xB1	; 177
 3f6:	f0 e0       	ldi	r31, 0x00	; 0
 3f8:	80 81       	ld	r24, Z
 3fa:	81 60       	ori	r24, 0x01	; 1
 3fc:	80 83       	st	Z, r24

	OCR2A = 0;
 3fe:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 402:	08 95       	ret

00000404 <Timer1_init_fast_PWM_outA_SurvoMotor>:
}
void Timer1_init_fast_PWM_outA_SurvoMotor(void){
	DDRB |= 1 << PORTB1 | 1 << PORTB2;
 404:	84 b1       	in	r24, 0x04	; 4
 406:	86 60       	ori	r24, 0x06	; 6
 408:	84 b9       	out	0x04, r24	; 4
	TCCR1A |= 1 << COM1A1 | 1 << COM1A0 | 1 << COM1B1 | 1 << COM1B0 | 1 << WGM11;
 40a:	e0 e8       	ldi	r30, 0x80	; 128
 40c:	f0 e0       	ldi	r31, 0x00	; 0
 40e:	80 81       	ld	r24, Z
 410:	82 6f       	ori	r24, 0xF2	; 242
 412:	80 83       	st	Z, r24
	TCCR1B |= 1 << WGM12 | 1 << WGM13 | 1 << CS12;
 414:	e1 e8       	ldi	r30, 0x81	; 129
 416:	f0 e0       	ldi	r31, 0x00	; 0
 418:	80 81       	ld	r24, Z
 41a:	8c 61       	ori	r24, 0x1C	; 28
 41c:	80 83       	st	Z, r24
	
	OCR1A = 0;
 41e:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 422:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR1B = 0;
 426:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 42a:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	ICR1 = 255;
 42e:	8f ef       	ldi	r24, 0xFF	; 255
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 436:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 43a:	08 95       	ret

0000043c <Timer_main>:
	char tmpr = 0, old_tmpr = 0;
	char count = 0;
	char red_up_down_flag = 1;
	char blue_up_down_flag = 1;
	char green_up_down_flag = 1;
	Timer1_init_fast_PWM_outA_SurvoMotor();
 43c:	0e 94 02 02 	call	0x404	; 0x404 <Timer1_init_fast_PWM_outA_SurvoMotor>
	Timer2_init_fast_PWM_outA();
 440:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <Timer2_init_fast_PWM_outA>
	Timer0_init();
 444:	0e 94 e6 01 	call	0x3cc	; 0x3cc <Timer0_init>
	FND4digit_init_shiftR();
 448:	0e 94 29 01 	call	0x252	; 0x252 <FND4digit_init_shiftR>
	DHT11_init();
 44c:	0e 94 9b 00 	call	0x136	; 0x136 <DHT11_init>
	sei();
 450:	78 94       	sei
	char green = 0;
	char tmpr = 0, old_tmpr = 0;
	char count = 0;
	char red_up_down_flag = 1;
	char blue_up_down_flag = 1;
	char green_up_down_flag = 1;
 452:	66 24       	eor	r6, r6
 454:	63 94       	inc	r6
	int red=0, blue=0;
	char green = 0;
	char tmpr = 0, old_tmpr = 0;
	char count = 0;
	char red_up_down_flag = 1;
	char blue_up_down_flag = 1;
 456:	77 24       	eor	r7, r7
 458:	73 94       	inc	r7
int Timer_main(void){
	int red=0, blue=0;
	char green = 0;
	char tmpr = 0, old_tmpr = 0;
	char count = 0;
	char red_up_down_flag = 1;
 45a:	01 e0       	ldi	r16, 0x01	; 1
	//if(!(msec%500))PORTB ^= 1<<PORTB5;
}

int Timer_main(void){
	int red=0, blue=0;
	char green = 0;
 45c:	10 e0       	ldi	r17, 0x00	; 0
	
	//if(!(msec%500))PORTB ^= 1<<PORTB5;
}

int Timer_main(void){
	int red=0, blue=0;
 45e:	c0 e0       	ldi	r28, 0x00	; 0
 460:	d0 e0       	ldi	r29, 0x00	; 0
 462:	e1 2c       	mov	r14, r1
 464:	f1 2c       	mov	r15, r1
	FND4digit_init_shiftR();
	DHT11_init();
	sei();
	
	while(1){
		count++;
 466:	81 e0       	ldi	r24, 0x01	; 1
}

int Timer_main(void){
	int red=0, blue=0;
	char green = 0;
	char tmpr = 0, old_tmpr = 0;
 468:	d1 2c       	mov	r13, r1
				tmpr = old_tmpr;
			}
		}
		if(green_up_down_flag){
			green += 4;
			if(green >= 150)green_up_down_flag = 0;
 46a:	44 24       	eor	r4, r4
 46c:	43 94       	inc	r4
 46e:	51 2c       	mov	r5, r1
		else {
			blue -= 2;
			if(blue <= 0)blue_up_down_flag = 1;
		}
		//OCR1A = red;
		OCR1B = blue;
 470:	0f 2e       	mov	r0, r31
 472:	fa e8       	ldi	r31, 0x8A	; 138
 474:	8f 2e       	mov	r8, r31
 476:	91 2c       	mov	r9, r1
 478:	f0 2d       	mov	r31, r0
		OCR2A = green;
 47a:	0f 2e       	mov	r0, r31
 47c:	f3 eb       	ldi	r31, 0xB3	; 179
 47e:	af 2e       	mov	r10, r31
 480:	b1 2c       	mov	r11, r1
 482:	f0 2d       	mov	r31, r0
 484:	26 c0       	rjmp	.+76     	; 0x4d2 <Timer_main+0x96>
	while(1){
		count++;
		if(count >=200){
			count = 0;
			old_tmpr = tmpr;
			tmpr = getTemperature();
 486:	0e 94 db 00 	call	0x1b6	; 0x1b6 <getTemperature>
 48a:	38 2e       	mov	r3, r24
			if(tmpr != 255){
 48c:	2f ef       	ldi	r18, 0xFF	; 255
 48e:	82 17       	cp	r24, r18
 490:	c9 f0       	breq	.+50     	; 0x4c4 <Timer_main+0x88>
				FND_update_value(tmpr);
 492:	c8 2e       	mov	r12, r24
 494:	d1 2c       	mov	r13, r1
 496:	c6 01       	movw	r24, r12
 498:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <FND_update_value>
				OCR1A = tmpr * 8 / 11 + 142;
 49c:	c6 01       	movw	r24, r12
 49e:	88 0f       	add	r24, r24
 4a0:	99 1f       	adc	r25, r25
 4a2:	88 0f       	add	r24, r24
 4a4:	99 1f       	adc	r25, r25
 4a6:	88 0f       	add	r24, r24
 4a8:	99 1f       	adc	r25, r25
 4aa:	6b e0       	ldi	r22, 0x0B	; 11
 4ac:	70 e0       	ldi	r23, 0x00	; 0
 4ae:	0e 94 bf 03 	call	0x77e	; 0x77e <__divmodhi4>
 4b2:	62 57       	subi	r22, 0x72	; 114
 4b4:	7f 4f       	sbci	r23, 0xFF	; 255
 4b6:	e8 e8       	ldi	r30, 0x88	; 136
 4b8:	f0 e0       	ldi	r31, 0x00	; 0
 4ba:	71 83       	std	Z+1, r23	; 0x01
 4bc:	60 83       	st	Z, r22
	while(1){
		count++;
		if(count >=200){
			count = 0;
			old_tmpr = tmpr;
			tmpr = getTemperature();
 4be:	d3 2c       	mov	r13, r3
	sei();
	
	while(1){
		count++;
		if(count >=200){
			count = 0;
 4c0:	80 e0       	ldi	r24, 0x00	; 0
 4c2:	07 c0       	rjmp	.+14     	; 0x4d2 <Timer_main+0x96>
			if(tmpr != 255){
				FND_update_value(tmpr);
				OCR1A = tmpr * 8 / 11 + 142;
			}
			else {
				FND_update_value(old_tmpr + 1000);
 4c4:	8d 2d       	mov	r24, r13
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	88 51       	subi	r24, 0x18	; 24
 4ca:	9c 4f       	sbci	r25, 0xFC	; 252
 4cc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <FND_update_value>
	sei();
	
	while(1){
		count++;
		if(count >=200){
			count = 0;
 4d0:	80 e0       	ldi	r24, 0x00	; 0
			else {
				FND_update_value(old_tmpr + 1000);
				tmpr = old_tmpr;
			}
		}
		if(green_up_down_flag){
 4d2:	66 20       	and	r6, r6
 4d4:	29 f0       	breq	.+10     	; 0x4e0 <Timer_main+0xa4>
			green += 4;
 4d6:	1c 5f       	subi	r17, 0xFC	; 252
			if(green >= 150)green_up_down_flag = 0;
 4d8:	16 39       	cpi	r17, 0x96	; 150
 4da:	30 f0       	brcs	.+12     	; 0x4e8 <Timer_main+0xac>
 4dc:	65 2c       	mov	r6, r5
 4de:	04 c0       	rjmp	.+8      	; 0x4e8 <Timer_main+0xac>
		}
		else {
			green -= 4;
 4e0:	14 50       	subi	r17, 0x04	; 4
				tmpr = old_tmpr;
			}
		}
		if(green_up_down_flag){
			green += 4;
			if(green >= 150)green_up_down_flag = 0;
 4e2:	64 2c       	mov	r6, r4
 4e4:	09 f0       	breq	.+2      	; 0x4e8 <Timer_main+0xac>
 4e6:	65 2c       	mov	r6, r5
		}
		else {
			green -= 4;
			if(green <= 0)green_up_down_flag = 1;
		}
		if(red_up_down_flag){
 4e8:	00 23       	and	r16, r16
 4ea:	49 f0       	breq	.+18     	; 0x4fe <Timer_main+0xc2>
			red++;
 4ec:	ff ef       	ldi	r31, 0xFF	; 255
 4ee:	ef 1a       	sub	r14, r31
 4f0:	ff 0a       	sbc	r15, r31
			if(red >= 150)red_up_down_flag = 0;
 4f2:	26 e9       	ldi	r18, 0x96	; 150
 4f4:	e2 16       	cp	r14, r18
 4f6:	f1 04       	cpc	r15, r1
 4f8:	54 f0       	brlt	.+20     	; 0x50e <Timer_main+0xd2>
 4fa:	05 2d       	mov	r16, r5
 4fc:	08 c0       	rjmp	.+16     	; 0x50e <Timer_main+0xd2>
		}
		else {
			red--;
 4fe:	31 e0       	ldi	r19, 0x01	; 1
 500:	e3 1a       	sub	r14, r19
 502:	f1 08       	sbc	r15, r1
			green -= 4;
			if(green <= 0)green_up_down_flag = 1;
		}
		if(red_up_down_flag){
			red++;
			if(red >= 150)red_up_down_flag = 0;
 504:	04 2d       	mov	r16, r4
 506:	1e 14       	cp	r1, r14
 508:	1f 04       	cpc	r1, r15
 50a:	0c f4       	brge	.+2      	; 0x50e <Timer_main+0xd2>
 50c:	05 2d       	mov	r16, r5
		}
		else {
			red--;
			if(red <= 0)red_up_down_flag = 1;
		}
		if(blue_up_down_flag){
 50e:	77 20       	and	r7, r7
 510:	31 f0       	breq	.+12     	; 0x51e <Timer_main+0xe2>
			blue += 2;
 512:	22 96       	adiw	r28, 0x02	; 2
			if(blue >= 150)blue_up_down_flag = 0;
 514:	c6 39       	cpi	r28, 0x96	; 150
 516:	d1 05       	cpc	r29, r1
 518:	44 f0       	brlt	.+16     	; 0x52a <Timer_main+0xee>
 51a:	75 2c       	mov	r7, r5
 51c:	06 c0       	rjmp	.+12     	; 0x52a <Timer_main+0xee>
		}
		else {
			blue -= 2;
 51e:	22 97       	sbiw	r28, 0x02	; 2
			red--;
			if(red <= 0)red_up_down_flag = 1;
		}
		if(blue_up_down_flag){
			blue += 2;
			if(blue >= 150)blue_up_down_flag = 0;
 520:	74 2c       	mov	r7, r4
 522:	1c 16       	cp	r1, r28
 524:	1d 06       	cpc	r1, r29
 526:	0c f4       	brge	.+2      	; 0x52a <Timer_main+0xee>
 528:	75 2c       	mov	r7, r5
		else {
			blue -= 2;
			if(blue <= 0)blue_up_down_flag = 1;
		}
		//OCR1A = red;
		OCR1B = blue;
 52a:	f4 01       	movw	r30, r8
 52c:	d1 83       	std	Z+1, r29	; 0x01
 52e:	c0 83       	st	Z, r28
		OCR2A = green;
 530:	f5 01       	movw	r30, r10
 532:	10 83       	st	Z, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 534:	ff ef       	ldi	r31, 0xFF	; 255
 536:	26 e7       	ldi	r18, 0x76	; 118
 538:	31 e0       	ldi	r19, 0x01	; 1
 53a:	f1 50       	subi	r31, 0x01	; 1
 53c:	20 40       	sbci	r18, 0x00	; 0
 53e:	30 40       	sbci	r19, 0x00	; 0
 540:	e1 f7       	brne	.-8      	; 0x53a <Timer_main+0xfe>
 542:	00 c0       	rjmp	.+0      	; 0x544 <Timer_main+0x108>
 544:	00 00       	nop
	FND4digit_init_shiftR();
	DHT11_init();
	sei();
	
	while(1){
		count++;
 546:	8f 5f       	subi	r24, 0xFF	; 255
		if(count >=200){
 548:	88 3c       	cpi	r24, 0xC8	; 200
 54a:	18 f2       	brcs	.-122    	; 0x4d2 <Timer_main+0x96>
 54c:	9c cf       	rjmp	.-200    	; 0x486 <Timer_main+0x4a>

0000054e <vfprintf>:
 54e:	ab e0       	ldi	r26, 0x0B	; 11
 550:	b0 e0       	ldi	r27, 0x00	; 0
 552:	ed ea       	ldi	r30, 0xAD	; 173
 554:	f2 e0       	ldi	r31, 0x02	; 2
 556:	0c 94 d7 03 	jmp	0x7ae	; 0x7ae <__prologue_saves__+0x8>
 55a:	6c 01       	movw	r12, r24
 55c:	7b 01       	movw	r14, r22
 55e:	3a 01       	movw	r6, r20
 560:	fc 01       	movw	r30, r24
 562:	17 82       	std	Z+7, r1	; 0x07
 564:	16 82       	std	Z+6, r1	; 0x06
 566:	83 81       	ldd	r24, Z+3	; 0x03
 568:	81 ff       	sbrs	r24, 1
 56a:	03 c1       	rjmp	.+518    	; 0x772 <vfprintf+0x224>
 56c:	ce 01       	movw	r24, r28
 56e:	01 96       	adiw	r24, 0x01	; 1
 570:	4c 01       	movw	r8, r24
 572:	f6 01       	movw	r30, r12
 574:	b3 80       	ldd	r11, Z+3	; 0x03
 576:	f7 01       	movw	r30, r14
 578:	b3 fc       	sbrc	r11, 3
 57a:	05 91       	lpm	r16, Z+
 57c:	b3 fe       	sbrs	r11, 3
 57e:	01 91       	ld	r16, Z+
 580:	7f 01       	movw	r14, r30
 582:	00 23       	and	r16, r16
 584:	09 f4       	brne	.+2      	; 0x588 <vfprintf+0x3a>
 586:	f1 c0       	rjmp	.+482    	; 0x76a <vfprintf+0x21c>
 588:	05 32       	cpi	r16, 0x25	; 37
 58a:	49 f4       	brne	.+18     	; 0x59e <vfprintf+0x50>
 58c:	b3 fc       	sbrc	r11, 3
 58e:	05 91       	lpm	r16, Z+
 590:	b3 fe       	sbrs	r11, 3
 592:	01 91       	ld	r16, Z+
 594:	7f 01       	movw	r14, r30
 596:	05 32       	cpi	r16, 0x25	; 37
 598:	11 f0       	breq	.+4      	; 0x59e <vfprintf+0x50>
 59a:	10 e0       	ldi	r17, 0x00	; 0
 59c:	19 c0       	rjmp	.+50     	; 0x5d0 <vfprintf+0x82>
 59e:	b6 01       	movw	r22, r12
 5a0:	80 2f       	mov	r24, r16
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	0e 94 29 04 	call	0x852	; 0x852 <fputc>
 5a8:	53 01       	movw	r10, r6
 5aa:	35 01       	movw	r6, r10
 5ac:	e2 cf       	rjmp	.-60     	; 0x572 <vfprintf+0x24>
 5ae:	00 23       	and	r16, r16
 5b0:	09 f4       	brne	.+2      	; 0x5b4 <vfprintf+0x66>
 5b2:	db c0       	rjmp	.+438    	; 0x76a <vfprintf+0x21c>
 5b4:	60 2f       	mov	r22, r16
 5b6:	70 e0       	ldi	r23, 0x00	; 0
 5b8:	8f e6       	ldi	r24, 0x6F	; 111
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	0e 94 1e 04 	call	0x83c	; 0x83c <strchr_P>
 5c0:	89 2b       	or	r24, r25
 5c2:	49 f0       	breq	.+18     	; 0x5d6 <vfprintf+0x88>
 5c4:	f7 01       	movw	r30, r14
 5c6:	b3 fc       	sbrc	r11, 3
 5c8:	05 91       	lpm	r16, Z+
 5ca:	b3 fe       	sbrs	r11, 3
 5cc:	01 91       	ld	r16, Z+
 5ce:	7f 01       	movw	r14, r30
 5d0:	17 ff       	sbrs	r17, 7
 5d2:	ed cf       	rjmp	.-38     	; 0x5ae <vfprintf+0x60>
 5d4:	04 c0       	rjmp	.+8      	; 0x5de <vfprintf+0x90>
 5d6:	03 32       	cpi	r16, 0x23	; 35
 5d8:	39 f0       	breq	.+14     	; 0x5e8 <vfprintf+0x9a>
 5da:	0c 36       	cpi	r16, 0x6C	; 108
 5dc:	19 f0       	breq	.+6      	; 0x5e4 <vfprintf+0x96>
 5de:	01 11       	cpse	r16, r1
 5e0:	05 c0       	rjmp	.+10     	; 0x5ec <vfprintf+0x9e>
 5e2:	c3 c0       	rjmp	.+390    	; 0x76a <vfprintf+0x21c>
 5e4:	10 68       	ori	r17, 0x80	; 128
 5e6:	ee cf       	rjmp	.-36     	; 0x5c4 <vfprintf+0x76>
 5e8:	10 e1       	ldi	r17, 0x10	; 16
 5ea:	ec cf       	rjmp	.-40     	; 0x5c4 <vfprintf+0x76>
 5ec:	60 2f       	mov	r22, r16
 5ee:	70 e0       	ldi	r23, 0x00	; 0
 5f0:	88 e6       	ldi	r24, 0x68	; 104
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0e 94 1e 04 	call	0x83c	; 0x83c <strchr_P>
 5f8:	89 2b       	or	r24, r25
 5fa:	41 f0       	breq	.+16     	; 0x60c <vfprintf+0xbe>
 5fc:	53 01       	movw	r10, r6
 5fe:	f4 e0       	ldi	r31, 0x04	; 4
 600:	af 0e       	add	r10, r31
 602:	b1 1c       	adc	r11, r1
 604:	b6 01       	movw	r22, r12
 606:	8f e3       	ldi	r24, 0x3F	; 63
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	10 c0       	rjmp	.+32     	; 0x62c <vfprintf+0xde>
 60c:	03 36       	cpi	r16, 0x63	; 99
 60e:	31 f0       	breq	.+12     	; 0x61c <vfprintf+0xce>
 610:	03 37       	cpi	r16, 0x73	; 115
 612:	79 f0       	breq	.+30     	; 0x632 <vfprintf+0xe4>
 614:	03 35       	cpi	r16, 0x53	; 83
 616:	11 f5       	brne	.+68     	; 0x65c <vfprintf+0x10e>
 618:	11 60       	ori	r17, 0x01	; 1
 61a:	0b c0       	rjmp	.+22     	; 0x632 <vfprintf+0xe4>
 61c:	53 01       	movw	r10, r6
 61e:	82 e0       	ldi	r24, 0x02	; 2
 620:	a8 0e       	add	r10, r24
 622:	b1 1c       	adc	r11, r1
 624:	b6 01       	movw	r22, r12
 626:	f3 01       	movw	r30, r6
 628:	80 81       	ld	r24, Z
 62a:	91 81       	ldd	r25, Z+1	; 0x01
 62c:	0e 94 29 04 	call	0x852	; 0x852 <fputc>
 630:	bc cf       	rjmp	.-136    	; 0x5aa <vfprintf+0x5c>
 632:	53 01       	movw	r10, r6
 634:	f2 e0       	ldi	r31, 0x02	; 2
 636:	af 0e       	add	r10, r31
 638:	b1 1c       	adc	r11, r1
 63a:	f3 01       	movw	r30, r6
 63c:	60 80       	ld	r6, Z
 63e:	71 80       	ldd	r7, Z+1	; 0x01
 640:	f3 01       	movw	r30, r6
 642:	10 fd       	sbrc	r17, 0
 644:	85 91       	lpm	r24, Z+
 646:	10 ff       	sbrs	r17, 0
 648:	81 91       	ld	r24, Z+
 64a:	3f 01       	movw	r6, r30
 64c:	88 23       	and	r24, r24
 64e:	09 f4       	brne	.+2      	; 0x652 <vfprintf+0x104>
 650:	ac cf       	rjmp	.-168    	; 0x5aa <vfprintf+0x5c>
 652:	b6 01       	movw	r22, r12
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	0e 94 29 04 	call	0x852	; 0x852 <fputc>
 65a:	f2 cf       	rjmp	.-28     	; 0x640 <vfprintf+0xf2>
 65c:	04 36       	cpi	r16, 0x64	; 100
 65e:	11 f0       	breq	.+4      	; 0x664 <vfprintf+0x116>
 660:	09 36       	cpi	r16, 0x69	; 105
 662:	21 f5       	brne	.+72     	; 0x6ac <vfprintf+0x15e>
 664:	53 01       	movw	r10, r6
 666:	17 ff       	sbrs	r17, 7
 668:	09 c0       	rjmp	.+18     	; 0x67c <vfprintf+0x12e>
 66a:	f4 e0       	ldi	r31, 0x04	; 4
 66c:	af 0e       	add	r10, r31
 66e:	b1 1c       	adc	r11, r1
 670:	f3 01       	movw	r30, r6
 672:	60 81       	ld	r22, Z
 674:	71 81       	ldd	r23, Z+1	; 0x01
 676:	82 81       	ldd	r24, Z+2	; 0x02
 678:	93 81       	ldd	r25, Z+3	; 0x03
 67a:	0a c0       	rjmp	.+20     	; 0x690 <vfprintf+0x142>
 67c:	f2 e0       	ldi	r31, 0x02	; 2
 67e:	af 0e       	add	r10, r31
 680:	b1 1c       	adc	r11, r1
 682:	f3 01       	movw	r30, r6
 684:	60 81       	ld	r22, Z
 686:	71 81       	ldd	r23, Z+1	; 0x01
 688:	07 2e       	mov	r0, r23
 68a:	00 0c       	add	r0, r0
 68c:	88 0b       	sbc	r24, r24
 68e:	99 0b       	sbc	r25, r25
 690:	1f 7e       	andi	r17, 0xEF	; 239
 692:	97 ff       	sbrs	r25, 7
 694:	08 c0       	rjmp	.+16     	; 0x6a6 <vfprintf+0x158>
 696:	90 95       	com	r25
 698:	80 95       	com	r24
 69a:	70 95       	com	r23
 69c:	61 95       	neg	r22
 69e:	7f 4f       	sbci	r23, 0xFF	; 255
 6a0:	8f 4f       	sbci	r24, 0xFF	; 255
 6a2:	9f 4f       	sbci	r25, 0xFF	; 255
 6a4:	10 64       	ori	r17, 0x40	; 64
 6a6:	2a e0       	ldi	r18, 0x0A	; 10
 6a8:	30 e0       	ldi	r19, 0x00	; 0
 6aa:	30 c0       	rjmp	.+96     	; 0x70c <vfprintf+0x1be>
 6ac:	00 37       	cpi	r16, 0x70	; 112
 6ae:	91 f0       	breq	.+36     	; 0x6d4 <vfprintf+0x186>
 6b0:	40 f4       	brcc	.+16     	; 0x6c2 <vfprintf+0x174>
 6b2:	08 35       	cpi	r16, 0x58	; 88
 6b4:	a1 f0       	breq	.+40     	; 0x6de <vfprintf+0x190>
 6b6:	0f 36       	cpi	r16, 0x6F	; 111
 6b8:	09 f0       	breq	.+2      	; 0x6bc <vfprintf+0x16e>
 6ba:	57 c0       	rjmp	.+174    	; 0x76a <vfprintf+0x21c>
 6bc:	28 e0       	ldi	r18, 0x08	; 8
 6be:	30 e0       	ldi	r19, 0x00	; 0
 6c0:	11 c0       	rjmp	.+34     	; 0x6e4 <vfprintf+0x196>
 6c2:	05 37       	cpi	r16, 0x75	; 117
 6c4:	19 f0       	breq	.+6      	; 0x6cc <vfprintf+0x17e>
 6c6:	08 37       	cpi	r16, 0x78	; 120
 6c8:	31 f0       	breq	.+12     	; 0x6d6 <vfprintf+0x188>
 6ca:	4f c0       	rjmp	.+158    	; 0x76a <vfprintf+0x21c>
 6cc:	1f 7e       	andi	r17, 0xEF	; 239
 6ce:	2a e0       	ldi	r18, 0x0A	; 10
 6d0:	30 e0       	ldi	r19, 0x00	; 0
 6d2:	08 c0       	rjmp	.+16     	; 0x6e4 <vfprintf+0x196>
 6d4:	10 61       	ori	r17, 0x10	; 16
 6d6:	14 62       	ori	r17, 0x24	; 36
 6d8:	20 e1       	ldi	r18, 0x10	; 16
 6da:	30 e0       	ldi	r19, 0x00	; 0
 6dc:	03 c0       	rjmp	.+6      	; 0x6e4 <vfprintf+0x196>
 6de:	14 60       	ori	r17, 0x04	; 4
 6e0:	20 e1       	ldi	r18, 0x10	; 16
 6e2:	32 e0       	ldi	r19, 0x02	; 2
 6e4:	53 01       	movw	r10, r6
 6e6:	17 ff       	sbrs	r17, 7
 6e8:	09 c0       	rjmp	.+18     	; 0x6fc <vfprintf+0x1ae>
 6ea:	f4 e0       	ldi	r31, 0x04	; 4
 6ec:	af 0e       	add	r10, r31
 6ee:	b1 1c       	adc	r11, r1
 6f0:	f3 01       	movw	r30, r6
 6f2:	60 81       	ld	r22, Z
 6f4:	71 81       	ldd	r23, Z+1	; 0x01
 6f6:	82 81       	ldd	r24, Z+2	; 0x02
 6f8:	93 81       	ldd	r25, Z+3	; 0x03
 6fa:	08 c0       	rjmp	.+16     	; 0x70c <vfprintf+0x1be>
 6fc:	f2 e0       	ldi	r31, 0x02	; 2
 6fe:	af 0e       	add	r10, r31
 700:	b1 1c       	adc	r11, r1
 702:	f3 01       	movw	r30, r6
 704:	60 81       	ld	r22, Z
 706:	71 81       	ldd	r23, Z+1	; 0x01
 708:	80 e0       	ldi	r24, 0x00	; 0
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	a4 01       	movw	r20, r8
 70e:	0e 94 65 04 	call	0x8ca	; 0x8ca <__ultoa_invert>
 712:	08 2f       	mov	r16, r24
 714:	08 19       	sub	r16, r8
 716:	16 ff       	sbrs	r17, 6
 718:	05 c0       	rjmp	.+10     	; 0x724 <vfprintf+0x1d6>
 71a:	b6 01       	movw	r22, r12
 71c:	8d e2       	ldi	r24, 0x2D	; 45
 71e:	90 e0       	ldi	r25, 0x00	; 0
 720:	0e 94 29 04 	call	0x852	; 0x852 <fputc>
 724:	14 ff       	sbrs	r17, 4
 726:	15 c0       	rjmp	.+42     	; 0x752 <vfprintf+0x204>
 728:	fe 01       	movw	r30, r28
 72a:	e0 0f       	add	r30, r16
 72c:	f1 1d       	adc	r31, r1
 72e:	80 81       	ld	r24, Z
 730:	80 33       	cpi	r24, 0x30	; 48
 732:	79 f0       	breq	.+30     	; 0x752 <vfprintf+0x204>
 734:	b6 01       	movw	r22, r12
 736:	80 e3       	ldi	r24, 0x30	; 48
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	0e 94 29 04 	call	0x852	; 0x852 <fputc>
 73e:	12 ff       	sbrs	r17, 2
 740:	08 c0       	rjmp	.+16     	; 0x752 <vfprintf+0x204>
 742:	10 72       	andi	r17, 0x20	; 32
 744:	81 2f       	mov	r24, r17
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	b6 01       	movw	r22, r12
 74a:	88 5a       	subi	r24, 0xA8	; 168
 74c:	9f 4f       	sbci	r25, 0xFF	; 255
 74e:	0e 94 29 04 	call	0x852	; 0x852 <fputc>
 752:	01 50       	subi	r16, 0x01	; 1
 754:	f4 01       	movw	r30, r8
 756:	e0 0f       	add	r30, r16
 758:	f1 1d       	adc	r31, r1
 75a:	80 81       	ld	r24, Z
 75c:	b6 01       	movw	r22, r12
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	0e 94 29 04 	call	0x852	; 0x852 <fputc>
 764:	01 11       	cpse	r16, r1
 766:	f5 cf       	rjmp	.-22     	; 0x752 <vfprintf+0x204>
 768:	20 cf       	rjmp	.-448    	; 0x5aa <vfprintf+0x5c>
 76a:	f6 01       	movw	r30, r12
 76c:	86 81       	ldd	r24, Z+6	; 0x06
 76e:	97 81       	ldd	r25, Z+7	; 0x07
 770:	02 c0       	rjmp	.+4      	; 0x776 <vfprintf+0x228>
 772:	8f ef       	ldi	r24, 0xFF	; 255
 774:	9f ef       	ldi	r25, 0xFF	; 255
 776:	2b 96       	adiw	r28, 0x0b	; 11
 778:	ee e0       	ldi	r30, 0x0E	; 14
 77a:	0c 94 f3 03 	jmp	0x7e6	; 0x7e6 <__epilogue_restores__+0x8>

0000077e <__divmodhi4>:
 77e:	97 fb       	bst	r25, 7
 780:	07 2e       	mov	r0, r23
 782:	16 f4       	brtc	.+4      	; 0x788 <__divmodhi4+0xa>
 784:	00 94       	com	r0
 786:	07 d0       	rcall	.+14     	; 0x796 <__divmodhi4_neg1>
 788:	77 fd       	sbrc	r23, 7
 78a:	09 d0       	rcall	.+18     	; 0x79e <__divmodhi4_neg2>
 78c:	0e 94 0a 04 	call	0x814	; 0x814 <__udivmodhi4>
 790:	07 fc       	sbrc	r0, 7
 792:	05 d0       	rcall	.+10     	; 0x79e <__divmodhi4_neg2>
 794:	3e f4       	brtc	.+14     	; 0x7a4 <__divmodhi4_exit>

00000796 <__divmodhi4_neg1>:
 796:	90 95       	com	r25
 798:	81 95       	neg	r24
 79a:	9f 4f       	sbci	r25, 0xFF	; 255
 79c:	08 95       	ret

0000079e <__divmodhi4_neg2>:
 79e:	70 95       	com	r23
 7a0:	61 95       	neg	r22
 7a2:	7f 4f       	sbci	r23, 0xFF	; 255

000007a4 <__divmodhi4_exit>:
 7a4:	08 95       	ret

000007a6 <__prologue_saves__>:
 7a6:	2f 92       	push	r2
 7a8:	3f 92       	push	r3
 7aa:	4f 92       	push	r4
 7ac:	5f 92       	push	r5
 7ae:	6f 92       	push	r6
 7b0:	7f 92       	push	r7
 7b2:	8f 92       	push	r8
 7b4:	9f 92       	push	r9
 7b6:	af 92       	push	r10
 7b8:	bf 92       	push	r11
 7ba:	cf 92       	push	r12
 7bc:	df 92       	push	r13
 7be:	ef 92       	push	r14
 7c0:	ff 92       	push	r15
 7c2:	0f 93       	push	r16
 7c4:	1f 93       	push	r17
 7c6:	cf 93       	push	r28
 7c8:	df 93       	push	r29
 7ca:	cd b7       	in	r28, 0x3d	; 61
 7cc:	de b7       	in	r29, 0x3e	; 62
 7ce:	ca 1b       	sub	r28, r26
 7d0:	db 0b       	sbc	r29, r27
 7d2:	0f b6       	in	r0, 0x3f	; 63
 7d4:	f8 94       	cli
 7d6:	de bf       	out	0x3e, r29	; 62
 7d8:	0f be       	out	0x3f, r0	; 63
 7da:	cd bf       	out	0x3d, r28	; 61
 7dc:	09 94       	ijmp

000007de <__epilogue_restores__>:
 7de:	2a 88       	ldd	r2, Y+18	; 0x12
 7e0:	39 88       	ldd	r3, Y+17	; 0x11
 7e2:	48 88       	ldd	r4, Y+16	; 0x10
 7e4:	5f 84       	ldd	r5, Y+15	; 0x0f
 7e6:	6e 84       	ldd	r6, Y+14	; 0x0e
 7e8:	7d 84       	ldd	r7, Y+13	; 0x0d
 7ea:	8c 84       	ldd	r8, Y+12	; 0x0c
 7ec:	9b 84       	ldd	r9, Y+11	; 0x0b
 7ee:	aa 84       	ldd	r10, Y+10	; 0x0a
 7f0:	b9 84       	ldd	r11, Y+9	; 0x09
 7f2:	c8 84       	ldd	r12, Y+8	; 0x08
 7f4:	df 80       	ldd	r13, Y+7	; 0x07
 7f6:	ee 80       	ldd	r14, Y+6	; 0x06
 7f8:	fd 80       	ldd	r15, Y+5	; 0x05
 7fa:	0c 81       	ldd	r16, Y+4	; 0x04
 7fc:	1b 81       	ldd	r17, Y+3	; 0x03
 7fe:	aa 81       	ldd	r26, Y+2	; 0x02
 800:	b9 81       	ldd	r27, Y+1	; 0x01
 802:	ce 0f       	add	r28, r30
 804:	d1 1d       	adc	r29, r1
 806:	0f b6       	in	r0, 0x3f	; 63
 808:	f8 94       	cli
 80a:	de bf       	out	0x3e, r29	; 62
 80c:	0f be       	out	0x3f, r0	; 63
 80e:	cd bf       	out	0x3d, r28	; 61
 810:	ed 01       	movw	r28, r26
 812:	08 95       	ret

00000814 <__udivmodhi4>:
 814:	aa 1b       	sub	r26, r26
 816:	bb 1b       	sub	r27, r27
 818:	51 e1       	ldi	r21, 0x11	; 17
 81a:	07 c0       	rjmp	.+14     	; 0x82a <__udivmodhi4_ep>

0000081c <__udivmodhi4_loop>:
 81c:	aa 1f       	adc	r26, r26
 81e:	bb 1f       	adc	r27, r27
 820:	a6 17       	cp	r26, r22
 822:	b7 07       	cpc	r27, r23
 824:	10 f0       	brcs	.+4      	; 0x82a <__udivmodhi4_ep>
 826:	a6 1b       	sub	r26, r22
 828:	b7 0b       	sbc	r27, r23

0000082a <__udivmodhi4_ep>:
 82a:	88 1f       	adc	r24, r24
 82c:	99 1f       	adc	r25, r25
 82e:	5a 95       	dec	r21
 830:	a9 f7       	brne	.-22     	; 0x81c <__udivmodhi4_loop>
 832:	80 95       	com	r24
 834:	90 95       	com	r25
 836:	bc 01       	movw	r22, r24
 838:	cd 01       	movw	r24, r26
 83a:	08 95       	ret

0000083c <strchr_P>:
 83c:	fc 01       	movw	r30, r24
 83e:	05 90       	lpm	r0, Z+
 840:	06 16       	cp	r0, r22
 842:	21 f0       	breq	.+8      	; 0x84c <strchr_P+0x10>
 844:	00 20       	and	r0, r0
 846:	d9 f7       	brne	.-10     	; 0x83e <strchr_P+0x2>
 848:	c0 01       	movw	r24, r0
 84a:	08 95       	ret
 84c:	31 97       	sbiw	r30, 0x01	; 1
 84e:	cf 01       	movw	r24, r30
 850:	08 95       	ret

00000852 <fputc>:
 852:	0f 93       	push	r16
 854:	1f 93       	push	r17
 856:	cf 93       	push	r28
 858:	df 93       	push	r29
 85a:	fb 01       	movw	r30, r22
 85c:	23 81       	ldd	r18, Z+3	; 0x03
 85e:	21 fd       	sbrc	r18, 1
 860:	03 c0       	rjmp	.+6      	; 0x868 <fputc+0x16>
 862:	8f ef       	ldi	r24, 0xFF	; 255
 864:	9f ef       	ldi	r25, 0xFF	; 255
 866:	2c c0       	rjmp	.+88     	; 0x8c0 <fputc+0x6e>
 868:	22 ff       	sbrs	r18, 2
 86a:	16 c0       	rjmp	.+44     	; 0x898 <fputc+0x46>
 86c:	46 81       	ldd	r20, Z+6	; 0x06
 86e:	57 81       	ldd	r21, Z+7	; 0x07
 870:	24 81       	ldd	r18, Z+4	; 0x04
 872:	35 81       	ldd	r19, Z+5	; 0x05
 874:	42 17       	cp	r20, r18
 876:	53 07       	cpc	r21, r19
 878:	44 f4       	brge	.+16     	; 0x88a <fputc+0x38>
 87a:	a0 81       	ld	r26, Z
 87c:	b1 81       	ldd	r27, Z+1	; 0x01
 87e:	9d 01       	movw	r18, r26
 880:	2f 5f       	subi	r18, 0xFF	; 255
 882:	3f 4f       	sbci	r19, 0xFF	; 255
 884:	31 83       	std	Z+1, r19	; 0x01
 886:	20 83       	st	Z, r18
 888:	8c 93       	st	X, r24
 88a:	26 81       	ldd	r18, Z+6	; 0x06
 88c:	37 81       	ldd	r19, Z+7	; 0x07
 88e:	2f 5f       	subi	r18, 0xFF	; 255
 890:	3f 4f       	sbci	r19, 0xFF	; 255
 892:	37 83       	std	Z+7, r19	; 0x07
 894:	26 83       	std	Z+6, r18	; 0x06
 896:	14 c0       	rjmp	.+40     	; 0x8c0 <fputc+0x6e>
 898:	8b 01       	movw	r16, r22
 89a:	ec 01       	movw	r28, r24
 89c:	fb 01       	movw	r30, r22
 89e:	00 84       	ldd	r0, Z+8	; 0x08
 8a0:	f1 85       	ldd	r31, Z+9	; 0x09
 8a2:	e0 2d       	mov	r30, r0
 8a4:	09 95       	icall
 8a6:	89 2b       	or	r24, r25
 8a8:	e1 f6       	brne	.-72     	; 0x862 <fputc+0x10>
 8aa:	d8 01       	movw	r26, r16
 8ac:	16 96       	adiw	r26, 0x06	; 6
 8ae:	8d 91       	ld	r24, X+
 8b0:	9c 91       	ld	r25, X
 8b2:	17 97       	sbiw	r26, 0x07	; 7
 8b4:	01 96       	adiw	r24, 0x01	; 1
 8b6:	17 96       	adiw	r26, 0x07	; 7
 8b8:	9c 93       	st	X, r25
 8ba:	8e 93       	st	-X, r24
 8bc:	16 97       	sbiw	r26, 0x06	; 6
 8be:	ce 01       	movw	r24, r28
 8c0:	df 91       	pop	r29
 8c2:	cf 91       	pop	r28
 8c4:	1f 91       	pop	r17
 8c6:	0f 91       	pop	r16
 8c8:	08 95       	ret

000008ca <__ultoa_invert>:
 8ca:	fa 01       	movw	r30, r20
 8cc:	aa 27       	eor	r26, r26
 8ce:	28 30       	cpi	r18, 0x08	; 8
 8d0:	51 f1       	breq	.+84     	; 0x926 <__stack+0x27>
 8d2:	20 31       	cpi	r18, 0x10	; 16
 8d4:	81 f1       	breq	.+96     	; 0x936 <__stack+0x37>
 8d6:	e8 94       	clt
 8d8:	6f 93       	push	r22
 8da:	6e 7f       	andi	r22, 0xFE	; 254
 8dc:	6e 5f       	subi	r22, 0xFE	; 254
 8de:	7f 4f       	sbci	r23, 0xFF	; 255
 8e0:	8f 4f       	sbci	r24, 0xFF	; 255
 8e2:	9f 4f       	sbci	r25, 0xFF	; 255
 8e4:	af 4f       	sbci	r26, 0xFF	; 255
 8e6:	b1 e0       	ldi	r27, 0x01	; 1
 8e8:	3e d0       	rcall	.+124    	; 0x966 <__stack+0x67>
 8ea:	b4 e0       	ldi	r27, 0x04	; 4
 8ec:	3c d0       	rcall	.+120    	; 0x966 <__stack+0x67>
 8ee:	67 0f       	add	r22, r23
 8f0:	78 1f       	adc	r23, r24
 8f2:	89 1f       	adc	r24, r25
 8f4:	9a 1f       	adc	r25, r26
 8f6:	a1 1d       	adc	r26, r1
 8f8:	68 0f       	add	r22, r24
 8fa:	79 1f       	adc	r23, r25
 8fc:	8a 1f       	adc	r24, r26
 8fe:	91 1d       	adc	r25, r1
 900:	a1 1d       	adc	r26, r1
 902:	6a 0f       	add	r22, r26
 904:	71 1d       	adc	r23, r1
 906:	81 1d       	adc	r24, r1
 908:	91 1d       	adc	r25, r1
 90a:	a1 1d       	adc	r26, r1
 90c:	20 d0       	rcall	.+64     	; 0x94e <__stack+0x4f>
 90e:	09 f4       	brne	.+2      	; 0x912 <__stack+0x13>
 910:	68 94       	set
 912:	3f 91       	pop	r19
 914:	2a e0       	ldi	r18, 0x0A	; 10
 916:	26 9f       	mul	r18, r22
 918:	11 24       	eor	r1, r1
 91a:	30 19       	sub	r19, r0
 91c:	30 5d       	subi	r19, 0xD0	; 208
 91e:	31 93       	st	Z+, r19
 920:	de f6       	brtc	.-74     	; 0x8d8 <__ultoa_invert+0xe>
 922:	cf 01       	movw	r24, r30
 924:	08 95       	ret
 926:	46 2f       	mov	r20, r22
 928:	47 70       	andi	r20, 0x07	; 7
 92a:	40 5d       	subi	r20, 0xD0	; 208
 92c:	41 93       	st	Z+, r20
 92e:	b3 e0       	ldi	r27, 0x03	; 3
 930:	0f d0       	rcall	.+30     	; 0x950 <__stack+0x51>
 932:	c9 f7       	brne	.-14     	; 0x926 <__stack+0x27>
 934:	f6 cf       	rjmp	.-20     	; 0x922 <__stack+0x23>
 936:	46 2f       	mov	r20, r22
 938:	4f 70       	andi	r20, 0x0F	; 15
 93a:	40 5d       	subi	r20, 0xD0	; 208
 93c:	4a 33       	cpi	r20, 0x3A	; 58
 93e:	18 f0       	brcs	.+6      	; 0x946 <__stack+0x47>
 940:	49 5d       	subi	r20, 0xD9	; 217
 942:	31 fd       	sbrc	r19, 1
 944:	40 52       	subi	r20, 0x20	; 32
 946:	41 93       	st	Z+, r20
 948:	02 d0       	rcall	.+4      	; 0x94e <__stack+0x4f>
 94a:	a9 f7       	brne	.-22     	; 0x936 <__stack+0x37>
 94c:	ea cf       	rjmp	.-44     	; 0x922 <__stack+0x23>
 94e:	b4 e0       	ldi	r27, 0x04	; 4
 950:	a6 95       	lsr	r26
 952:	97 95       	ror	r25
 954:	87 95       	ror	r24
 956:	77 95       	ror	r23
 958:	67 95       	ror	r22
 95a:	ba 95       	dec	r27
 95c:	c9 f7       	brne	.-14     	; 0x950 <__stack+0x51>
 95e:	00 97       	sbiw	r24, 0x00	; 0
 960:	61 05       	cpc	r22, r1
 962:	71 05       	cpc	r23, r1
 964:	08 95       	ret
 966:	9b 01       	movw	r18, r22
 968:	ac 01       	movw	r20, r24
 96a:	0a 2e       	mov	r0, r26
 96c:	06 94       	lsr	r0
 96e:	57 95       	ror	r21
 970:	47 95       	ror	r20
 972:	37 95       	ror	r19
 974:	27 95       	ror	r18
 976:	ba 95       	dec	r27
 978:	c9 f7       	brne	.-14     	; 0x96c <__stack+0x6d>
 97a:	62 0f       	add	r22, r18
 97c:	73 1f       	adc	r23, r19
 97e:	84 1f       	adc	r24, r20
 980:	95 1f       	adc	r25, r21
 982:	a0 1d       	adc	r26, r0
 984:	08 95       	ret

00000986 <_exit>:
 986:	f8 94       	cli

00000988 <__stop_program>:
 988:	ff cf       	rjmp	.-2      	; 0x988 <__stop_program>
