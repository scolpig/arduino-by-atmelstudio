
arduino_uno.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  00000c06  00000c9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c06  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  0080013c  0080013c  00000cd6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cd6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d34  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000180  00000000  00000000  00000d74  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001720  00000000  00000000  00000ef4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f41  00000000  00000000  00002614  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ead  00000000  00000000  00003555  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000354  00000000  00000000  00004404  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000063d  00000000  00000000  00004758  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c80  00000000  00000000  00004d95  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  00005a15  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 40 00 	jmp	0x80	; 0x80 <__ctors_end>
   4:	0c 94 2b 01 	jmp	0x256	; 0x256 <__vector_1>
   8:	0c 94 36 01 	jmp	0x26c	; 0x26c <__vector_2>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 48 01 	jmp	0x290	; 0x290 <__vector_14>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	45 46       	sbci	r20, 0x65	; 101
  6a:	47 65       	ori	r20, 0x57	; 87
  6c:	66 67       	ori	r22, 0x76	; 118
	...

0000006f <__c.2314>:
  6f:	20 2b 2d 2e 30 31 32 33 34 35 36 37 38 39 68 00      +-.0123456789h.
	...

00000080 <__ctors_end>:
  80:	11 24       	eor	r1, r1
  82:	1f be       	out	0x3f, r1	; 63
  84:	cf ef       	ldi	r28, 0xFF	; 255
  86:	d8 e0       	ldi	r29, 0x08	; 8
  88:	de bf       	out	0x3e, r29	; 62
  8a:	cd bf       	out	0x3d, r28	; 61

0000008c <__do_copy_data>:
  8c:	11 e0       	ldi	r17, 0x01	; 1
  8e:	a0 e0       	ldi	r26, 0x00	; 0
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	e6 e0       	ldi	r30, 0x06	; 6
  94:	fc e0       	ldi	r31, 0x0C	; 12
  96:	02 c0       	rjmp	.+4      	; 0x9c <__do_copy_data+0x10>
  98:	05 90       	lpm	r0, Z+
  9a:	0d 92       	st	X+, r0
  9c:	ac 33       	cpi	r26, 0x3C	; 60
  9e:	b1 07       	cpc	r27, r17
  a0:	d9 f7       	brne	.-10     	; 0x98 <__do_copy_data+0xc>

000000a2 <__do_clear_bss>:
  a2:	21 e0       	ldi	r18, 0x01	; 1
  a4:	ac e3       	ldi	r26, 0x3C	; 60
  a6:	b1 e0       	ldi	r27, 0x01	; 1
  a8:	01 c0       	rjmp	.+2      	; 0xac <.do_clear_bss_start>

000000aa <.do_clear_bss_loop>:
  aa:	1d 92       	st	X+, r1

000000ac <.do_clear_bss_start>:
  ac:	a4 35       	cpi	r26, 0x54	; 84
  ae:	b2 07       	cpc	r27, r18
  b0:	e1 f7       	brne	.-8      	; 0xaa <.do_clear_bss_loop>
  b2:	0e 94 45 01 	call	0x28a	; 0x28a <main>
  b6:	0c 94 01 06 	jmp	0xc02	; 0xc02 <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <DHT11_rx_byte>:
		printf("RH : %d.%d       ", RH_integral, RH_decimal);
		printf("Temperature : %d.%d \n", Tmpr_integral, Tmpr_decimal);
	}
	return 0;
}
char DHT11_rx_byte(void){
  be:	28 e0       	ldi	r18, 0x08	; 8
  c0:	30 e0       	ldi	r19, 0x00	; 0
	char data = 0;
  c2:	80 e0       	ldi	r24, 0x00	; 0
	for(int i=0;i<8;i++){
		while(!(DHT11_data_PIN & (1 << DHT11_datapin)));
  c4:	1c 9b       	sbis	0x03, 4	; 3
  c6:	fe cf       	rjmp	.-4      	; 0xc4 <DHT11_rx_byte+0x6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c8:	90 ea       	ldi	r25, 0xA0	; 160
  ca:	9a 95       	dec	r25
  cc:	f1 f7       	brne	.-4      	; 0xca <DHT11_rx_byte+0xc>
		_delay_us(30);
		data <<= 1;
  ce:	88 0f       	add	r24, r24
		if(DHT11_data_PIN & (1 << DHT11_datapin)){
  d0:	1c 99       	sbic	0x03, 4	; 3
			data |= 0b00000001;
  d2:	81 60       	ori	r24, 0x01	; 1
		}
		while(DHT11_data_PIN & (1 << DHT11_datapin));
  d4:	1c 99       	sbic	0x03, 4	; 3
  d6:	fe cf       	rjmp	.-4      	; 0xd4 <DHT11_rx_byte+0x16>
  d8:	21 50       	subi	r18, 0x01	; 1
  da:	31 09       	sbc	r19, r1
	}
	return 0;
}
char DHT11_rx_byte(void){
	char data = 0;
	for(int i=0;i<8;i++){
  dc:	99 f7       	brne	.-26     	; 0xc4 <DHT11_rx_byte+0x6>
			data |= 0b00000001;
		}
		while(DHT11_data_PIN & (1 << DHT11_datapin));
	}
	return data;
}
  de:	08 95       	ret

000000e0 <DHT11_data_output>:
void DHT11_data_output(void){
	DHT11_data_DDR |= 1 << DHT11_datapin;
  e0:	24 9a       	sbi	0x04, 4	; 4
	DHT11_data_PORT |= 1 << DHT11_datapin;
  e2:	2c 9a       	sbi	0x05, 4	; 5
  e4:	08 95       	ret

000000e6 <DHT11_data_input>:
	return;
}
void DHT11_data_input(void){
	DHT11_data_DDR &= ~(1 << DHT11_datapin);
  e6:	24 98       	cbi	0x04, 4	; 4
  e8:	08 95       	ret

000000ea <DHT11_init>:
	return;
}
void DHT11_init(void){
	DHT11_data_DDR |= 1 << DHT11_datapin;
  ea:	24 9a       	sbi	0x04, 4	; 4
	DHT11_data_PORT |= 1 << DHT11_datapin;
  ec:	2c 9a       	sbi	0x05, 4	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ee:	2f ef       	ldi	r18, 0xFF	; 255
  f0:	8d e3       	ldi	r24, 0x3D	; 61
  f2:	99 e4       	ldi	r25, 0x49	; 73
  f4:	21 50       	subi	r18, 0x01	; 1
  f6:	80 40       	sbci	r24, 0x00	; 0
  f8:	90 40       	sbci	r25, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <DHT11_init+0xa>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <DHT11_init+0x14>
  fe:	00 00       	nop
 100:	08 95       	ret

00000102 <dumi_read>:
	_delay_ms(1500);
	return;
}
void dumi_read(void){
	while(DHT11_data_PIN & (1 << DHT11_datapin));
 102:	1c 99       	sbic	0x03, 4	; 3
 104:	fe cf       	rjmp	.-4      	; 0x102 <dumi_read>
	while(!(DHT11_data_PIN & (1 << DHT11_datapin)));
 106:	1c 9b       	sbis	0x03, 4	; 3
 108:	fe cf       	rjmp	.-4      	; 0x106 <dumi_read+0x4>
	while(DHT11_data_PIN & (1 << DHT11_datapin));
 10a:	1c 99       	sbic	0x03, 4	; 3
 10c:	fe cf       	rjmp	.-4      	; 0x10a <dumi_read+0x8>
	return;
}
 10e:	08 95       	ret

00000110 <DHT11_trigger>:
void DHT11_trigger(void){
	DHT11_data_PORT &= ~(1 << DHT11_datapin);
 110:	2c 98       	cbi	0x05, 4	; 5
 112:	2f ef       	ldi	r18, 0xFF	; 255
 114:	89 ef       	ldi	r24, 0xF9	; 249
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	21 50       	subi	r18, 0x01	; 1
 11a:	80 40       	sbci	r24, 0x00	; 0
 11c:	90 40       	sbci	r25, 0x00	; 0
 11e:	e1 f7       	brne	.-8      	; 0x118 <DHT11_trigger+0x8>
 120:	00 c0       	rjmp	.+0      	; 0x122 <DHT11_trigger+0x12>
 122:	00 00       	nop
	_delay_ms(20);
	DHT11_data_PORT |= 1 << DHT11_datapin;
 124:	2c 9a       	sbi	0x05, 4	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 126:	2a e1       	ldi	r18, 0x1A	; 26
 128:	2a 95       	dec	r18
 12a:	f1 f7       	brne	.-4      	; 0x128 <DHT11_trigger+0x18>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <DHT11_trigger+0x1e>
 12e:	08 95       	ret

00000130 <DHT11_main>:
#include "Uart.h"
#include "DHT11.h"

int DHT11_main(void){
	char RH_integral = 0 ,RH_decimal = 0, Tmpr_integral= 0, Tmpr_decimal = 0;
	DHT11_init();
 130:	0e 94 75 00 	call	0xea	; 0xea <DHT11_init>
	UART0_init(9600);
 134:	60 e8       	ldi	r22, 0x80	; 128
 136:	75 e2       	ldi	r23, 0x25	; 37
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <UART0_init>
		Tmpr_decimal = DHT11_rx_byte();
		DHT11_rx_byte();
		DHT11_data_output();
		_delay_ms(1500);
		
		printf("RH : %d.%d       ", RH_integral, RH_decimal);
 140:	04 e1       	ldi	r16, 0x14	; 20
 142:	11 e0       	ldi	r17, 0x01	; 1
		printf("Temperature : %d.%d \n", Tmpr_integral, Tmpr_decimal);
 144:	c6 e2       	ldi	r28, 0x26	; 38
 146:	d1 e0       	ldi	r29, 0x01	; 1
	DHT11_init();
	UART0_init(9600);
	
	while(1){
		
		DHT11_trigger();
 148:	0e 94 88 00 	call	0x110	; 0x110 <DHT11_trigger>
		DHT11_data_input();
 14c:	0e 94 73 00 	call	0xe6	; 0xe6 <DHT11_data_input>
		dumi_read();
 150:	0e 94 81 00 	call	0x102	; 0x102 <dumi_read>
		RH_integral = DHT11_rx_byte();
 154:	0e 94 5f 00 	call	0xbe	; 0xbe <DHT11_rx_byte>
 158:	d8 2e       	mov	r13, r24
		RH_decimal = DHT11_rx_byte();
 15a:	0e 94 5f 00 	call	0xbe	; 0xbe <DHT11_rx_byte>
 15e:	c8 2e       	mov	r12, r24
		Tmpr_integral = DHT11_rx_byte();
 160:	0e 94 5f 00 	call	0xbe	; 0xbe <DHT11_rx_byte>
 164:	f8 2e       	mov	r15, r24
		Tmpr_decimal = DHT11_rx_byte();
 166:	0e 94 5f 00 	call	0xbe	; 0xbe <DHT11_rx_byte>
 16a:	e8 2e       	mov	r14, r24
		DHT11_rx_byte();
 16c:	0e 94 5f 00 	call	0xbe	; 0xbe <DHT11_rx_byte>
		DHT11_data_output();
 170:	0e 94 70 00 	call	0xe0	; 0xe0 <DHT11_data_output>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 174:	2f ef       	ldi	r18, 0xFF	; 255
 176:	8d e3       	ldi	r24, 0x3D	; 61
 178:	99 e4       	ldi	r25, 0x49	; 73
 17a:	21 50       	subi	r18, 0x01	; 1
 17c:	80 40       	sbci	r24, 0x00	; 0
 17e:	90 40       	sbci	r25, 0x00	; 0
 180:	e1 f7       	brne	.-8      	; 0x17a <DHT11_main+0x4a>
 182:	00 c0       	rjmp	.+0      	; 0x184 <DHT11_main+0x54>
 184:	00 00       	nop
		_delay_ms(1500);
		
		printf("RH : %d.%d       ", RH_integral, RH_decimal);
 186:	1f 92       	push	r1
 188:	cf 92       	push	r12
 18a:	1f 92       	push	r1
 18c:	df 92       	push	r13
 18e:	1f 93       	push	r17
 190:	0f 93       	push	r16
 192:	0e 94 49 04 	call	0x892	; 0x892 <printf>
		printf("Temperature : %d.%d \n", Tmpr_integral, Tmpr_decimal);
 196:	1f 92       	push	r1
 198:	ef 92       	push	r14
 19a:	1f 92       	push	r1
 19c:	ff 92       	push	r15
 19e:	df 93       	push	r29
 1a0:	cf 93       	push	r28
 1a2:	0e 94 49 04 	call	0x892	; 0x892 <printf>
 1a6:	8d b7       	in	r24, 0x3d	; 61
 1a8:	9e b7       	in	r25, 0x3e	; 62
 1aa:	0c 96       	adiw	r24, 0x0c	; 12
 1ac:	0f b6       	in	r0, 0x3f	; 63
 1ae:	f8 94       	cli
 1b0:	9e bf       	out	0x3e, r25	; 62
 1b2:	0f be       	out	0x3f, r0	; 63
 1b4:	8d bf       	out	0x3d, r24	; 61
 1b6:	c8 cf       	rjmp	.-112    	; 0x148 <DHT11_main+0x18>

000001b8 <FND_update_time>:
	FND[1] = FND4digit_font[number/10%10];
	FND[2] = FND4digit_font[number/100%10];
	FND[3] = FND4digit_font[number/1000%10];
	return;
}
void FND_update_time(int msec, char sec){
 1b8:	0f 93       	push	r16
 1ba:	1f 93       	push	r17
 1bc:	cf 93       	push	r28
 1be:	df 93       	push	r29
 1c0:	8c 01       	movw	r16, r24
 1c2:	26 2f       	mov	r18, r22
	FND[0] = FND4digit_font[msec/10%10];
 1c4:	cc e3       	ldi	r28, 0x3C	; 60
 1c6:	d1 e0       	ldi	r29, 0x01	; 1
 1c8:	ea e0       	ldi	r30, 0x0A	; 10
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	bf 01       	movw	r22, r30
 1ce:	0e 94 36 03 	call	0x66c	; 0x66c <__divmodhi4>
 1d2:	cb 01       	movw	r24, r22
 1d4:	bf 01       	movw	r22, r30
 1d6:	0e 94 36 03 	call	0x66c	; 0x66c <__divmodhi4>
 1da:	dc 01       	movw	r26, r24
 1dc:	a6 5f       	subi	r26, 0xF6	; 246
 1de:	be 4f       	sbci	r27, 0xFE	; 254
 1e0:	8c 91       	ld	r24, X
 1e2:	88 83       	st	Y, r24
	FND[1] = FND4digit_font[msec/100%10];
 1e4:	c8 01       	movw	r24, r16
 1e6:	64 e6       	ldi	r22, 0x64	; 100
 1e8:	70 e0       	ldi	r23, 0x00	; 0
 1ea:	0e 94 36 03 	call	0x66c	; 0x66c <__divmodhi4>
 1ee:	cb 01       	movw	r24, r22
 1f0:	bf 01       	movw	r22, r30
 1f2:	0e 94 36 03 	call	0x66c	; 0x66c <__divmodhi4>
 1f6:	fc 01       	movw	r30, r24
 1f8:	e6 5f       	subi	r30, 0xF6	; 246
 1fa:	fe 4f       	sbci	r31, 0xFE	; 254
 1fc:	80 81       	ld	r24, Z
 1fe:	89 83       	std	Y+1, r24	; 0x01
	FND[2] = FND4digit_font[sec%10] & ~(1 << FND_p);
 200:	8d ec       	ldi	r24, 0xCD	; 205
 202:	28 9f       	mul	r18, r24
 204:	e1 2d       	mov	r30, r1
 206:	11 24       	eor	r1, r1
 208:	e6 95       	lsr	r30
 20a:	e6 95       	lsr	r30
 20c:	e6 95       	lsr	r30
 20e:	3e 2f       	mov	r19, r30
 210:	33 0f       	add	r19, r19
 212:	93 2f       	mov	r25, r19
 214:	99 0f       	add	r25, r25
 216:	99 0f       	add	r25, r25
 218:	93 0f       	add	r25, r19
 21a:	29 1b       	sub	r18, r25
 21c:	a2 2f       	mov	r26, r18
 21e:	b0 e0       	ldi	r27, 0x00	; 0
 220:	a6 5f       	subi	r26, 0xF6	; 246
 222:	be 4f       	sbci	r27, 0xFE	; 254
 224:	9c 91       	ld	r25, X
 226:	9b 7f       	andi	r25, 0xFB	; 251
 228:	9a 83       	std	Y+2, r25	; 0x02
	FND[3] = FND4digit_font[sec/10%10];
 22a:	e8 9f       	mul	r30, r24
 22c:	81 2d       	mov	r24, r1
 22e:	11 24       	eor	r1, r1
 230:	86 95       	lsr	r24
 232:	86 95       	lsr	r24
 234:	86 95       	lsr	r24
 236:	88 0f       	add	r24, r24
 238:	98 2f       	mov	r25, r24
 23a:	99 0f       	add	r25, r25
 23c:	99 0f       	add	r25, r25
 23e:	89 0f       	add	r24, r25
 240:	e8 1b       	sub	r30, r24
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	e6 5f       	subi	r30, 0xF6	; 246
 246:	fe 4f       	sbci	r31, 0xFE	; 254
 248:	80 81       	ld	r24, Z
 24a:	8b 83       	std	Y+3, r24	; 0x03
	return;
}
 24c:	df 91       	pop	r29
 24e:	cf 91       	pop	r28
 250:	1f 91       	pop	r17
 252:	0f 91       	pop	r16
 254:	08 95       	ret

00000256 <__vector_1>:
#include "HC_SR04.h"
#include "External_INT.h"

char echo_time;

ISR(INT0_vect){
 256:	1f 92       	push	r1
 258:	0f 92       	push	r0
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	0f 92       	push	r0
 25e:	11 24       	eor	r1, r1
	TCNT0 = 0;
 260:	16 bc       	out	0x26, r1	; 38
}
 262:	0f 90       	pop	r0
 264:	0f be       	out	0x3f, r0	; 63
 266:	0f 90       	pop	r0
 268:	1f 90       	pop	r1
 26a:	18 95       	reti

0000026c <__vector_2>:
ISR(INT1_vect){
 26c:	1f 92       	push	r1
 26e:	0f 92       	push	r0
 270:	0f b6       	in	r0, 0x3f	; 63
 272:	0f 92       	push	r0
 274:	11 24       	eor	r1, r1
 276:	8f 93       	push	r24
	echo_time = TCNT0;
 278:	86 b5       	in	r24, 0x26	; 38
 27a:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <echo_time>
}
 27e:	8f 91       	pop	r24
 280:	0f 90       	pop	r0
 282:	0f be       	out	0x3f, r0	; 63
 284:	0f 90       	pop	r0
 286:	1f 90       	pop	r1
 288:	18 95       	reti

0000028a <main>:

extern int DHT11_main(void);

int main(void)
{
    DHT11_main();
 28a:	0e 94 98 00 	call	0x130	; 0x130 <DHT11_main>
 28e:	ff cf       	rjmp	.-2      	; 0x28e <main+0x4>

00000290 <__vector_14>:

volatile char start_flag, lap_flag, clear_flag, time_flag;
volatile int msec;
volatile char i, sec, min;

ISR(TIMER0_COMPA_vect){
 290:	1f 92       	push	r1
 292:	0f 92       	push	r0
 294:	0f b6       	in	r0, 0x3f	; 63
 296:	0f 92       	push	r0
 298:	11 24       	eor	r1, r1
 29a:	2f 93       	push	r18
 29c:	3f 93       	push	r19
 29e:	4f 93       	push	r20
 2a0:	5f 93       	push	r21
 2a2:	6f 93       	push	r22
 2a4:	7f 93       	push	r23
 2a6:	8f 93       	push	r24
 2a8:	9f 93       	push	r25
 2aa:	af 93       	push	r26
 2ac:	bf 93       	push	r27
 2ae:	ef 93       	push	r30
 2b0:	ff 93       	push	r31
	
	if(start_flag)msec++;
 2b2:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <start_flag>
 2b6:	88 23       	and	r24, r24
 2b8:	49 f0       	breq	.+18     	; 0x2cc <__vector_14+0x3c>
 2ba:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <msec>
 2be:	90 91 42 01 	lds	r25, 0x0142	; 0x800142 <msec+0x1>
 2c2:	01 96       	adiw	r24, 0x01	; 1
 2c4:	90 93 42 01 	sts	0x0142, r25	; 0x800142 <msec+0x1>
 2c8:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <msec>
	if(msec >= 1000){
 2cc:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <msec>
 2d0:	90 91 42 01 	lds	r25, 0x0142	; 0x800142 <msec+0x1>
 2d4:	88 3e       	cpi	r24, 0xE8	; 232
 2d6:	93 40       	sbci	r25, 0x03	; 3
 2d8:	d4 f0       	brlt	.+52     	; 0x30e <__vector_14+0x7e>
		msec = 0;
 2da:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <msec+0x1>
 2de:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <msec>
		sec++;
 2e2:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <sec>
 2e6:	8f 5f       	subi	r24, 0xFF	; 255
 2e8:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <sec>
		if(sec >= 60){
 2ec:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <sec>
 2f0:	8c 33       	cpi	r24, 0x3C	; 60
 2f2:	68 f0       	brcs	.+26     	; 0x30e <__vector_14+0x7e>
			sec = 0;
 2f4:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <sec>
			min++;
 2f8:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <min>
 2fc:	8f 5f       	subi	r24, 0xFF	; 255
 2fe:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <min>
			if(min >= 60)min = 0;
 302:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <min>
 306:	8c 33       	cpi	r24, 0x3C	; 60
 308:	10 f0       	brcs	.+4      	; 0x30e <__vector_14+0x7e>
 30a:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <min>
		}
		//FND_clock(sec, min);
	}
	if(!(msec%10)){
 30e:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <msec>
 312:	90 91 42 01 	lds	r25, 0x0142	; 0x800142 <msec+0x1>
 316:	6a e0       	ldi	r22, 0x0A	; 10
 318:	70 e0       	ldi	r23, 0x00	; 0
 31a:	0e 94 36 03 	call	0x66c	; 0x66c <__divmodhi4>
 31e:	89 2b       	or	r24, r25
 320:	39 f4       	brne	.+14     	; 0x330 <__vector_14+0xa0>
		if(lap_flag)time_flag = 1;
 322:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <lap_flag>
 326:	88 23       	and	r24, r24
 328:	19 f0       	breq	.+6      	; 0x330 <__vector_14+0xa0>
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <time_flag>
	}
	if(clear_flag){
 330:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <clear_flag>
 334:	88 23       	and	r24, r24
 336:	91 f0       	breq	.+36     	; 0x35c <__vector_14+0xcc>
		clear_flag = 0;
 338:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <clear_flag>
		//time_flag = 1;
		FND_update_time(msec, sec);
 33c:	60 91 46 01 	lds	r22, 0x0146	; 0x800146 <sec>
 340:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <msec>
 344:	90 91 42 01 	lds	r25, 0x0142	; 0x800142 <msec+0x1>
 348:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <FND_update_time>
		msec = 0;
 34c:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <msec+0x1>
 350:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <msec>
		sec = 0;
 354:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <sec>
		min = 0;
 358:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <min>
	}
	i++;
 35c:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <i>
 360:	8f 5f       	subi	r24, 0xFF	; 255
 362:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <i>
	if(i>=4)i=0;
 366:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <i>
 36a:	84 30       	cpi	r24, 0x04	; 4
 36c:	10 f0       	brcs	.+4      	; 0x372 <__vector_14+0xe2>
 36e:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <i>
	FND_COM_PORT &= 0b11110000;
 372:	85 b1       	in	r24, 0x05	; 5
 374:	80 7f       	andi	r24, 0xF0	; 240
 376:	85 b9       	out	0x05, r24	; 5
	FND_COM_PORT |= FND4digit_digit[i];
 378:	e0 91 44 01 	lds	r30, 0x0144	; 0x800144 <i>
 37c:	95 b1       	in	r25, 0x05	; 5
 37e:	f0 e0       	ldi	r31, 0x00	; 0
 380:	ea 5f       	subi	r30, 0xFA	; 250
 382:	fe 4f       	sbci	r31, 0xFE	; 254
 384:	80 81       	ld	r24, Z
 386:	89 2b       	or	r24, r25
 388:	85 b9       	out	0x05, r24	; 5
	FND_DATA_PORT = FND[i];
 38a:	e0 91 44 01 	lds	r30, 0x0144	; 0x800144 <i>
 38e:	f0 e0       	ldi	r31, 0x00	; 0
 390:	e4 5c       	subi	r30, 0xC4	; 196
 392:	fe 4f       	sbci	r31, 0xFE	; 254
 394:	80 81       	ld	r24, Z
 396:	8b b9       	out	0x0b, r24	; 11
	//if(!(msec%500))PORTB ^= 1<<PORTB5;
}
 398:	ff 91       	pop	r31
 39a:	ef 91       	pop	r30
 39c:	bf 91       	pop	r27
 39e:	af 91       	pop	r26
 3a0:	9f 91       	pop	r25
 3a2:	8f 91       	pop	r24
 3a4:	7f 91       	pop	r23
 3a6:	6f 91       	pop	r22
 3a8:	5f 91       	pop	r21
 3aa:	4f 91       	pop	r20
 3ac:	3f 91       	pop	r19
 3ae:	2f 91       	pop	r18
 3b0:	0f 90       	pop	r0
 3b2:	0f be       	out	0x3f, r0	; 63
 3b4:	0f 90       	pop	r0
 3b6:	1f 90       	pop	r1
 3b8:	18 95       	reti

000003ba <TX0_char>:
	TX0_char('0' + data/1000%10);
	TX0_char('0' + data/100%10);
	TX0_char('0' + data/10%10);
	TX0_char('0' + data%10);
	return;
}
 3ba:	e0 ec       	ldi	r30, 0xC0	; 192
 3bc:	f0 e0       	ldi	r31, 0x00	; 0
 3be:	90 81       	ld	r25, Z
 3c0:	95 ff       	sbrs	r25, 5
 3c2:	fd cf       	rjmp	.-6      	; 0x3be <TX0_char+0x4>
 3c4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 3c8:	08 95       	ret

000003ca <UART0_init>:
void UART0_init(unsigned long baud){
 3ca:	cf 92       	push	r12
 3cc:	df 92       	push	r13
 3ce:	ef 92       	push	r14
 3d0:	ff 92       	push	r15
 3d2:	6b 01       	movw	r12, r22
 3d4:	7c 01       	movw	r14, r24
	FILE* fpStdio = fdevopen(TX0_char, NULL);
 3d6:	60 e0       	ldi	r22, 0x00	; 0
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	8d ed       	ldi	r24, 0xDD	; 221
 3dc:	91 e0       	ldi	r25, 0x01	; 1
 3de:	0e 94 c2 03 	call	0x784	; 0x784 <fdevopen>
	char i;
	UCSR0B |= 1 << RXCIE0 | 1 << RXEN0 | 1 << TXEN0; //송신, 수신, 수신 인터럽트 활성화
 3e2:	e1 ec       	ldi	r30, 0xC1	; 193
 3e4:	f0 e0       	ldi	r31, 0x00	; 0
 3e6:	80 81       	ld	r24, Z
 3e8:	88 69       	ori	r24, 0x98	; 152
 3ea:	80 83       	st	Z, r24
	UCSR0C |= 1 << UCSZ00 | 1 << UCSZ01;			 //8비트 통신
 3ec:	e2 ec       	ldi	r30, 0xC2	; 194
 3ee:	f0 e0       	ldi	r31, 0x00	; 0
 3f0:	80 81       	ld	r24, Z
 3f2:	86 60       	ori	r24, 0x06	; 6
 3f4:	80 83       	st	Z, r24
	
	UBRR0H = (F_CPU/16/baud-1) >> 8;
 3f6:	60 e4       	ldi	r22, 0x40	; 64
 3f8:	72 e4       	ldi	r23, 0x42	; 66
 3fa:	8f e0       	ldi	r24, 0x0F	; 15
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	a7 01       	movw	r20, r14
 400:	96 01       	movw	r18, r12
 402:	0e 94 4a 03 	call	0x694	; 0x694 <__udivmodsi4>
 406:	da 01       	movw	r26, r20
 408:	c9 01       	movw	r24, r18
 40a:	01 97       	sbiw	r24, 0x01	; 1
 40c:	a1 09       	sbc	r26, r1
 40e:	b1 09       	sbc	r27, r1
 410:	89 2f       	mov	r24, r25
 412:	9a 2f       	mov	r25, r26
 414:	ab 2f       	mov	r26, r27
 416:	bb 27       	eor	r27, r27
 418:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (F_CPU/16/baud-1) & 0xFF;
 41c:	21 50       	subi	r18, 0x01	; 1
 41e:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	i = UDR0;
 422:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 426:	8f e9       	ldi	r24, 0x9F	; 159
 428:	9f e0       	ldi	r25, 0x0F	; 15
 42a:	01 97       	sbiw	r24, 0x01	; 1
 42c:	f1 f7       	brne	.-4      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 42e:	00 c0       	rjmp	.+0      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 430:	00 00       	nop
	_delay_ms(1);
	return;
 432:	ff 90       	pop	r15
 434:	ef 90       	pop	r14
 436:	df 90       	pop	r13
 438:	cf 90       	pop	r12
 43a:	08 95       	ret

0000043c <vfprintf>:
 43c:	ab e0       	ldi	r26, 0x0B	; 11
 43e:	b0 e0       	ldi	r27, 0x00	; 0
 440:	e4 e2       	ldi	r30, 0x24	; 36
 442:	f2 e0       	ldi	r31, 0x02	; 2
 444:	0c 94 70 03 	jmp	0x6e0	; 0x6e0 <__prologue_saves__+0x8>
 448:	6c 01       	movw	r12, r24
 44a:	7b 01       	movw	r14, r22
 44c:	3a 01       	movw	r6, r20
 44e:	fc 01       	movw	r30, r24
 450:	17 82       	std	Z+7, r1	; 0x07
 452:	16 82       	std	Z+6, r1	; 0x06
 454:	83 81       	ldd	r24, Z+3	; 0x03
 456:	81 ff       	sbrs	r24, 1
 458:	03 c1       	rjmp	.+518    	; 0x660 <vfprintf+0x224>
 45a:	ce 01       	movw	r24, r28
 45c:	01 96       	adiw	r24, 0x01	; 1
 45e:	4c 01       	movw	r8, r24
 460:	f6 01       	movw	r30, r12
 462:	b3 80       	ldd	r11, Z+3	; 0x03
 464:	f7 01       	movw	r30, r14
 466:	b3 fc       	sbrc	r11, 3
 468:	05 91       	lpm	r16, Z+
 46a:	b3 fe       	sbrs	r11, 3
 46c:	01 91       	ld	r16, Z+
 46e:	7f 01       	movw	r14, r30
 470:	00 23       	and	r16, r16
 472:	09 f4       	brne	.+2      	; 0x476 <vfprintf+0x3a>
 474:	f1 c0       	rjmp	.+482    	; 0x658 <vfprintf+0x21c>
 476:	05 32       	cpi	r16, 0x25	; 37
 478:	49 f4       	brne	.+18     	; 0x48c <vfprintf+0x50>
 47a:	b3 fc       	sbrc	r11, 3
 47c:	05 91       	lpm	r16, Z+
 47e:	b3 fe       	sbrs	r11, 3
 480:	01 91       	ld	r16, Z+
 482:	7f 01       	movw	r14, r30
 484:	05 32       	cpi	r16, 0x25	; 37
 486:	11 f0       	breq	.+4      	; 0x48c <vfprintf+0x50>
 488:	10 e0       	ldi	r17, 0x00	; 0
 48a:	19 c0       	rjmp	.+50     	; 0x4be <vfprintf+0x82>
 48c:	b6 01       	movw	r22, r12
 48e:	80 2f       	mov	r24, r16
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	0e 94 0d 04 	call	0x81a	; 0x81a <fputc>
 496:	53 01       	movw	r10, r6
 498:	35 01       	movw	r6, r10
 49a:	e2 cf       	rjmp	.-60     	; 0x460 <vfprintf+0x24>
 49c:	00 23       	and	r16, r16
 49e:	09 f4       	brne	.+2      	; 0x4a2 <vfprintf+0x66>
 4a0:	db c0       	rjmp	.+438    	; 0x658 <vfprintf+0x21c>
 4a2:	60 2f       	mov	r22, r16
 4a4:	70 e0       	ldi	r23, 0x00	; 0
 4a6:	8f e6       	ldi	r24, 0x6F	; 111
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	0e 94 b7 03 	call	0x76e	; 0x76e <strchr_P>
 4ae:	89 2b       	or	r24, r25
 4b0:	49 f0       	breq	.+18     	; 0x4c4 <vfprintf+0x88>
 4b2:	f7 01       	movw	r30, r14
 4b4:	b3 fc       	sbrc	r11, 3
 4b6:	05 91       	lpm	r16, Z+
 4b8:	b3 fe       	sbrs	r11, 3
 4ba:	01 91       	ld	r16, Z+
 4bc:	7f 01       	movw	r14, r30
 4be:	17 ff       	sbrs	r17, 7
 4c0:	ed cf       	rjmp	.-38     	; 0x49c <vfprintf+0x60>
 4c2:	04 c0       	rjmp	.+8      	; 0x4cc <vfprintf+0x90>
 4c4:	03 32       	cpi	r16, 0x23	; 35
 4c6:	39 f0       	breq	.+14     	; 0x4d6 <vfprintf+0x9a>
 4c8:	0c 36       	cpi	r16, 0x6C	; 108
 4ca:	19 f0       	breq	.+6      	; 0x4d2 <vfprintf+0x96>
 4cc:	01 11       	cpse	r16, r1
 4ce:	05 c0       	rjmp	.+10     	; 0x4da <vfprintf+0x9e>
 4d0:	c3 c0       	rjmp	.+390    	; 0x658 <vfprintf+0x21c>
 4d2:	10 68       	ori	r17, 0x80	; 128
 4d4:	ee cf       	rjmp	.-36     	; 0x4b2 <vfprintf+0x76>
 4d6:	10 e1       	ldi	r17, 0x10	; 16
 4d8:	ec cf       	rjmp	.-40     	; 0x4b2 <vfprintf+0x76>
 4da:	60 2f       	mov	r22, r16
 4dc:	70 e0       	ldi	r23, 0x00	; 0
 4de:	88 e6       	ldi	r24, 0x68	; 104
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	0e 94 b7 03 	call	0x76e	; 0x76e <strchr_P>
 4e6:	89 2b       	or	r24, r25
 4e8:	41 f0       	breq	.+16     	; 0x4fa <vfprintf+0xbe>
 4ea:	53 01       	movw	r10, r6
 4ec:	f4 e0       	ldi	r31, 0x04	; 4
 4ee:	af 0e       	add	r10, r31
 4f0:	b1 1c       	adc	r11, r1
 4f2:	b6 01       	movw	r22, r12
 4f4:	8f e3       	ldi	r24, 0x3F	; 63
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	10 c0       	rjmp	.+32     	; 0x51a <vfprintf+0xde>
 4fa:	03 36       	cpi	r16, 0x63	; 99
 4fc:	31 f0       	breq	.+12     	; 0x50a <vfprintf+0xce>
 4fe:	03 37       	cpi	r16, 0x73	; 115
 500:	79 f0       	breq	.+30     	; 0x520 <vfprintf+0xe4>
 502:	03 35       	cpi	r16, 0x53	; 83
 504:	11 f5       	brne	.+68     	; 0x54a <vfprintf+0x10e>
 506:	11 60       	ori	r17, 0x01	; 1
 508:	0b c0       	rjmp	.+22     	; 0x520 <vfprintf+0xe4>
 50a:	53 01       	movw	r10, r6
 50c:	82 e0       	ldi	r24, 0x02	; 2
 50e:	a8 0e       	add	r10, r24
 510:	b1 1c       	adc	r11, r1
 512:	b6 01       	movw	r22, r12
 514:	f3 01       	movw	r30, r6
 516:	80 81       	ld	r24, Z
 518:	91 81       	ldd	r25, Z+1	; 0x01
 51a:	0e 94 0d 04 	call	0x81a	; 0x81a <fputc>
 51e:	bc cf       	rjmp	.-136    	; 0x498 <vfprintf+0x5c>
 520:	53 01       	movw	r10, r6
 522:	f2 e0       	ldi	r31, 0x02	; 2
 524:	af 0e       	add	r10, r31
 526:	b1 1c       	adc	r11, r1
 528:	f3 01       	movw	r30, r6
 52a:	60 80       	ld	r6, Z
 52c:	71 80       	ldd	r7, Z+1	; 0x01
 52e:	f3 01       	movw	r30, r6
 530:	10 fd       	sbrc	r17, 0
 532:	85 91       	lpm	r24, Z+
 534:	10 ff       	sbrs	r17, 0
 536:	81 91       	ld	r24, Z+
 538:	3f 01       	movw	r6, r30
 53a:	88 23       	and	r24, r24
 53c:	09 f4       	brne	.+2      	; 0x540 <vfprintf+0x104>
 53e:	ac cf       	rjmp	.-168    	; 0x498 <vfprintf+0x5c>
 540:	b6 01       	movw	r22, r12
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	0e 94 0d 04 	call	0x81a	; 0x81a <fputc>
 548:	f2 cf       	rjmp	.-28     	; 0x52e <vfprintf+0xf2>
 54a:	04 36       	cpi	r16, 0x64	; 100
 54c:	11 f0       	breq	.+4      	; 0x552 <vfprintf+0x116>
 54e:	09 36       	cpi	r16, 0x69	; 105
 550:	21 f5       	brne	.+72     	; 0x59a <vfprintf+0x15e>
 552:	53 01       	movw	r10, r6
 554:	17 ff       	sbrs	r17, 7
 556:	09 c0       	rjmp	.+18     	; 0x56a <vfprintf+0x12e>
 558:	f4 e0       	ldi	r31, 0x04	; 4
 55a:	af 0e       	add	r10, r31
 55c:	b1 1c       	adc	r11, r1
 55e:	f3 01       	movw	r30, r6
 560:	60 81       	ld	r22, Z
 562:	71 81       	ldd	r23, Z+1	; 0x01
 564:	82 81       	ldd	r24, Z+2	; 0x02
 566:	93 81       	ldd	r25, Z+3	; 0x03
 568:	0a c0       	rjmp	.+20     	; 0x57e <vfprintf+0x142>
 56a:	f2 e0       	ldi	r31, 0x02	; 2
 56c:	af 0e       	add	r10, r31
 56e:	b1 1c       	adc	r11, r1
 570:	f3 01       	movw	r30, r6
 572:	60 81       	ld	r22, Z
 574:	71 81       	ldd	r23, Z+1	; 0x01
 576:	07 2e       	mov	r0, r23
 578:	00 0c       	add	r0, r0
 57a:	88 0b       	sbc	r24, r24
 57c:	99 0b       	sbc	r25, r25
 57e:	1f 7e       	andi	r17, 0xEF	; 239
 580:	97 ff       	sbrs	r25, 7
 582:	08 c0       	rjmp	.+16     	; 0x594 <vfprintf+0x158>
 584:	90 95       	com	r25
 586:	80 95       	com	r24
 588:	70 95       	com	r23
 58a:	61 95       	neg	r22
 58c:	7f 4f       	sbci	r23, 0xFF	; 255
 58e:	8f 4f       	sbci	r24, 0xFF	; 255
 590:	9f 4f       	sbci	r25, 0xFF	; 255
 592:	10 64       	ori	r17, 0x40	; 64
 594:	2a e0       	ldi	r18, 0x0A	; 10
 596:	30 e0       	ldi	r19, 0x00	; 0
 598:	30 c0       	rjmp	.+96     	; 0x5fa <vfprintf+0x1be>
 59a:	00 37       	cpi	r16, 0x70	; 112
 59c:	91 f0       	breq	.+36     	; 0x5c2 <vfprintf+0x186>
 59e:	40 f4       	brcc	.+16     	; 0x5b0 <vfprintf+0x174>
 5a0:	08 35       	cpi	r16, 0x58	; 88
 5a2:	a1 f0       	breq	.+40     	; 0x5cc <vfprintf+0x190>
 5a4:	0f 36       	cpi	r16, 0x6F	; 111
 5a6:	09 f0       	breq	.+2      	; 0x5aa <vfprintf+0x16e>
 5a8:	57 c0       	rjmp	.+174    	; 0x658 <vfprintf+0x21c>
 5aa:	28 e0       	ldi	r18, 0x08	; 8
 5ac:	30 e0       	ldi	r19, 0x00	; 0
 5ae:	11 c0       	rjmp	.+34     	; 0x5d2 <vfprintf+0x196>
 5b0:	05 37       	cpi	r16, 0x75	; 117
 5b2:	19 f0       	breq	.+6      	; 0x5ba <vfprintf+0x17e>
 5b4:	08 37       	cpi	r16, 0x78	; 120
 5b6:	31 f0       	breq	.+12     	; 0x5c4 <vfprintf+0x188>
 5b8:	4f c0       	rjmp	.+158    	; 0x658 <vfprintf+0x21c>
 5ba:	1f 7e       	andi	r17, 0xEF	; 239
 5bc:	2a e0       	ldi	r18, 0x0A	; 10
 5be:	30 e0       	ldi	r19, 0x00	; 0
 5c0:	08 c0       	rjmp	.+16     	; 0x5d2 <vfprintf+0x196>
 5c2:	10 61       	ori	r17, 0x10	; 16
 5c4:	14 62       	ori	r17, 0x24	; 36
 5c6:	20 e1       	ldi	r18, 0x10	; 16
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	03 c0       	rjmp	.+6      	; 0x5d2 <vfprintf+0x196>
 5cc:	14 60       	ori	r17, 0x04	; 4
 5ce:	20 e1       	ldi	r18, 0x10	; 16
 5d0:	32 e0       	ldi	r19, 0x02	; 2
 5d2:	53 01       	movw	r10, r6
 5d4:	17 ff       	sbrs	r17, 7
 5d6:	09 c0       	rjmp	.+18     	; 0x5ea <vfprintf+0x1ae>
 5d8:	f4 e0       	ldi	r31, 0x04	; 4
 5da:	af 0e       	add	r10, r31
 5dc:	b1 1c       	adc	r11, r1
 5de:	f3 01       	movw	r30, r6
 5e0:	60 81       	ld	r22, Z
 5e2:	71 81       	ldd	r23, Z+1	; 0x01
 5e4:	82 81       	ldd	r24, Z+2	; 0x02
 5e6:	93 81       	ldd	r25, Z+3	; 0x03
 5e8:	08 c0       	rjmp	.+16     	; 0x5fa <vfprintf+0x1be>
 5ea:	f2 e0       	ldi	r31, 0x02	; 2
 5ec:	af 0e       	add	r10, r31
 5ee:	b1 1c       	adc	r11, r1
 5f0:	f3 01       	movw	r30, r6
 5f2:	60 81       	ld	r22, Z
 5f4:	71 81       	ldd	r23, Z+1	; 0x01
 5f6:	80 e0       	ldi	r24, 0x00	; 0
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	a4 01       	movw	r20, r8
 5fc:	0e 94 5f 04 	call	0x8be	; 0x8be <__ultoa_invert>
 600:	08 2f       	mov	r16, r24
 602:	08 19       	sub	r16, r8
 604:	16 ff       	sbrs	r17, 6
 606:	05 c0       	rjmp	.+10     	; 0x612 <vfprintf+0x1d6>
 608:	b6 01       	movw	r22, r12
 60a:	8d e2       	ldi	r24, 0x2D	; 45
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	0e 94 0d 04 	call	0x81a	; 0x81a <fputc>
 612:	14 ff       	sbrs	r17, 4
 614:	15 c0       	rjmp	.+42     	; 0x640 <vfprintf+0x204>
 616:	fe 01       	movw	r30, r28
 618:	e0 0f       	add	r30, r16
 61a:	f1 1d       	adc	r31, r1
 61c:	80 81       	ld	r24, Z
 61e:	80 33       	cpi	r24, 0x30	; 48
 620:	79 f0       	breq	.+30     	; 0x640 <vfprintf+0x204>
 622:	b6 01       	movw	r22, r12
 624:	80 e3       	ldi	r24, 0x30	; 48
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	0e 94 0d 04 	call	0x81a	; 0x81a <fputc>
 62c:	12 ff       	sbrs	r17, 2
 62e:	08 c0       	rjmp	.+16     	; 0x640 <vfprintf+0x204>
 630:	10 72       	andi	r17, 0x20	; 32
 632:	81 2f       	mov	r24, r17
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	b6 01       	movw	r22, r12
 638:	88 5a       	subi	r24, 0xA8	; 168
 63a:	9f 4f       	sbci	r25, 0xFF	; 255
 63c:	0e 94 0d 04 	call	0x81a	; 0x81a <fputc>
 640:	01 50       	subi	r16, 0x01	; 1
 642:	f4 01       	movw	r30, r8
 644:	e0 0f       	add	r30, r16
 646:	f1 1d       	adc	r31, r1
 648:	80 81       	ld	r24, Z
 64a:	b6 01       	movw	r22, r12
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	0e 94 0d 04 	call	0x81a	; 0x81a <fputc>
 652:	01 11       	cpse	r16, r1
 654:	f5 cf       	rjmp	.-22     	; 0x640 <vfprintf+0x204>
 656:	20 cf       	rjmp	.-448    	; 0x498 <vfprintf+0x5c>
 658:	f6 01       	movw	r30, r12
 65a:	86 81       	ldd	r24, Z+6	; 0x06
 65c:	97 81       	ldd	r25, Z+7	; 0x07
 65e:	02 c0       	rjmp	.+4      	; 0x664 <vfprintf+0x228>
 660:	8f ef       	ldi	r24, 0xFF	; 255
 662:	9f ef       	ldi	r25, 0xFF	; 255
 664:	2b 96       	adiw	r28, 0x0b	; 11
 666:	ee e0       	ldi	r30, 0x0E	; 14
 668:	0c 94 8c 03 	jmp	0x718	; 0x718 <__epilogue_restores__+0x8>

0000066c <__divmodhi4>:
 66c:	97 fb       	bst	r25, 7
 66e:	07 2e       	mov	r0, r23
 670:	16 f4       	brtc	.+4      	; 0x676 <__divmodhi4+0xa>
 672:	00 94       	com	r0
 674:	07 d0       	rcall	.+14     	; 0x684 <__divmodhi4_neg1>
 676:	77 fd       	sbrc	r23, 7
 678:	09 d0       	rcall	.+18     	; 0x68c <__divmodhi4_neg2>
 67a:	0e 94 a3 03 	call	0x746	; 0x746 <__udivmodhi4>
 67e:	07 fc       	sbrc	r0, 7
 680:	05 d0       	rcall	.+10     	; 0x68c <__divmodhi4_neg2>
 682:	3e f4       	brtc	.+14     	; 0x692 <__divmodhi4_exit>

00000684 <__divmodhi4_neg1>:
 684:	90 95       	com	r25
 686:	81 95       	neg	r24
 688:	9f 4f       	sbci	r25, 0xFF	; 255
 68a:	08 95       	ret

0000068c <__divmodhi4_neg2>:
 68c:	70 95       	com	r23
 68e:	61 95       	neg	r22
 690:	7f 4f       	sbci	r23, 0xFF	; 255

00000692 <__divmodhi4_exit>:
 692:	08 95       	ret

00000694 <__udivmodsi4>:
 694:	a1 e2       	ldi	r26, 0x21	; 33
 696:	1a 2e       	mov	r1, r26
 698:	aa 1b       	sub	r26, r26
 69a:	bb 1b       	sub	r27, r27
 69c:	fd 01       	movw	r30, r26
 69e:	0d c0       	rjmp	.+26     	; 0x6ba <__udivmodsi4_ep>

000006a0 <__udivmodsi4_loop>:
 6a0:	aa 1f       	adc	r26, r26
 6a2:	bb 1f       	adc	r27, r27
 6a4:	ee 1f       	adc	r30, r30
 6a6:	ff 1f       	adc	r31, r31
 6a8:	a2 17       	cp	r26, r18
 6aa:	b3 07       	cpc	r27, r19
 6ac:	e4 07       	cpc	r30, r20
 6ae:	f5 07       	cpc	r31, r21
 6b0:	20 f0       	brcs	.+8      	; 0x6ba <__udivmodsi4_ep>
 6b2:	a2 1b       	sub	r26, r18
 6b4:	b3 0b       	sbc	r27, r19
 6b6:	e4 0b       	sbc	r30, r20
 6b8:	f5 0b       	sbc	r31, r21

000006ba <__udivmodsi4_ep>:
 6ba:	66 1f       	adc	r22, r22
 6bc:	77 1f       	adc	r23, r23
 6be:	88 1f       	adc	r24, r24
 6c0:	99 1f       	adc	r25, r25
 6c2:	1a 94       	dec	r1
 6c4:	69 f7       	brne	.-38     	; 0x6a0 <__udivmodsi4_loop>
 6c6:	60 95       	com	r22
 6c8:	70 95       	com	r23
 6ca:	80 95       	com	r24
 6cc:	90 95       	com	r25
 6ce:	9b 01       	movw	r18, r22
 6d0:	ac 01       	movw	r20, r24
 6d2:	bd 01       	movw	r22, r26
 6d4:	cf 01       	movw	r24, r30
 6d6:	08 95       	ret

000006d8 <__prologue_saves__>:
 6d8:	2f 92       	push	r2
 6da:	3f 92       	push	r3
 6dc:	4f 92       	push	r4
 6de:	5f 92       	push	r5
 6e0:	6f 92       	push	r6
 6e2:	7f 92       	push	r7
 6e4:	8f 92       	push	r8
 6e6:	9f 92       	push	r9
 6e8:	af 92       	push	r10
 6ea:	bf 92       	push	r11
 6ec:	cf 92       	push	r12
 6ee:	df 92       	push	r13
 6f0:	ef 92       	push	r14
 6f2:	ff 92       	push	r15
 6f4:	0f 93       	push	r16
 6f6:	1f 93       	push	r17
 6f8:	cf 93       	push	r28
 6fa:	df 93       	push	r29
 6fc:	cd b7       	in	r28, 0x3d	; 61
 6fe:	de b7       	in	r29, 0x3e	; 62
 700:	ca 1b       	sub	r28, r26
 702:	db 0b       	sbc	r29, r27
 704:	0f b6       	in	r0, 0x3f	; 63
 706:	f8 94       	cli
 708:	de bf       	out	0x3e, r29	; 62
 70a:	0f be       	out	0x3f, r0	; 63
 70c:	cd bf       	out	0x3d, r28	; 61
 70e:	09 94       	ijmp

00000710 <__epilogue_restores__>:
 710:	2a 88       	ldd	r2, Y+18	; 0x12
 712:	39 88       	ldd	r3, Y+17	; 0x11
 714:	48 88       	ldd	r4, Y+16	; 0x10
 716:	5f 84       	ldd	r5, Y+15	; 0x0f
 718:	6e 84       	ldd	r6, Y+14	; 0x0e
 71a:	7d 84       	ldd	r7, Y+13	; 0x0d
 71c:	8c 84       	ldd	r8, Y+12	; 0x0c
 71e:	9b 84       	ldd	r9, Y+11	; 0x0b
 720:	aa 84       	ldd	r10, Y+10	; 0x0a
 722:	b9 84       	ldd	r11, Y+9	; 0x09
 724:	c8 84       	ldd	r12, Y+8	; 0x08
 726:	df 80       	ldd	r13, Y+7	; 0x07
 728:	ee 80       	ldd	r14, Y+6	; 0x06
 72a:	fd 80       	ldd	r15, Y+5	; 0x05
 72c:	0c 81       	ldd	r16, Y+4	; 0x04
 72e:	1b 81       	ldd	r17, Y+3	; 0x03
 730:	aa 81       	ldd	r26, Y+2	; 0x02
 732:	b9 81       	ldd	r27, Y+1	; 0x01
 734:	ce 0f       	add	r28, r30
 736:	d1 1d       	adc	r29, r1
 738:	0f b6       	in	r0, 0x3f	; 63
 73a:	f8 94       	cli
 73c:	de bf       	out	0x3e, r29	; 62
 73e:	0f be       	out	0x3f, r0	; 63
 740:	cd bf       	out	0x3d, r28	; 61
 742:	ed 01       	movw	r28, r26
 744:	08 95       	ret

00000746 <__udivmodhi4>:
 746:	aa 1b       	sub	r26, r26
 748:	bb 1b       	sub	r27, r27
 74a:	51 e1       	ldi	r21, 0x11	; 17
 74c:	07 c0       	rjmp	.+14     	; 0x75c <__udivmodhi4_ep>

0000074e <__udivmodhi4_loop>:
 74e:	aa 1f       	adc	r26, r26
 750:	bb 1f       	adc	r27, r27
 752:	a6 17       	cp	r26, r22
 754:	b7 07       	cpc	r27, r23
 756:	10 f0       	brcs	.+4      	; 0x75c <__udivmodhi4_ep>
 758:	a6 1b       	sub	r26, r22
 75a:	b7 0b       	sbc	r27, r23

0000075c <__udivmodhi4_ep>:
 75c:	88 1f       	adc	r24, r24
 75e:	99 1f       	adc	r25, r25
 760:	5a 95       	dec	r21
 762:	a9 f7       	brne	.-22     	; 0x74e <__udivmodhi4_loop>
 764:	80 95       	com	r24
 766:	90 95       	com	r25
 768:	bc 01       	movw	r22, r24
 76a:	cd 01       	movw	r24, r26
 76c:	08 95       	ret

0000076e <strchr_P>:
 76e:	fc 01       	movw	r30, r24
 770:	05 90       	lpm	r0, Z+
 772:	06 16       	cp	r0, r22
 774:	21 f0       	breq	.+8      	; 0x77e <strchr_P+0x10>
 776:	00 20       	and	r0, r0
 778:	d9 f7       	brne	.-10     	; 0x770 <strchr_P+0x2>
 77a:	c0 01       	movw	r24, r0
 77c:	08 95       	ret
 77e:	31 97       	sbiw	r30, 0x01	; 1
 780:	cf 01       	movw	r24, r30
 782:	08 95       	ret

00000784 <fdevopen>:
 784:	0f 93       	push	r16
 786:	1f 93       	push	r17
 788:	cf 93       	push	r28
 78a:	df 93       	push	r29
 78c:	00 97       	sbiw	r24, 0x00	; 0
 78e:	31 f4       	brne	.+12     	; 0x79c <fdevopen+0x18>
 790:	61 15       	cp	r22, r1
 792:	71 05       	cpc	r23, r1
 794:	19 f4       	brne	.+6      	; 0x79c <fdevopen+0x18>
 796:	80 e0       	ldi	r24, 0x00	; 0
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	3a c0       	rjmp	.+116    	; 0x810 <fdevopen+0x8c>
 79c:	8b 01       	movw	r16, r22
 79e:	ec 01       	movw	r28, r24
 7a0:	6e e0       	ldi	r22, 0x0E	; 14
 7a2:	70 e0       	ldi	r23, 0x00	; 0
 7a4:	81 e0       	ldi	r24, 0x01	; 1
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	0e 94 bd 04 	call	0x97a	; 0x97a <calloc>
 7ac:	fc 01       	movw	r30, r24
 7ae:	89 2b       	or	r24, r25
 7b0:	91 f3       	breq	.-28     	; 0x796 <fdevopen+0x12>
 7b2:	80 e8       	ldi	r24, 0x80	; 128
 7b4:	83 83       	std	Z+3, r24	; 0x03
 7b6:	01 15       	cp	r16, r1
 7b8:	11 05       	cpc	r17, r1
 7ba:	71 f0       	breq	.+28     	; 0x7d8 <fdevopen+0x54>
 7bc:	13 87       	std	Z+11, r17	; 0x0b
 7be:	02 87       	std	Z+10, r16	; 0x0a
 7c0:	81 e8       	ldi	r24, 0x81	; 129
 7c2:	83 83       	std	Z+3, r24	; 0x03
 7c4:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <__iob>
 7c8:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <__iob+0x1>
 7cc:	89 2b       	or	r24, r25
 7ce:	21 f4       	brne	.+8      	; 0x7d8 <fdevopen+0x54>
 7d0:	f0 93 4b 01 	sts	0x014B, r31	; 0x80014b <__iob+0x1>
 7d4:	e0 93 4a 01 	sts	0x014A, r30	; 0x80014a <__iob>
 7d8:	20 97       	sbiw	r28, 0x00	; 0
 7da:	c9 f0       	breq	.+50     	; 0x80e <fdevopen+0x8a>
 7dc:	d1 87       	std	Z+9, r29	; 0x09
 7de:	c0 87       	std	Z+8, r28	; 0x08
 7e0:	83 81       	ldd	r24, Z+3	; 0x03
 7e2:	82 60       	ori	r24, 0x02	; 2
 7e4:	83 83       	std	Z+3, r24	; 0x03
 7e6:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <__iob+0x2>
 7ea:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <__iob+0x3>
 7ee:	89 2b       	or	r24, r25
 7f0:	71 f4       	brne	.+28     	; 0x80e <fdevopen+0x8a>
 7f2:	f0 93 4d 01 	sts	0x014D, r31	; 0x80014d <__iob+0x3>
 7f6:	e0 93 4c 01 	sts	0x014C, r30	; 0x80014c <__iob+0x2>
 7fa:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <__iob+0x4>
 7fe:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <__iob+0x5>
 802:	89 2b       	or	r24, r25
 804:	21 f4       	brne	.+8      	; 0x80e <fdevopen+0x8a>
 806:	f0 93 4f 01 	sts	0x014F, r31	; 0x80014f <__iob+0x5>
 80a:	e0 93 4e 01 	sts	0x014E, r30	; 0x80014e <__iob+0x4>
 80e:	cf 01       	movw	r24, r30
 810:	df 91       	pop	r29
 812:	cf 91       	pop	r28
 814:	1f 91       	pop	r17
 816:	0f 91       	pop	r16
 818:	08 95       	ret

0000081a <fputc>:
 81a:	0f 93       	push	r16
 81c:	1f 93       	push	r17
 81e:	cf 93       	push	r28
 820:	df 93       	push	r29
 822:	fb 01       	movw	r30, r22
 824:	23 81       	ldd	r18, Z+3	; 0x03
 826:	21 fd       	sbrc	r18, 1
 828:	03 c0       	rjmp	.+6      	; 0x830 <fputc+0x16>
 82a:	8f ef       	ldi	r24, 0xFF	; 255
 82c:	9f ef       	ldi	r25, 0xFF	; 255
 82e:	2c c0       	rjmp	.+88     	; 0x888 <fputc+0x6e>
 830:	22 ff       	sbrs	r18, 2
 832:	16 c0       	rjmp	.+44     	; 0x860 <fputc+0x46>
 834:	46 81       	ldd	r20, Z+6	; 0x06
 836:	57 81       	ldd	r21, Z+7	; 0x07
 838:	24 81       	ldd	r18, Z+4	; 0x04
 83a:	35 81       	ldd	r19, Z+5	; 0x05
 83c:	42 17       	cp	r20, r18
 83e:	53 07       	cpc	r21, r19
 840:	44 f4       	brge	.+16     	; 0x852 <fputc+0x38>
 842:	a0 81       	ld	r26, Z
 844:	b1 81       	ldd	r27, Z+1	; 0x01
 846:	9d 01       	movw	r18, r26
 848:	2f 5f       	subi	r18, 0xFF	; 255
 84a:	3f 4f       	sbci	r19, 0xFF	; 255
 84c:	31 83       	std	Z+1, r19	; 0x01
 84e:	20 83       	st	Z, r18
 850:	8c 93       	st	X, r24
 852:	26 81       	ldd	r18, Z+6	; 0x06
 854:	37 81       	ldd	r19, Z+7	; 0x07
 856:	2f 5f       	subi	r18, 0xFF	; 255
 858:	3f 4f       	sbci	r19, 0xFF	; 255
 85a:	37 83       	std	Z+7, r19	; 0x07
 85c:	26 83       	std	Z+6, r18	; 0x06
 85e:	14 c0       	rjmp	.+40     	; 0x888 <fputc+0x6e>
 860:	8b 01       	movw	r16, r22
 862:	ec 01       	movw	r28, r24
 864:	fb 01       	movw	r30, r22
 866:	00 84       	ldd	r0, Z+8	; 0x08
 868:	f1 85       	ldd	r31, Z+9	; 0x09
 86a:	e0 2d       	mov	r30, r0
 86c:	09 95       	icall
 86e:	89 2b       	or	r24, r25
 870:	e1 f6       	brne	.-72     	; 0x82a <fputc+0x10>
 872:	d8 01       	movw	r26, r16
 874:	16 96       	adiw	r26, 0x06	; 6
 876:	8d 91       	ld	r24, X+
 878:	9c 91       	ld	r25, X
 87a:	17 97       	sbiw	r26, 0x07	; 7
 87c:	01 96       	adiw	r24, 0x01	; 1
 87e:	17 96       	adiw	r26, 0x07	; 7
 880:	9c 93       	st	X, r25
 882:	8e 93       	st	-X, r24
 884:	16 97       	sbiw	r26, 0x06	; 6
 886:	ce 01       	movw	r24, r28
 888:	df 91       	pop	r29
 88a:	cf 91       	pop	r28
 88c:	1f 91       	pop	r17
 88e:	0f 91       	pop	r16
 890:	08 95       	ret

00000892 <printf>:
 892:	a0 e0       	ldi	r26, 0x00	; 0
 894:	b0 e0       	ldi	r27, 0x00	; 0
 896:	ef e4       	ldi	r30, 0x4F	; 79
 898:	f4 e0       	ldi	r31, 0x04	; 4
 89a:	0c 94 7c 03 	jmp	0x6f8	; 0x6f8 <__prologue_saves__+0x20>
 89e:	ae 01       	movw	r20, r28
 8a0:	4b 5f       	subi	r20, 0xFB	; 251
 8a2:	5f 4f       	sbci	r21, 0xFF	; 255
 8a4:	fa 01       	movw	r30, r20
 8a6:	61 91       	ld	r22, Z+
 8a8:	71 91       	ld	r23, Z+
 8aa:	af 01       	movw	r20, r30
 8ac:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <__iob+0x2>
 8b0:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <__iob+0x3>
 8b4:	0e 94 1e 02 	call	0x43c	; 0x43c <vfprintf>
 8b8:	e2 e0       	ldi	r30, 0x02	; 2
 8ba:	0c 94 98 03 	jmp	0x730	; 0x730 <__epilogue_restores__+0x20>

000008be <__ultoa_invert>:
 8be:	fa 01       	movw	r30, r20
 8c0:	aa 27       	eor	r26, r26
 8c2:	28 30       	cpi	r18, 0x08	; 8
 8c4:	51 f1       	breq	.+84     	; 0x91a <__stack+0x1b>
 8c6:	20 31       	cpi	r18, 0x10	; 16
 8c8:	81 f1       	breq	.+96     	; 0x92a <__stack+0x2b>
 8ca:	e8 94       	clt
 8cc:	6f 93       	push	r22
 8ce:	6e 7f       	andi	r22, 0xFE	; 254
 8d0:	6e 5f       	subi	r22, 0xFE	; 254
 8d2:	7f 4f       	sbci	r23, 0xFF	; 255
 8d4:	8f 4f       	sbci	r24, 0xFF	; 255
 8d6:	9f 4f       	sbci	r25, 0xFF	; 255
 8d8:	af 4f       	sbci	r26, 0xFF	; 255
 8da:	b1 e0       	ldi	r27, 0x01	; 1
 8dc:	3e d0       	rcall	.+124    	; 0x95a <__stack+0x5b>
 8de:	b4 e0       	ldi	r27, 0x04	; 4
 8e0:	3c d0       	rcall	.+120    	; 0x95a <__stack+0x5b>
 8e2:	67 0f       	add	r22, r23
 8e4:	78 1f       	adc	r23, r24
 8e6:	89 1f       	adc	r24, r25
 8e8:	9a 1f       	adc	r25, r26
 8ea:	a1 1d       	adc	r26, r1
 8ec:	68 0f       	add	r22, r24
 8ee:	79 1f       	adc	r23, r25
 8f0:	8a 1f       	adc	r24, r26
 8f2:	91 1d       	adc	r25, r1
 8f4:	a1 1d       	adc	r26, r1
 8f6:	6a 0f       	add	r22, r26
 8f8:	71 1d       	adc	r23, r1
 8fa:	81 1d       	adc	r24, r1
 8fc:	91 1d       	adc	r25, r1
 8fe:	a1 1d       	adc	r26, r1
 900:	20 d0       	rcall	.+64     	; 0x942 <__stack+0x43>
 902:	09 f4       	brne	.+2      	; 0x906 <__stack+0x7>
 904:	68 94       	set
 906:	3f 91       	pop	r19
 908:	2a e0       	ldi	r18, 0x0A	; 10
 90a:	26 9f       	mul	r18, r22
 90c:	11 24       	eor	r1, r1
 90e:	30 19       	sub	r19, r0
 910:	30 5d       	subi	r19, 0xD0	; 208
 912:	31 93       	st	Z+, r19
 914:	de f6       	brtc	.-74     	; 0x8cc <__ultoa_invert+0xe>
 916:	cf 01       	movw	r24, r30
 918:	08 95       	ret
 91a:	46 2f       	mov	r20, r22
 91c:	47 70       	andi	r20, 0x07	; 7
 91e:	40 5d       	subi	r20, 0xD0	; 208
 920:	41 93       	st	Z+, r20
 922:	b3 e0       	ldi	r27, 0x03	; 3
 924:	0f d0       	rcall	.+30     	; 0x944 <__stack+0x45>
 926:	c9 f7       	brne	.-14     	; 0x91a <__stack+0x1b>
 928:	f6 cf       	rjmp	.-20     	; 0x916 <__stack+0x17>
 92a:	46 2f       	mov	r20, r22
 92c:	4f 70       	andi	r20, 0x0F	; 15
 92e:	40 5d       	subi	r20, 0xD0	; 208
 930:	4a 33       	cpi	r20, 0x3A	; 58
 932:	18 f0       	brcs	.+6      	; 0x93a <__stack+0x3b>
 934:	49 5d       	subi	r20, 0xD9	; 217
 936:	31 fd       	sbrc	r19, 1
 938:	40 52       	subi	r20, 0x20	; 32
 93a:	41 93       	st	Z+, r20
 93c:	02 d0       	rcall	.+4      	; 0x942 <__stack+0x43>
 93e:	a9 f7       	brne	.-22     	; 0x92a <__stack+0x2b>
 940:	ea cf       	rjmp	.-44     	; 0x916 <__stack+0x17>
 942:	b4 e0       	ldi	r27, 0x04	; 4
 944:	a6 95       	lsr	r26
 946:	97 95       	ror	r25
 948:	87 95       	ror	r24
 94a:	77 95       	ror	r23
 94c:	67 95       	ror	r22
 94e:	ba 95       	dec	r27
 950:	c9 f7       	brne	.-14     	; 0x944 <__stack+0x45>
 952:	00 97       	sbiw	r24, 0x00	; 0
 954:	61 05       	cpc	r22, r1
 956:	71 05       	cpc	r23, r1
 958:	08 95       	ret
 95a:	9b 01       	movw	r18, r22
 95c:	ac 01       	movw	r20, r24
 95e:	0a 2e       	mov	r0, r26
 960:	06 94       	lsr	r0
 962:	57 95       	ror	r21
 964:	47 95       	ror	r20
 966:	37 95       	ror	r19
 968:	27 95       	ror	r18
 96a:	ba 95       	dec	r27
 96c:	c9 f7       	brne	.-14     	; 0x960 <__stack+0x61>
 96e:	62 0f       	add	r22, r18
 970:	73 1f       	adc	r23, r19
 972:	84 1f       	adc	r24, r20
 974:	95 1f       	adc	r25, r21
 976:	a0 1d       	adc	r26, r0
 978:	08 95       	ret

0000097a <calloc>:
 97a:	0f 93       	push	r16
 97c:	1f 93       	push	r17
 97e:	cf 93       	push	r28
 980:	df 93       	push	r29
 982:	86 9f       	mul	r24, r22
 984:	80 01       	movw	r16, r0
 986:	87 9f       	mul	r24, r23
 988:	10 0d       	add	r17, r0
 98a:	96 9f       	mul	r25, r22
 98c:	10 0d       	add	r17, r0
 98e:	11 24       	eor	r1, r1
 990:	c8 01       	movw	r24, r16
 992:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <malloc>
 996:	ec 01       	movw	r28, r24
 998:	00 97       	sbiw	r24, 0x00	; 0
 99a:	29 f0       	breq	.+10     	; 0x9a6 <calloc+0x2c>
 99c:	a8 01       	movw	r20, r16
 99e:	60 e0       	ldi	r22, 0x00	; 0
 9a0:	70 e0       	ldi	r23, 0x00	; 0
 9a2:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <memset>
 9a6:	ce 01       	movw	r24, r28
 9a8:	df 91       	pop	r29
 9aa:	cf 91       	pop	r28
 9ac:	1f 91       	pop	r17
 9ae:	0f 91       	pop	r16
 9b0:	08 95       	ret

000009b2 <malloc>:
 9b2:	0f 93       	push	r16
 9b4:	1f 93       	push	r17
 9b6:	cf 93       	push	r28
 9b8:	df 93       	push	r29
 9ba:	82 30       	cpi	r24, 0x02	; 2
 9bc:	91 05       	cpc	r25, r1
 9be:	10 f4       	brcc	.+4      	; 0x9c4 <malloc+0x12>
 9c0:	82 e0       	ldi	r24, 0x02	; 2
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	e0 91 52 01 	lds	r30, 0x0152	; 0x800152 <__flp>
 9c8:	f0 91 53 01 	lds	r31, 0x0153	; 0x800153 <__flp+0x1>
 9cc:	20 e0       	ldi	r18, 0x00	; 0
 9ce:	30 e0       	ldi	r19, 0x00	; 0
 9d0:	a0 e0       	ldi	r26, 0x00	; 0
 9d2:	b0 e0       	ldi	r27, 0x00	; 0
 9d4:	30 97       	sbiw	r30, 0x00	; 0
 9d6:	19 f1       	breq	.+70     	; 0xa1e <malloc+0x6c>
 9d8:	40 81       	ld	r20, Z
 9da:	51 81       	ldd	r21, Z+1	; 0x01
 9dc:	02 81       	ldd	r16, Z+2	; 0x02
 9de:	13 81       	ldd	r17, Z+3	; 0x03
 9e0:	48 17       	cp	r20, r24
 9e2:	59 07       	cpc	r21, r25
 9e4:	c8 f0       	brcs	.+50     	; 0xa18 <malloc+0x66>
 9e6:	84 17       	cp	r24, r20
 9e8:	95 07       	cpc	r25, r21
 9ea:	69 f4       	brne	.+26     	; 0xa06 <malloc+0x54>
 9ec:	10 97       	sbiw	r26, 0x00	; 0
 9ee:	31 f0       	breq	.+12     	; 0x9fc <malloc+0x4a>
 9f0:	12 96       	adiw	r26, 0x02	; 2
 9f2:	0c 93       	st	X, r16
 9f4:	12 97       	sbiw	r26, 0x02	; 2
 9f6:	13 96       	adiw	r26, 0x03	; 3
 9f8:	1c 93       	st	X, r17
 9fa:	27 c0       	rjmp	.+78     	; 0xa4a <malloc+0x98>
 9fc:	00 93 52 01 	sts	0x0152, r16	; 0x800152 <__flp>
 a00:	10 93 53 01 	sts	0x0153, r17	; 0x800153 <__flp+0x1>
 a04:	22 c0       	rjmp	.+68     	; 0xa4a <malloc+0x98>
 a06:	21 15       	cp	r18, r1
 a08:	31 05       	cpc	r19, r1
 a0a:	19 f0       	breq	.+6      	; 0xa12 <malloc+0x60>
 a0c:	42 17       	cp	r20, r18
 a0e:	53 07       	cpc	r21, r19
 a10:	18 f4       	brcc	.+6      	; 0xa18 <malloc+0x66>
 a12:	9a 01       	movw	r18, r20
 a14:	bd 01       	movw	r22, r26
 a16:	ef 01       	movw	r28, r30
 a18:	df 01       	movw	r26, r30
 a1a:	f8 01       	movw	r30, r16
 a1c:	db cf       	rjmp	.-74     	; 0x9d4 <malloc+0x22>
 a1e:	21 15       	cp	r18, r1
 a20:	31 05       	cpc	r19, r1
 a22:	f9 f0       	breq	.+62     	; 0xa62 <malloc+0xb0>
 a24:	28 1b       	sub	r18, r24
 a26:	39 0b       	sbc	r19, r25
 a28:	24 30       	cpi	r18, 0x04	; 4
 a2a:	31 05       	cpc	r19, r1
 a2c:	80 f4       	brcc	.+32     	; 0xa4e <malloc+0x9c>
 a2e:	8a 81       	ldd	r24, Y+2	; 0x02
 a30:	9b 81       	ldd	r25, Y+3	; 0x03
 a32:	61 15       	cp	r22, r1
 a34:	71 05       	cpc	r23, r1
 a36:	21 f0       	breq	.+8      	; 0xa40 <malloc+0x8e>
 a38:	fb 01       	movw	r30, r22
 a3a:	93 83       	std	Z+3, r25	; 0x03
 a3c:	82 83       	std	Z+2, r24	; 0x02
 a3e:	04 c0       	rjmp	.+8      	; 0xa48 <malloc+0x96>
 a40:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <__flp+0x1>
 a44:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__flp>
 a48:	fe 01       	movw	r30, r28
 a4a:	32 96       	adiw	r30, 0x02	; 2
 a4c:	44 c0       	rjmp	.+136    	; 0xad6 <malloc+0x124>
 a4e:	fe 01       	movw	r30, r28
 a50:	e2 0f       	add	r30, r18
 a52:	f3 1f       	adc	r31, r19
 a54:	81 93       	st	Z+, r24
 a56:	91 93       	st	Z+, r25
 a58:	22 50       	subi	r18, 0x02	; 2
 a5a:	31 09       	sbc	r19, r1
 a5c:	39 83       	std	Y+1, r19	; 0x01
 a5e:	28 83       	st	Y, r18
 a60:	3a c0       	rjmp	.+116    	; 0xad6 <malloc+0x124>
 a62:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__brkval>
 a66:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__brkval+0x1>
 a6a:	23 2b       	or	r18, r19
 a6c:	41 f4       	brne	.+16     	; 0xa7e <malloc+0xcc>
 a6e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 a72:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 a76:	30 93 51 01 	sts	0x0151, r19	; 0x800151 <__brkval+0x1>
 a7a:	20 93 50 01 	sts	0x0150, r18	; 0x800150 <__brkval>
 a7e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 a82:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 a86:	21 15       	cp	r18, r1
 a88:	31 05       	cpc	r19, r1
 a8a:	41 f4       	brne	.+16     	; 0xa9c <malloc+0xea>
 a8c:	2d b7       	in	r18, 0x3d	; 61
 a8e:	3e b7       	in	r19, 0x3e	; 62
 a90:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 a94:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 a98:	24 1b       	sub	r18, r20
 a9a:	35 0b       	sbc	r19, r21
 a9c:	e0 91 50 01 	lds	r30, 0x0150	; 0x800150 <__brkval>
 aa0:	f0 91 51 01 	lds	r31, 0x0151	; 0x800151 <__brkval+0x1>
 aa4:	e2 17       	cp	r30, r18
 aa6:	f3 07       	cpc	r31, r19
 aa8:	a0 f4       	brcc	.+40     	; 0xad2 <malloc+0x120>
 aaa:	2e 1b       	sub	r18, r30
 aac:	3f 0b       	sbc	r19, r31
 aae:	28 17       	cp	r18, r24
 ab0:	39 07       	cpc	r19, r25
 ab2:	78 f0       	brcs	.+30     	; 0xad2 <malloc+0x120>
 ab4:	ac 01       	movw	r20, r24
 ab6:	4e 5f       	subi	r20, 0xFE	; 254
 ab8:	5f 4f       	sbci	r21, 0xFF	; 255
 aba:	24 17       	cp	r18, r20
 abc:	35 07       	cpc	r19, r21
 abe:	48 f0       	brcs	.+18     	; 0xad2 <malloc+0x120>
 ac0:	4e 0f       	add	r20, r30
 ac2:	5f 1f       	adc	r21, r31
 ac4:	50 93 51 01 	sts	0x0151, r21	; 0x800151 <__brkval+0x1>
 ac8:	40 93 50 01 	sts	0x0150, r20	; 0x800150 <__brkval>
 acc:	81 93       	st	Z+, r24
 ace:	91 93       	st	Z+, r25
 ad0:	02 c0       	rjmp	.+4      	; 0xad6 <malloc+0x124>
 ad2:	e0 e0       	ldi	r30, 0x00	; 0
 ad4:	f0 e0       	ldi	r31, 0x00	; 0
 ad6:	cf 01       	movw	r24, r30
 ad8:	df 91       	pop	r29
 ada:	cf 91       	pop	r28
 adc:	1f 91       	pop	r17
 ade:	0f 91       	pop	r16
 ae0:	08 95       	ret

00000ae2 <free>:
 ae2:	cf 93       	push	r28
 ae4:	df 93       	push	r29
 ae6:	00 97       	sbiw	r24, 0x00	; 0
 ae8:	09 f4       	brne	.+2      	; 0xaec <free+0xa>
 aea:	81 c0       	rjmp	.+258    	; 0xbee <free+0x10c>
 aec:	fc 01       	movw	r30, r24
 aee:	32 97       	sbiw	r30, 0x02	; 2
 af0:	13 82       	std	Z+3, r1	; 0x03
 af2:	12 82       	std	Z+2, r1	; 0x02
 af4:	a0 91 52 01 	lds	r26, 0x0152	; 0x800152 <__flp>
 af8:	b0 91 53 01 	lds	r27, 0x0153	; 0x800153 <__flp+0x1>
 afc:	10 97       	sbiw	r26, 0x00	; 0
 afe:	81 f4       	brne	.+32     	; 0xb20 <free+0x3e>
 b00:	20 81       	ld	r18, Z
 b02:	31 81       	ldd	r19, Z+1	; 0x01
 b04:	82 0f       	add	r24, r18
 b06:	93 1f       	adc	r25, r19
 b08:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__brkval>
 b0c:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__brkval+0x1>
 b10:	28 17       	cp	r18, r24
 b12:	39 07       	cpc	r19, r25
 b14:	51 f5       	brne	.+84     	; 0xb6a <free+0x88>
 b16:	f0 93 51 01 	sts	0x0151, r31	; 0x800151 <__brkval+0x1>
 b1a:	e0 93 50 01 	sts	0x0150, r30	; 0x800150 <__brkval>
 b1e:	67 c0       	rjmp	.+206    	; 0xbee <free+0x10c>
 b20:	ed 01       	movw	r28, r26
 b22:	20 e0       	ldi	r18, 0x00	; 0
 b24:	30 e0       	ldi	r19, 0x00	; 0
 b26:	ce 17       	cp	r28, r30
 b28:	df 07       	cpc	r29, r31
 b2a:	40 f4       	brcc	.+16     	; 0xb3c <free+0x5a>
 b2c:	4a 81       	ldd	r20, Y+2	; 0x02
 b2e:	5b 81       	ldd	r21, Y+3	; 0x03
 b30:	9e 01       	movw	r18, r28
 b32:	41 15       	cp	r20, r1
 b34:	51 05       	cpc	r21, r1
 b36:	f1 f0       	breq	.+60     	; 0xb74 <free+0x92>
 b38:	ea 01       	movw	r28, r20
 b3a:	f5 cf       	rjmp	.-22     	; 0xb26 <free+0x44>
 b3c:	d3 83       	std	Z+3, r29	; 0x03
 b3e:	c2 83       	std	Z+2, r28	; 0x02
 b40:	40 81       	ld	r20, Z
 b42:	51 81       	ldd	r21, Z+1	; 0x01
 b44:	84 0f       	add	r24, r20
 b46:	95 1f       	adc	r25, r21
 b48:	c8 17       	cp	r28, r24
 b4a:	d9 07       	cpc	r29, r25
 b4c:	59 f4       	brne	.+22     	; 0xb64 <free+0x82>
 b4e:	88 81       	ld	r24, Y
 b50:	99 81       	ldd	r25, Y+1	; 0x01
 b52:	84 0f       	add	r24, r20
 b54:	95 1f       	adc	r25, r21
 b56:	02 96       	adiw	r24, 0x02	; 2
 b58:	91 83       	std	Z+1, r25	; 0x01
 b5a:	80 83       	st	Z, r24
 b5c:	8a 81       	ldd	r24, Y+2	; 0x02
 b5e:	9b 81       	ldd	r25, Y+3	; 0x03
 b60:	93 83       	std	Z+3, r25	; 0x03
 b62:	82 83       	std	Z+2, r24	; 0x02
 b64:	21 15       	cp	r18, r1
 b66:	31 05       	cpc	r19, r1
 b68:	29 f4       	brne	.+10     	; 0xb74 <free+0x92>
 b6a:	f0 93 53 01 	sts	0x0153, r31	; 0x800153 <__flp+0x1>
 b6e:	e0 93 52 01 	sts	0x0152, r30	; 0x800152 <__flp>
 b72:	3d c0       	rjmp	.+122    	; 0xbee <free+0x10c>
 b74:	e9 01       	movw	r28, r18
 b76:	fb 83       	std	Y+3, r31	; 0x03
 b78:	ea 83       	std	Y+2, r30	; 0x02
 b7a:	49 91       	ld	r20, Y+
 b7c:	59 91       	ld	r21, Y+
 b7e:	c4 0f       	add	r28, r20
 b80:	d5 1f       	adc	r29, r21
 b82:	ec 17       	cp	r30, r28
 b84:	fd 07       	cpc	r31, r29
 b86:	61 f4       	brne	.+24     	; 0xba0 <free+0xbe>
 b88:	80 81       	ld	r24, Z
 b8a:	91 81       	ldd	r25, Z+1	; 0x01
 b8c:	84 0f       	add	r24, r20
 b8e:	95 1f       	adc	r25, r21
 b90:	02 96       	adiw	r24, 0x02	; 2
 b92:	e9 01       	movw	r28, r18
 b94:	99 83       	std	Y+1, r25	; 0x01
 b96:	88 83       	st	Y, r24
 b98:	82 81       	ldd	r24, Z+2	; 0x02
 b9a:	93 81       	ldd	r25, Z+3	; 0x03
 b9c:	9b 83       	std	Y+3, r25	; 0x03
 b9e:	8a 83       	std	Y+2, r24	; 0x02
 ba0:	e0 e0       	ldi	r30, 0x00	; 0
 ba2:	f0 e0       	ldi	r31, 0x00	; 0
 ba4:	12 96       	adiw	r26, 0x02	; 2
 ba6:	8d 91       	ld	r24, X+
 ba8:	9c 91       	ld	r25, X
 baa:	13 97       	sbiw	r26, 0x03	; 3
 bac:	00 97       	sbiw	r24, 0x00	; 0
 bae:	19 f0       	breq	.+6      	; 0xbb6 <free+0xd4>
 bb0:	fd 01       	movw	r30, r26
 bb2:	dc 01       	movw	r26, r24
 bb4:	f7 cf       	rjmp	.-18     	; 0xba4 <free+0xc2>
 bb6:	8d 91       	ld	r24, X+
 bb8:	9c 91       	ld	r25, X
 bba:	11 97       	sbiw	r26, 0x01	; 1
 bbc:	9d 01       	movw	r18, r26
 bbe:	2e 5f       	subi	r18, 0xFE	; 254
 bc0:	3f 4f       	sbci	r19, 0xFF	; 255
 bc2:	82 0f       	add	r24, r18
 bc4:	93 1f       	adc	r25, r19
 bc6:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__brkval>
 bca:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__brkval+0x1>
 bce:	28 17       	cp	r18, r24
 bd0:	39 07       	cpc	r19, r25
 bd2:	69 f4       	brne	.+26     	; 0xbee <free+0x10c>
 bd4:	30 97       	sbiw	r30, 0x00	; 0
 bd6:	29 f4       	brne	.+10     	; 0xbe2 <free+0x100>
 bd8:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <__flp+0x1>
 bdc:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <__flp>
 be0:	02 c0       	rjmp	.+4      	; 0xbe6 <free+0x104>
 be2:	13 82       	std	Z+3, r1	; 0x03
 be4:	12 82       	std	Z+2, r1	; 0x02
 be6:	b0 93 51 01 	sts	0x0151, r27	; 0x800151 <__brkval+0x1>
 bea:	a0 93 50 01 	sts	0x0150, r26	; 0x800150 <__brkval>
 bee:	df 91       	pop	r29
 bf0:	cf 91       	pop	r28
 bf2:	08 95       	ret

00000bf4 <memset>:
 bf4:	dc 01       	movw	r26, r24
 bf6:	01 c0       	rjmp	.+2      	; 0xbfa <memset+0x6>
 bf8:	6d 93       	st	X+, r22
 bfa:	41 50       	subi	r20, 0x01	; 1
 bfc:	50 40       	sbci	r21, 0x00	; 0
 bfe:	e0 f7       	brcc	.-8      	; 0xbf8 <memset+0x4>
 c00:	08 95       	ret

00000c02 <_exit>:
 c02:	f8 94       	cli

00000c04 <__stop_program>:
 c04:	ff cf       	rjmp	.-2      	; 0xc04 <__stop_program>
